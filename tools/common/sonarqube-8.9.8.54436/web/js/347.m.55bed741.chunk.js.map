{"version":3,"sources":["webpack:///./src/main/js/apps/quality-profiles/details/ProfileExporters.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ChangeParentForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileInheritanceBox.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileInheritance.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsFormSelect.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsGroup.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissionsUser.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfilePermissions.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ChangeProjectsForm.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileProjects.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesDeprecatedWarning.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesRowOfType.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesRowTotal.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRulesSonarWayComparison.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileRules.tsx","webpack:///./src/main/js/apps/quality-profiles/details/ProfileDetails.tsx","webpack:///./src/main/js/api/quality-profiles.ts","webpack:///./src/main/js/apps/quality-profiles/components/BuiltInQualityProfileBadge.tsx","webpack:///./src/main/js/apps/quality-profiles/components/ProfileLink.tsx"],"names":["exporter","profile","this","props","exporters","exportersForLanguage","filter","e","languages","includes","language","length","className","map","index","undefined","key","href","getExportUrl","rel","target","name","mounted","state","loading","selected","handleSelectChange","option","setState","value","handleFormSubmit","event","preventDefault","parent","profiles","find","p","then","onChange","catch","options","label","isBuiltIn","submitDisabled","parentKey","contentLabel","onRequestClose","onClose","size","id","onSubmit","htmlFor","clearable","disabled","onClick","ProfileInheritanceBox","depth","extendsBuiltIn","displayLink","type","offset","style","paddingLeft","ProfileLink","BuiltInQualityProfileBadge","overlay","activeRuleCount","overridingRuleCount","formOpen","handleChangeParentClick","closeForm","handleParentChange","updateProfiles","loadData","prevProps","r","ancestors","children","reverse","highlightCurrent","some","actions","edit","ancestor","child","super","handleSearch","query","onSearch","searchResults","handleInputChange","noResultsText","getStringValue","autoFocus","filterOptions","isLoading","onInputChange","optionRenderer","placeholder","searchable","valueRenderer","isUser","login","Avatar","hash","avatar","submitting","stopSubmitting","handleUserAdd","user","qualityProfile","onUserAdd","handleGroupAdd","group","onGroupAdd","q","parameters","Promise","all","usersResponse","groupsResponse","users","groups","handleValueChange","header","deleteModal","handleDeleteClick","handleDeleteModalClose","handleDelete","onDelete","renderDeleteModal","defaultMessage","values","onSubmitClick","onCloseClick","lineHeight","addUserForm","handleAddUserButtonClick","handleAddUserFormClose","addedUser","handleUserDelete","removedUser","addedGroup","handleGroupDelete","removedGroup","fetchUsersAndGroups","fetchProjects","searchParams","page","ps","pageSize","data","prevState","more","projects","results","newSeletedProjects","project","selectedProjects","lastSearchParams","needToReload","projectsTotalCount","paging","total","handleSelect","handleUnselect","handleCloseClick","renderElement","allowBulkSelection","elements","elementsTotalCount","labelAll","labelSelected","labelUnselected","SelectList","All","onSelect","onUnselect","selectedElements","withPaging","loadingMore","stopLoading","loadMore","handleChangeClick","loadProjects","isDefault","to","qualifier","count","ready","associateProjects","renderDefault","renderProjects","ProfileRulesDeprecatedWarning","qprofile","activeDeprecatedRules","ProfileRulesRowOfType","activeRulesUrl","activation","types","inactiveRulesUrl","inactiveCount","ProfileRulesRowTotal","ProfileRulesSonarWayComparison","url","compareToProfile","sonarway","sonarWayMissingRules","TYPES","activatedTotal","activatedByType","t","val","allByType","compareToSonarWay","loadRules","resolve","facets","loadAllRules","loadActivatedRules","loadProfile","responses","allRules","activatedRules","showProfile","activateMoreUrl","getRulesCountForType","getRulesTotalForType","copy","activeDeprecatedRuleCount","missingRuleCount","ProfileDetails","searchQualityProfiles","getQualityProfile","createQualityProfile","restoreQualityProfile","getProfileProjects","getProfileInheritance","setDefaultProfile","renameProfile","copyProfile","fromKey","toName","deleteProfile","changeProfileParent","parentProfile","parentQualityProfile","getQualityProfileBackupUrl","queryParams","Object","entries","encodeURIComponent","join","getQualityProfileExporterUrl","exporterKey","getImporters","importers","getExporters","getProfileChangelog","since","compareProfiles","leftKey","rightKey","associateProject","dissociateProject","searchUsers","searchGroups","addUser","removeUser","addGroup","removeGroup","bulkActivateRules","bulkDeactivateRules","activateRule","params","deactivateRule","tooltip","badge","other","activeClassName"],"mappings":"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","file":"js/347.m.55bed741.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityProfileExporterUrl } from '../../../api/quality-profiles';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { Exporter, Profile } from '../types';\n\ninterface Props {\n  exporters: Exporter[];\n  profile: Profile;\n}\n\nexport default class ProfileExporters extends React.PureComponent<Props> {\n  getExportUrl(exporter: Exporter) {\n    const { profile } = this.props;\n    return `${getBaseUrl()}${getQualityProfileExporterUrl(exporter, profile)}`;\n  }\n\n  render() {\n    const { exporters, profile } = this.props;\n    const exportersForLanguage = exporters.filter(e => e.languages.includes(profile.language));\n\n    if (exportersForLanguage.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"boxed-group quality-profile-exporters\">\n        <h2>{translate('quality_profiles.exporters')}</h2>\n        <div className=\"boxed-group-inner\">\n          <ul>\n            {exportersForLanguage.map((exporter, index) => (\n              <li\n                className={index > 0 ? 'spacer-top' : undefined}\n                data-key={exporter.key}\n                key={exporter.key}>\n                <a href={this.getExportUrl(exporter)} rel=\"noopener noreferrer\" target=\"_blank\">\n                  {exporter.name}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { changeProfileParent } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\n\ninterface Props {\n  onChange: () => void;\n  onClose: () => void;\n  profile: Profile;\n  profiles: Profile[];\n}\n\ninterface State {\n  loading: boolean;\n  selected: string | null;\n}\n\nexport default class ChangeParentForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    loading: false,\n    selected: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSelectChange = (option: { value: string }) => {\n    this.setState({ selected: option.value });\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const parent = this.props.profiles.find(p => p.key === this.state.selected);\n\n    this.setState({ loading: true });\n    changeProfileParent(this.props.profile, parent)\n      .then(this.props.onChange)\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  render() {\n    const { profiles } = this.props;\n\n    const options = [\n      { label: translate('none'), value: '' },\n      ...sortBy(profiles, 'name').map(profile => ({\n        label: profile.isBuiltIn\n          ? `${profile.name} (${translate('quality_profiles.built_in')})`\n          : profile.name,\n        value: profile.key\n      }))\n    ];\n\n    const submitDisabled =\n      this.state.loading ||\n      this.state.selected == null ||\n      this.state.selected === this.props.profile.parentKey;\n\n    return (\n      <Modal\n        contentLabel={translate('quality_profiles.change_parent')}\n        onRequestClose={this.props.onClose}\n        size=\"small\">\n        <form id=\"change-profile-parent-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{translate('quality_profiles.change_parent')}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <MandatoryFieldsExplanation className=\"modal-field\" />\n            <div className=\"modal-field\">\n              <label htmlFor=\"change-profile-parent\">\n                {translate('quality_profiles.parent')}\n                <MandatoryFieldMarker />\n              </label>\n              <Select\n                clearable={false}\n                id=\"change-profile-parent\"\n                name=\"parentKey\"\n                onChange={this.handleSelectChange}\n                options={options}\n                value={\n                  this.state.selected != null\n                    ? this.state.selected\n                    : this.props.profile.parentKey || ''\n                }\n              />\n            </div>\n          </div>\n          <div className=\"modal-foot\">\n            {this.state.loading && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitDisabled} id=\"change-profile-parent-submit\">\n              {translate('change_verb')}\n            </SubmitButton>\n            <ResetButtonLink id=\"change-profile-parent-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport BuiltInQualityProfileBadge from '../components/BuiltInQualityProfileBadge';\nimport ProfileLink from '../components/ProfileLink';\n\ninterface Props {\n  className?: string;\n  depth: number;\n  displayLink?: boolean;\n  extendsBuiltIn?: boolean;\n  language: string;\n  profile: T.ProfileInheritanceDetails;\n  type?: string;\n}\n\nexport default function ProfileInheritanceBox(props: Props) {\n  const {\n    className,\n    depth,\n    extendsBuiltIn,\n    language,\n    profile,\n    displayLink = true,\n    type = 'current'\n  } = props;\n  const offset = 25 * depth;\n\n  return (\n    <tr className={classNames(`it__quality-profiles__inheritance-${type}`, className)}>\n      <td>\n        <div style={{ paddingLeft: offset }}>\n          {displayLink ? (\n            <ProfileLink className=\"text-middle\" language={language} name={profile.name}>\n              {profile.name}\n            </ProfileLink>\n          ) : (\n            <span className=\"text-middle\">{profile.name}</span>\n          )}\n          {profile.isBuiltIn && <BuiltInQualityProfileBadge className=\"spacer-left\" />}\n          {extendsBuiltIn && (\n            <HelpTooltip\n              className=\"spacer-left\"\n              overlay={translate('quality_profiles.extends_built_in')}\n            />\n          )}\n        </div>\n      </td>\n\n      <td>{translateWithParameters('quality_profile.x_active_rules', profile.activeRuleCount)}</td>\n\n      <td>\n        {profile.overridingRuleCount != null && (\n          <p>\n            {translateWithParameters(\n              'quality_profiles.x_overridden_rules',\n              profile.overridingRuleCount\n            )}\n          </p>\n        )}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProfileInheritance } from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport ChangeParentForm from './ChangeParentForm';\nimport ProfileInheritanceBox from './ProfileInheritanceBox';\n\ninterface Props {\n  profile: Profile;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\ninterface State {\n  ancestors?: T.ProfileInheritanceDetails[];\n  children?: T.ProfileInheritanceDetails[];\n  formOpen: boolean;\n  loading: boolean;\n  profile?: T.ProfileInheritanceDetails;\n}\n\nexport default class ProfileInheritance extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    formOpen: false,\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadData();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadData() {\n    getProfileInheritance(this.props.profile).then(\n      r => {\n        if (this.mounted) {\n          const { ancestors, children } = r;\n          ancestors.reverse();\n\n          this.setState({\n            children,\n            ancestors,\n            profile: r.profile,\n            loading: false\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleChangeParentClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  closeForm = () => {\n    this.setState({ formOpen: false });\n  };\n\n  handleParentChange = () => {\n    this.props.updateProfiles().then(\n      () => {\n        this.loadData();\n      },\n      () => {}\n    );\n    this.closeForm();\n  };\n\n  render() {\n    const { profile, profiles } = this.props;\n    const { ancestors } = this.state;\n\n    const highlightCurrent =\n      !this.state.loading &&\n      ancestors != null &&\n      this.state.children != null &&\n      (ancestors.length > 0 || this.state.children.length > 0);\n\n    const extendsBuiltIn = ancestors != null && ancestors.some(profile => profile.isBuiltIn);\n\n    return (\n      <div className=\"boxed-group quality-profile-inheritance\">\n        {profile.actions && profile.actions.edit && !profile.isBuiltIn && (\n          <div className=\"boxed-group-actions\">\n            <Button className=\"pull-right js-change-parent\" onClick={this.handleChangeParentClick}>\n              {translate('quality_profiles.change_parent')}\n            </Button>\n          </div>\n        )}\n\n        <header className=\"boxed-group-header\">\n          <h2>{translate('quality_profiles.profile_inheritance')}</h2>\n        </header>\n\n        <div className=\"boxed-group-inner\">\n          {this.state.loading ? (\n            <i className=\"spinner\" />\n          ) : (\n            <table className=\"data zebra\">\n              <tbody>\n                {ancestors != null &&\n                  ancestors.map((ancestor, index) => (\n                    <ProfileInheritanceBox\n                      depth={index}\n                      key={ancestor.key}\n                      language={profile.language}\n                      profile={ancestor}\n                      type=\"ancestor\"\n                    />\n                  ))}\n\n                {this.state.profile != null && (\n                  <ProfileInheritanceBox\n                    className={classNames({\n                      selected: highlightCurrent\n                    })}\n                    depth={ancestors ? ancestors.length : 0}\n                    displayLink={false}\n                    extendsBuiltIn={extendsBuiltIn}\n                    language={profile.language}\n                    profile={this.state.profile}\n                  />\n                )}\n\n                {this.state.children != null &&\n                  this.state.children.map(child => (\n                    <ProfileInheritanceBox\n                      depth={ancestors ? ancestors.length + 1 : 0}\n                      key={child.key}\n                      language={profile.language}\n                      profile={child}\n                      type=\"child\"\n                    />\n                  ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n\n        {this.state.formOpen && (\n          <ChangeParentForm\n            onChange={this.handleParentChange}\n            onClose={this.closeForm}\n            profile={profile}\n            profiles={profiles.filter(p => p !== profile && p.language === profile.language)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce, identity } from 'lodash';\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport GroupIcon from 'sonar-ui-common/components/icons/GroupIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport Avatar from '../../../components/ui/Avatar';\nimport { Group } from './ProfilePermissions';\n\ntype Option = T.UserSelected | Group;\ntype OptionWithValue = Option & { value: string };\n\ninterface Props {\n  onChange: (option: OptionWithValue) => void;\n  onSearch: (query: string) => Promise<Option[]>;\n  selected?: Option;\n}\n\ninterface State {\n  loading: boolean;\n  query: string;\n  searchResults: Option[];\n}\n\nexport default class ProfilePermissionsFormSelect extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.handleSearch = debounce(this.handleSearch, 250);\n    this.state = { loading: false, query: '', searchResults: [] };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.handleSearch(this.state.query);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSearch = (query: string) => {\n    this.setState({ loading: true });\n    this.props.onSearch(query).then(\n      searchResults => {\n        if (this.mounted) {\n          this.setState({ loading: false, searchResults });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleInputChange = (query: string) => {\n    this.setState({ query });\n    if (query.length > 1) {\n      this.handleSearch(query);\n    }\n  };\n\n  render() {\n    const noResultsText =\n      this.state.query.length === 1\n        ? translateWithParameters('select2.tooShort', 2)\n        : translate('no_results');\n\n    // create a uniq string both for users and groups\n    const options = this.state.searchResults.map(r => ({ ...r, value: getStringValue(r) }));\n\n    return (\n      <Select\n        autoFocus={true}\n        className=\"Select-big\"\n        clearable={false}\n        // disable default react-select filtering\n        filterOptions={identity}\n        isLoading={this.state.loading}\n        noResultsText={noResultsText}\n        onChange={this.props.onChange}\n        onInputChange={this.handleInputChange}\n        optionRenderer={optionRenderer}\n        options={options}\n        placeholder=\"\"\n        searchable={true}\n        value={this.props.selected && getStringValue(this.props.selected)}\n        valueRenderer={optionRenderer}\n      />\n    );\n  }\n}\n\nfunction isUser(option: Option): option is T.UserSelected {\n  return (option as T.UserSelected).login !== undefined;\n}\n\nfunction getStringValue(option: Option) {\n  return isUser(option) ? `user:${option.login}` : `group:${option.name}`;\n}\n\nfunction optionRenderer(option: OptionWithValue) {\n  return isUser(option) ? (\n    <>\n      <Avatar hash={option.avatar} name={option.name} size={16} />\n      <strong className=\"spacer-left\">{option.name}</strong>\n      <span className=\"note little-spacer-left\">{option.login}</span>\n    </>\n  ) : (\n    <>\n      <GroupIcon size={16} />\n      <strong className=\"spacer-left\">{option.name}</strong>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  addGroup,\n  addUser,\n  searchGroups,\n  searchUsers,\n  SearchUsersGroupsParameters\n} from '../../../api/quality-profiles';\nimport { Group } from './ProfilePermissions';\nimport ProfilePermissionsFormSelect from './ProfilePermissionsFormSelect';\n\ninterface Props {\n  onClose: () => void;\n  onGroupAdd: (group: Group) => void;\n  onUserAdd: (user: T.UserSelected) => void;\n  profile: { language: string; name: string };\n}\n\ninterface State {\n  selected?: T.UserSelected | Group;\n  submitting: boolean;\n}\n\nexport default class ProfilePermissionsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleUserAdd = (user: T.UserSelected) => {\n    const {\n      profile: { language, name }\n    } = this.props;\n    addUser({\n      language,\n      login: user.login,\n      qualityProfile: name\n    }).then(() => this.props.onUserAdd(user), this.stopSubmitting);\n  };\n\n  handleGroupAdd = (group: Group) => {\n    const {\n      profile: { language, name }\n    } = this.props;\n    addGroup({\n      group: group.name,\n      language,\n      qualityProfile: name\n    }).then(() => this.props.onGroupAdd(group), this.stopSubmitting);\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { selected } = this.state;\n    if (selected) {\n      this.setState({ submitting: true });\n      if ((selected as T.UserSelected).login !== undefined) {\n        this.handleUserAdd(selected as T.UserSelected);\n      } else {\n        this.handleGroupAdd(selected as Group);\n      }\n    }\n  };\n\n  handleSearch = (q: string) => {\n    const { profile } = this.props;\n    const parameters: SearchUsersGroupsParameters = {\n      language: profile.language,\n      q,\n      qualityProfile: profile.name,\n      selected: 'deselected'\n    };\n    return Promise.all([\n      searchUsers(parameters),\n      searchGroups(parameters)\n    ]).then(([usersResponse, groupsResponse]) => [\n      ...usersResponse.users,\n      ...groupsResponse.groups\n    ]);\n  };\n\n  handleValueChange = (selected: T.UserSelected | Group) => {\n    this.setState({ selected });\n  };\n\n  render() {\n    const header = translate('quality_profiles.grant_permissions_to_user_or_group');\n    const submitDisabled = !this.state.selected || this.state.submitting;\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-body\">\n            <div className=\"modal-field\">\n              <label>{translate('quality_profiles.search_description')}</label>\n              <ProfilePermissionsFormSelect\n                onChange={this.handleValueChange}\n                onSearch={this.handleSearch}\n                selected={this.state.selected}\n              />\n            </div>\n          </div>\n          <footer className=\"modal-foot\">\n            {this.state.submitting && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitDisabled}>{translate('add_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, DeleteButton, ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal, { ChildrenProps } from 'sonar-ui-common/components/controls/SimpleModal';\nimport GroupIcon from 'sonar-ui-common/components/icons/GroupIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { removeGroup } from '../../../api/quality-profiles';\nimport { Group } from './ProfilePermissions';\n\ninterface Props {\n  group: Group;\n  onDelete: (group: Group) => void;\n  profile: { language: string; name: string };\n}\n\ninterface State {\n  deleteModal: boolean;\n}\n\nexport default class ProfilePermissionsGroup extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleteModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeleteClick = () => {\n    this.setState({ deleteModal: true });\n  };\n\n  handleDeleteModalClose = () => {\n    if (this.mounted) {\n      this.setState({ deleteModal: false });\n    }\n  };\n\n  handleDelete = () => {\n    const { group, profile } = this.props;\n\n    return removeGroup({\n      group: group.name,\n      language: profile.language,\n      qualityProfile: profile.name\n    }).then(() => {\n      this.handleDeleteModalClose();\n      this.props.onDelete(group);\n    });\n  };\n\n  renderDeleteModal = (props: ChildrenProps) => (\n    <div>\n      <header className=\"modal-head\">\n        <h2>{translate('groups.remove')}</h2>\n      </header>\n\n      <div className=\"modal-body\">\n        <FormattedMessage\n          defaultMessage={translate('groups.remove.confirmation')}\n          id=\"groups.remove.confirmation\"\n          values={{\n            user: <strong>{this.props.group.name}</strong>\n          }}\n        />\n      </div>\n\n      <footer className=\"modal-foot\">\n        {props.submitting && <i className=\"spinner spacer-right\" />}\n        <Button className=\"button-red\" disabled={props.submitting} onClick={props.onSubmitClick}>\n          {translate('remove')}\n        </Button>\n        <ResetButtonLink onClick={props.onCloseClick}>{translate('cancel')}</ResetButtonLink>\n      </footer>\n    </div>\n  );\n\n  render() {\n    const { group } = this.props;\n\n    return (\n      <div className=\"clearfix big-spacer-bottom\">\n        <DeleteButton\n          className=\"pull-right spacer-top spacer-left spacer-right button-small\"\n          onClick={this.handleDeleteClick}\n        />\n        <GroupIcon className=\"pull-left spacer-right\" size={32} />\n        <div className=\"overflow-hidden\" style={{ lineHeight: '32px' }}>\n          <strong>{group.name}</strong>\n        </div>\n\n        {this.state.deleteModal && (\n          <SimpleModal\n            header={translate('group.remove')}\n            onClose={this.handleDeleteModalClose}\n            onSubmit={this.handleDelete}>\n            {this.renderDeleteModal}\n          </SimpleModal>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  DeleteButton,\n  ResetButtonLink,\n  SubmitButton\n} from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal, { ChildrenProps } from 'sonar-ui-common/components/controls/SimpleModal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { removeUser } from '../../../api/quality-profiles';\nimport Avatar from '../../../components/ui/Avatar';\n\ninterface Props {\n  onDelete: (user: T.UserSelected) => void;\n  profile: { language: string; name: string };\n  user: T.UserSelected;\n}\n\ninterface State {\n  deleteModal: boolean;\n}\n\nexport default class ProfilePermissionsUser extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleteModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeleteClick = () => {\n    this.setState({ deleteModal: true });\n  };\n\n  handleDeleteModalClose = () => {\n    if (this.mounted) {\n      this.setState({ deleteModal: false });\n    }\n  };\n\n  handleDelete = () => {\n    const { profile, user } = this.props;\n\n    return removeUser({\n      language: profile.language,\n      login: user.login,\n      qualityProfile: profile.name\n    }).then(() => {\n      this.handleDeleteModalClose();\n      this.props.onDelete(user);\n    });\n  };\n\n  renderDeleteModal = (props: ChildrenProps) => (\n    <div>\n      <header className=\"modal-head\">\n        <h2>{translate('users.remove')}</h2>\n      </header>\n\n      <div className=\"modal-body\">\n        <FormattedMessage\n          defaultMessage={translate('users.remove.confirmation')}\n          id=\"users.remove.confirmation\"\n          values={{\n            user: <strong>{this.props.user.name}</strong>\n          }}\n        />\n      </div>\n\n      <footer className=\"modal-foot\">\n        {props.submitting && <i className=\"spinner spacer-right\" />}\n        <SubmitButton\n          className=\"button-red\"\n          disabled={props.submitting}\n          onClick={props.onSubmitClick}>\n          {translate('remove')}\n        </SubmitButton>\n        <ResetButtonLink onClick={props.onCloseClick}>{translate('cancel')}</ResetButtonLink>\n      </footer>\n    </div>\n  );\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <div className=\"clearfix big-spacer-bottom\">\n        <DeleteButton\n          className=\"pull-right spacer-top spacer-left spacer-right button-small\"\n          onClick={this.handleDeleteClick}\n        />\n        <Avatar className=\"pull-left spacer-right\" hash={user.avatar} name={user.name} size={32} />\n        <div className=\"overflow-hidden\">\n          <strong>{user.name}</strong>\n          <div className=\"note\">{user.login}</div>\n        </div>\n\n        {this.state.deleteModal && (\n          <SimpleModal\n            header={translate('users.remove')}\n            onClose={this.handleDeleteModalClose}\n            onSubmit={this.handleDelete}>\n            {this.renderDeleteModal}\n          </SimpleModal>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy, uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  searchGroups,\n  searchUsers,\n  SearchUsersGroupsParameters\n} from '../../../api/quality-profiles';\nimport { Profile } from '../types';\nimport ProfilePermissionsForm from './ProfilePermissionsForm';\nimport ProfilePermissionsGroup from './ProfilePermissionsGroup';\nimport ProfilePermissionsUser from './ProfilePermissionsUser';\n\nexport interface Group {\n  name: string;\n}\n\ninterface Props {\n  profile: Pick<Profile, 'key' | 'language' | 'name'>;\n}\n\ninterface State {\n  addUserForm: boolean;\n  groups?: Group[];\n  loading: boolean;\n  users?: T.UserSelected[];\n}\n\nexport default class ProfilePermissions extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { addUserForm: false, loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchUsersAndGroups();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.fetchUsersAndGroups();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchUsersAndGroups() {\n    this.setState({ loading: true });\n    const { profile } = this.props;\n    const parameters: SearchUsersGroupsParameters = {\n      language: profile.language,\n      qualityProfile: profile.name,\n      selected: 'selected'\n    };\n    Promise.all([searchUsers(parameters), searchGroups(parameters)]).then(\n      ([usersResponse, groupsResponse]) => {\n        if (this.mounted) {\n          this.setState({\n            groups: groupsResponse.groups,\n            loading: false,\n            users: usersResponse.users\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleAddUserButtonClick = () => {\n    this.setState({ addUserForm: true });\n  };\n\n  handleAddUserFormClose = () => {\n    if (this.mounted) {\n      this.setState({ addUserForm: false });\n    }\n  };\n\n  handleUserAdd = (addedUser: T.UserSelected) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        addUserForm: false,\n        users: state.users && uniqBy([...state.users, addedUser], user => user.login)\n      }));\n    }\n  };\n\n  handleUserDelete = (removedUser: T.UserSelected) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        users: state.users && state.users.filter(user => user !== removedUser)\n      }));\n    }\n  };\n\n  handleGroupAdd = (addedGroup: T.Group) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        addUserForm: false,\n        groups: state.groups && uniqBy([...state.groups, addedGroup], group => group.name)\n      }));\n    }\n  };\n\n  handleGroupDelete = (removedGroup: T.Group) => {\n    if (this.mounted) {\n      this.setState((state: State) => ({\n        groups: state.groups && state.groups.filter(group => group !== removedGroup)\n      }));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"boxed-group\">\n        <h2>{translate('permissions.page')}</h2>\n        <div className=\"boxed-group-inner\">\n          <p className=\"note\">{translate('quality_profiles.default_permissions')}</p>\n\n          {this.state.loading ? (\n            <div className=\"big-spacer-top\">\n              <i className=\"spinner\" />\n            </div>\n          ) : (\n            <div className=\"big-spacer-top\">\n              {this.state.users &&\n                sortBy(this.state.users, 'name').map(user => (\n                  <ProfilePermissionsUser\n                    key={user.login}\n                    onDelete={this.handleUserDelete}\n                    profile={this.props.profile}\n                    user={user}\n                  />\n                ))}\n              {this.state.groups &&\n                sortBy(this.state.groups, 'name').map(group => (\n                  <ProfilePermissionsGroup\n                    group={group}\n                    key={group.name}\n                    onDelete={this.handleGroupDelete}\n                    profile={this.props.profile}\n                  />\n                ))}\n              <div className=\"text-right\">\n                <Button onClick={this.handleAddUserButtonClick}>\n                  {translate('quality_profiles.grant_permissions_to_more_users')}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {this.state.addUserForm && (\n          <ProfilePermissionsForm\n            onClose={this.handleAddUserFormClose}\n            onGroupAdd={this.handleGroupAdd}\n            onUserAdd={this.handleUserAdd}\n            profile={this.props.profile}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, without } from 'lodash';\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport SelectList, {\n  SelectListFilter,\n  SelectListSearchParams\n} from 'sonar-ui-common/components/controls/SelectList';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  associateProject,\n  dissociateProject,\n  getProfileProjects,\n  ProfileProject\n} from '../../../api/quality-profiles';\nimport { Profile } from '../types';\n\ninterface Props {\n  onClose: () => void;\n  profile: Profile;\n}\n\ninterface State {\n  needToReload: boolean;\n  lastSearchParams?: SelectListSearchParams;\n  projects: ProfileProject[];\n  projectsTotalCount?: number;\n  selectedProjects: string[];\n}\n\nexport default class ChangeProjectsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      needToReload: false,\n      projects: [],\n      selectedProjects: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchProjects = (searchParams: SelectListSearchParams) =>\n    getProfileProjects({\n      key: this.props.profile.key,\n      p: searchParams.page,\n      ps: searchParams.pageSize,\n      q: searchParams.query !== '' ? searchParams.query : undefined,\n      selected: searchParams.filter\n    }).then(data => {\n      if (this.mounted) {\n        this.setState(prevState => {\n          const more = searchParams.page != null && searchParams.page > 1;\n\n          const projects = more ? [...prevState.projects, ...data.results] : data.results;\n          const newSeletedProjects = data.results\n            .filter(project => project.selected)\n            .map(project => project.key);\n          const selectedProjects = more\n            ? [...prevState.selectedProjects, ...newSeletedProjects]\n            : newSeletedProjects;\n\n          return {\n            lastSearchParams: searchParams,\n            needToReload: false,\n            projects,\n            projectsTotalCount: data.paging.total,\n            selectedProjects\n          };\n        });\n      }\n    });\n\n  handleSelect = (key: string) =>\n    associateProject(this.props.profile, key).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedProjects: [...state.selectedProjects, key]\n        }));\n      }\n    });\n\n  handleUnselect = (key: string) =>\n    dissociateProject(this.props.profile, key).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedProjects: without(state.selectedProjects, key)\n        }));\n      }\n    });\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    this.props.onClose();\n  };\n\n  renderElement = (key: string): React.ReactNode => {\n    const project = find(this.state.projects, { key });\n    return (\n      <div className=\"select-list-list-item\">\n        {project === undefined ? (\n          key\n        ) : (\n          <>\n            {project.name}\n            <br />\n            <span className=\"note\">{project.key}</span>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const header = translate('projects');\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n\n        <div className=\"modal-body modal-container\" id=\"profile-projects\">\n          <SelectList\n            allowBulkSelection={true}\n            elements={this.state.projects.map(project => project.key)}\n            elementsTotalCount={this.state.projectsTotalCount}\n            labelAll={translate('quality_gates.projects.all')}\n            labelSelected={translate('quality_gates.projects.with')}\n            labelUnselected={translate('quality_gates.projects.without')}\n            needToReload={\n              this.state.needToReload &&\n              this.state.lastSearchParams &&\n              this.state.lastSearchParams.filter !== SelectListFilter.All\n            }\n            onSearch={this.fetchProjects}\n            onSelect={this.handleSelect}\n            onUnselect={this.handleUnselect}\n            renderElement={this.renderElement}\n            selectedElements={this.state.selectedProjects}\n            withPaging={true}\n          />\n        </div>\n\n        <div className=\"modal-foot\">\n          <a href=\"#\" onClick={this.handleCloseClick}>\n            {translate('close')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getProfileProjects } from '../../../api/quality-profiles';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { Profile } from '../types';\nimport ChangeProjectsForm from './ChangeProjectsForm';\n\ninterface Props {\n  profile: Profile;\n}\n\ninterface State {\n  formOpen: boolean;\n  loading: boolean;\n  loadingMore: boolean;\n  page: number;\n  projects: Array<{ key: string; name: string }>;\n  total: number;\n}\n\nexport default class ProfileProjects extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    formOpen: false,\n    loading: true,\n    loadingMore: false,\n    page: 1,\n    projects: [],\n    total: 0\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadProjects();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadProjects();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  loadProjects() {\n    if (this.props.profile.isDefault) {\n      this.setState({ loading: false, projects: [] });\n      return;\n    }\n\n    this.setState({ loading: true });\n    const data = { key: this.props.profile.key, page: this.state.page };\n    getProfileProjects(data).then(({ paging, results }) => {\n      if (this.mounted) {\n        this.setState({\n          projects: results,\n          total: paging.total,\n          loading: false\n        });\n      }\n    }, this.stopLoading);\n  }\n\n  loadMore = () => {\n    this.setState({ loadingMore: true });\n    const data = { key: this.props.profile.key, page: this.state.page + 1 };\n    getProfileProjects(data).then(({ paging, results }) => {\n      if (this.mounted) {\n        this.setState(state => ({\n          projects: [...state.projects, ...results],\n          total: paging.total,\n          loadingMore: false\n        }));\n      }\n    }, this.stopLoading);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ formOpen: true });\n  };\n\n  closeForm = () => {\n    this.setState({ formOpen: false });\n    this.loadProjects();\n  };\n\n  renderDefault() {\n    return (\n      <div>\n        <span className=\"badge spacer-right\">{translate('default')}</span>\n        {translate('quality_profiles.projects_for_default')}\n      </div>\n    );\n  }\n\n  renderProjects() {\n    if (this.state.loading) {\n      return <i className=\"spinner\" />;\n    }\n\n    const { projects } = this.state;\n\n    if (projects.length === 0) {\n      return <div>{translate('quality_profiles.no_projects_associated_to_profile')}</div>;\n    }\n\n    return (\n      <>\n        <ul>\n          {projects.map(project => (\n            <li className=\"spacer-top js-profile-project\" data-key={project.key} key={project.key}>\n              <Link className=\"link-with-icon\" to={getProjectUrl(project.key)}>\n                <QualifierIcon qualifier=\"TRK\" /> <span>{project.name}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n        <ListFooter\n          count={projects.length}\n          loadMore={this.loadMore}\n          ready={!this.state.loadingMore}\n          total={this.state.total}\n        />\n      </>\n    );\n  }\n\n  render() {\n    const { profile } = this.props;\n    return (\n      <div className=\"boxed-group quality-profile-projects\">\n        {profile.actions && profile.actions.associateProjects && (\n          <div className=\"boxed-group-actions\">\n            <Button className=\"js-change-projects\" onClick={this.handleChangeClick}>\n              {translate('quality_profiles.change_projects')}\n            </Button>\n          </div>\n        )}\n\n        <header className=\"boxed-group-header\">\n          <h2>{translate('projects')}</h2>\n        </header>\n\n        <div className=\"boxed-group-inner\">\n          {profile.isDefault ? this.renderDefault() : this.renderProjects()}\n        </div>\n\n        {this.state.formOpen && <ChangeProjectsForm onClose={this.closeForm} profile={profile} />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getDeprecatedActiveRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  activeDeprecatedRules: number;\n  profile: string;\n}\n\nexport default function ProfileRulesDeprecatedWarning(props: Props) {\n  return (\n    <div className=\"quality-profile-rules-deprecated clearfix\">\n      <span className=\"pull-left\">\n        <span className=\"text-middle\">{translate('quality_profiles.deprecated_rules')}</span>\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={translate('quality_profiles.deprecated_rules_description')}\n        />\n      </span>\n      <Link className=\"pull-right\" to={getDeprecatedActiveRulesUrl({ qprofile: props.profile })}>\n        {props.activeDeprecatedRules}\n      </Link>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport IssueTypeIcon from 'sonar-ui-common/components/icons/IssueTypeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  count: number | null;\n  qprofile: string;\n  total: number | null;\n  type: string;\n}\n\nexport default function ProfileRulesRowOfType(props: Props) {\n  const activeRulesUrl = getRulesUrl({\n    qprofile: props.qprofile,\n    activation: 'true',\n    types: props.type\n  });\n  const inactiveRulesUrl = getRulesUrl({\n    qprofile: props.qprofile,\n    activation: 'false',\n    types: props.type\n  });\n  let inactiveCount = null;\n  if (props.count != null && props.total != null) {\n    inactiveCount = props.total - props.count;\n  }\n\n  return (\n    <tr>\n      <td>\n        <span>\n          <IssueTypeIcon className=\"little-spacer-right\" query={props.type} />\n          {translate('issue.type', props.type, 'plural')}\n        </span>\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {props.count != null && (\n          <Link to={activeRulesUrl}>{formatMeasure(props.count, 'SHORT_INT', null)}</Link>\n        )}\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {inactiveCount != null &&\n          (inactiveCount > 0 ? (\n            <Link className=\"small text-muted\" to={inactiveRulesUrl}>\n              {formatMeasure(inactiveCount, 'SHORT_INT', null)}\n            </Link>\n          ) : (\n            <span className=\"note text-muted\">0</span>\n          ))}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  count: number | null;\n  qprofile: string;\n  total: number | null;\n}\n\nexport default function ProfileRulesRowTotal(props: Props) {\n  const activeRulesUrl = getRulesUrl({ qprofile: props.qprofile, activation: 'true' });\n  const inactiveRulesUrl = getRulesUrl({ qprofile: props.qprofile, activation: 'false' });\n  let inactiveCount = null;\n  if (props.count != null && props.total != null) {\n    inactiveCount = props.total - props.count;\n  }\n\n  return (\n    <tr>\n      <td>\n        <strong>{translate('total')}</strong>\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {props.count != null && (\n          <Link to={activeRulesUrl}>\n            <strong>{formatMeasure(props.count, 'SHORT_INT', null)}</strong>\n          </Link>\n        )}\n      </td>\n      <td className=\"thin nowrap text-right\">\n        {inactiveCount != null &&\n          (inactiveCount > 0 ? (\n            <Link className=\"small text-muted\" to={inactiveRulesUrl}>\n              <strong>{formatMeasure(inactiveCount, 'SHORT_INT', null)}</strong>\n            </Link>\n          ) : (\n            <span className=\"note text-muted\">0</span>\n          ))}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getRulesUrl } from '../../../helpers/urls';\n\ninterface Props {\n  language: string;\n  profile: string;\n  sonarway: string;\n  sonarWayMissingRules: number;\n}\n\nexport default function ProfileRulesSonarWayComparison(props: Props) {\n  const url = getRulesUrl({\n    qprofile: props.profile,\n    activation: 'false',\n    compareToProfile: props.sonarway,\n    languages: props.language\n  });\n\n  return (\n    <div className=\"quality-profile-rules-sonarway-missing clearfix\">\n      <span className=\"pull-left\">\n        <span className=\"text-middle\">{translate('quality_profiles.sonarway_missing_rules')}</span>\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={translate('quality_profiles.sonarway_missing_rules_description')}\n        />\n      </span>\n      <Link className=\"pull-right\" data-test=\"rules\" to={url}>\n        {props.sonarWayMissingRules}\n      </Link>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { keyBy } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getQualityProfile } from '../../../api/quality-profiles';\nimport { searchRules, takeFacet } from '../../../api/rules';\nimport { getRulesUrl } from '../../../helpers/urls';\nimport { Profile } from '../types';\nimport ProfileRulesDeprecatedWarning from './ProfileRulesDeprecatedWarning';\nimport ProfileRulesRowOfType from './ProfileRulesRowOfType';\nimport ProfileRulesRowTotal from './ProfileRulesRowTotal';\nimport ProfileRulesSonarWayComparison from './ProfileRulesSonarWayComparison';\n\nconst TYPES = ['BUG', 'VULNERABILITY', 'CODE_SMELL', 'SECURITY_HOTSPOT'];\n\ninterface Props {\n  profile: Profile;\n}\n\ninterface ByType {\n  val: string;\n  count: number | null;\n}\n\ninterface State {\n  activatedTotal: number | null;\n  activatedByType: T.Dict<ByType>;\n  allByType: T.Dict<ByType>;\n  compareToSonarWay: { profile: string; profileName: string; missingRuleCount: number } | null;\n  total: number | null;\n}\n\nexport default class ProfileRules extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  state: State = {\n    activatedTotal: null,\n    activatedByType: keyBy(\n      TYPES.map(t => ({ val: t, count: null })),\n      'val'\n    ),\n    allByType: keyBy(\n      TYPES.map(t => ({ val: t, count: null })),\n      'val'\n    ),\n    compareToSonarWay: null,\n    total: null\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadRules();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.profile.key !== this.props.profile.key) {\n      this.loadRules();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadProfile() {\n    if (this.props.profile.isBuiltIn) {\n      return Promise.resolve(null);\n    }\n    return getQualityProfile({\n      compareToSonarWay: true,\n      profile: this.props.profile\n    });\n  }\n\n  loadAllRules() {\n    return searchRules({\n      languages: this.props.profile.language,\n      facets: 'types',\n      ps: 1\n    });\n  }\n\n  loadActivatedRules() {\n    return searchRules({\n      activation: 'true',\n      facets: 'types',\n      ps: 1,\n      qprofile: this.props.profile.key\n    });\n  }\n\n  loadRules() {\n    return Promise.all([this.loadAllRules(), this.loadActivatedRules(), this.loadProfile()]).then(\n      responses => {\n        if (this.mounted) {\n          const [allRules, activatedRules, showProfile] = responses;\n          this.setState({\n            activatedTotal: activatedRules.total,\n            allByType: keyBy<ByType>(takeFacet(allRules, 'types'), 'val'),\n            activatedByType: keyBy<ByType>(takeFacet(activatedRules, 'types'), 'val'),\n            compareToSonarWay: showProfile && showProfile.compareToSonarWay,\n            total: allRules.total\n          });\n        }\n      }\n    );\n  }\n\n  getRulesCountForType(type: string) {\n    return this.state.activatedByType && this.state.activatedByType[type]\n      ? this.state.activatedByType[type].count\n      : null;\n  }\n\n  getRulesTotalForType(type: string) {\n    return this.state.allByType && this.state.allByType[type]\n      ? this.state.allByType[type].count\n      : null;\n  }\n\n  render() {\n    const { profile } = this.props;\n    const { compareToSonarWay } = this.state;\n    const activateMoreUrl = getRulesUrl({ qprofile: profile.key, activation: 'false' });\n    const { actions = {} } = profile;\n\n    return (\n      <div className=\"boxed-group quality-profile-rules\">\n        <div className=\"quality-profile-rules-distribution\">\n          <table className=\"data condensed\">\n            <thead>\n              <tr>\n                <th>\n                  <h2>{translate('rules')}</h2>\n                </th>\n                <th>{translate('active')}</th>\n                <th>{translate('inactive')}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <ProfileRulesRowTotal\n                count={this.state.activatedTotal}\n                qprofile={profile.key}\n                total={this.state.total}\n              />\n              {TYPES.map(type => (\n                <ProfileRulesRowOfType\n                  count={this.getRulesCountForType(type)}\n                  key={type}\n                  qprofile={profile.key}\n                  total={this.getRulesTotalForType(type)}\n                  type={type}\n                />\n              ))}\n            </tbody>\n          </table>\n\n          {actions.edit && !profile.isBuiltIn && (\n            <div className=\"text-right big-spacer-top\">\n              <Link className=\"button js-activate-rules\" to={activateMoreUrl}>\n                {translate('quality_profiles.activate_more')}\n              </Link>\n            </div>\n          )}\n\n          {/* if a user is allowed to `copy` a profile if they are a global admin */}\n          {/* this user could potentially active more rules if the profile was not built-in */}\n          {/* in such cases it's better to show the button but disable it with a tooltip */}\n          {actions.copy && profile.isBuiltIn && (\n            <div className=\"text-right big-spacer-top\">\n              <Tooltip overlay={translate('quality_profiles.activate_more.help.built_in')}>\n                <Button className=\"disabled js-activate-rules\">\n                  {translate('quality_profiles.activate_more')}\n                </Button>\n              </Tooltip>\n            </div>\n          )}\n        </div>\n        {profile.activeDeprecatedRuleCount > 0 && (\n          <ProfileRulesDeprecatedWarning\n            activeDeprecatedRules={profile.activeDeprecatedRuleCount}\n            profile={profile.key}\n          />\n        )}\n        {compareToSonarWay != null && compareToSonarWay.missingRuleCount > 0 && (\n          <ProfileRulesSonarWayComparison\n            language={profile.language}\n            profile={profile.key}\n            sonarWayMissingRules={compareToSonarWay.missingRuleCount}\n            sonarway={compareToSonarWay.profile}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Exporter, Profile } from '../types';\nimport ProfileExporters from './ProfileExporters';\nimport ProfileInheritance from './ProfileInheritance';\nimport ProfilePermissions from './ProfilePermissions';\nimport ProfileProjects from './ProfileProjects';\nimport ProfileRules from './ProfileRules';\n\ninterface Props {\n  exporters: Exporter[];\n  profile: Profile;\n  profiles: Profile[];\n  updateProfiles: () => Promise<void>;\n}\n\nexport default function ProfileDetails(props: Props) {\n  const { profile } = props;\n  return (\n    <div>\n      <div className=\"quality-profile-grid\">\n        <div className=\"quality-profile-grid-left\">\n          <ProfileRules profile={profile} />\n          <ProfileExporters exporters={props.exporters} profile={profile} />\n          {profile.actions && profile.actions.edit && !profile.isBuiltIn && (\n            <ProfilePermissions profile={profile} />\n          )}\n        </div>\n        <div className=\"quality-profile-grid-right\">\n          <ProfileInheritance\n            profile={profile}\n            profiles={props.profiles}\n            updateProfiles={props.updateProfiles}\n          />\n          <ProfileProjects profile={profile} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { map } from 'lodash';\nimport { csvEscape } from 'sonar-ui-common/helpers/csv';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { Exporter, ProfileChangelogEvent } from '../apps/quality-profiles/types';\n\nexport interface ProfileActions {\n  associateProjects?: boolean;\n  copy?: boolean;\n  delete?: boolean;\n  edit?: boolean;\n  setAsDefault?: boolean;\n}\n\nexport interface Actions {\n  create?: boolean;\n}\n\nexport interface Profile {\n  actions?: ProfileActions;\n  key: string;\n  name: string;\n  language: string;\n  languageName: string;\n  isInherited?: boolean;\n  parentKey?: string;\n  parentName?: string;\n  isDefault?: boolean;\n  activeRuleCount: number;\n  activeDeprecatedRuleCount: number;\n  rulesUpdatedAt?: string;\n  lastUsed?: string;\n  userUpdatedAt?: string;\n  isBuiltIn?: boolean;\n  projectCount?: number;\n}\n\nexport interface SearchQualityProfilesParameters {\n  defaults?: boolean;\n  language?: string;\n  project?: string;\n  qualityProfile?: string;\n}\n\nexport interface SearchQualityProfilesResponse {\n  actions?: Actions;\n  profiles: Profile[];\n}\n\nexport function searchQualityProfiles(\n  parameters?: SearchQualityProfilesParameters\n): Promise<SearchQualityProfilesResponse> {\n  return getJSON('/api/qualityprofiles/search', parameters).catch(throwGlobalError);\n}\n\nexport function getQualityProfile({\n  compareToSonarWay,\n  profile: { key }\n}: {\n  compareToSonarWay?: boolean;\n  profile: Profile;\n}): Promise<any> {\n  return getJSON('/api/qualityprofiles/show', { compareToSonarWay, key });\n}\n\nexport function createQualityProfile(data: RequestData): Promise<any> {\n  return postJSON('/api/qualityprofiles/create', data).catch(throwGlobalError);\n}\n\nexport function restoreQualityProfile(data: RequestData): Promise<any> {\n  return postJSON('/api/qualityprofiles/restore', data).catch(throwGlobalError);\n}\n\nexport interface ProfileProject {\n  key: string;\n  name: string;\n  selected: boolean;\n}\n\nexport function getProfileProjects(\n  data: RequestData\n): Promise<{ more: boolean; paging: T.Paging; results: ProfileProject[] }> {\n  return getJSON('/api/qualityprofiles/projects', data).catch(throwGlobalError);\n}\n\nexport function getProfileInheritance({\n  language,\n  name: qualityProfile\n}: Profile): Promise<{\n  ancestors: T.ProfileInheritanceDetails[];\n  children: T.ProfileInheritanceDetails[];\n  profile: T.ProfileInheritanceDetails;\n}> {\n  return getJSON('/api/qualityprofiles/inheritance', {\n    language,\n    qualityProfile\n  }).catch(throwGlobalError);\n}\n\nexport function setDefaultProfile({ language, name: qualityProfile }: Profile) {\n  return post('/api/qualityprofiles/set_default', {\n    language,\n    qualityProfile\n  });\n}\n\nexport function renameProfile(key: string, name: string) {\n  return post('/api/qualityprofiles/rename', { key, name }).catch(throwGlobalError);\n}\n\nexport function copyProfile(fromKey: string, toName: string): Promise<any> {\n  return postJSON('/api/qualityprofiles/copy', { fromKey, toName }).catch(throwGlobalError);\n}\n\nexport function deleteProfile({ language, name: qualityProfile }: Profile) {\n  return post('/api/qualityprofiles/delete', { language, qualityProfile }).catch(throwGlobalError);\n}\n\nexport function changeProfileParent(\n  { language, name: qualityProfile }: Profile,\n  parentProfile?: Profile\n) {\n  return post('/api/qualityprofiles/change_parent', {\n    language,\n    qualityProfile,\n    parentQualityProfile: parentProfile ? parentProfile.name : undefined\n  }).catch(throwGlobalError);\n}\n\nexport function getQualityProfileBackupUrl({ language, name: qualityProfile }: Profile) {\n  const queryParams = Object.entries({ language, qualityProfile })\n    .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n    .join('&');\n  return `/api/qualityprofiles/backup?${queryParams}`;\n}\n\nexport function getQualityProfileExporterUrl(\n  { key: exporterKey }: Exporter,\n  { language, name: qualityProfile }: Profile\n) {\n  const queryParams = Object.entries({ exporterKey, language, qualityProfile })\n    .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n    .join('&');\n  return `/api/qualityprofiles/export?${queryParams}`;\n}\n\nexport function getImporters(): Promise<\n  Array<{ key: string; languages: Array<string>; name: string }>\n> {\n  return getJSON('/api/qualityprofiles/importers').then(r => r.importers, throwGlobalError);\n}\n\nexport function getExporters(): Promise<any> {\n  return getJSON('/api/qualityprofiles/exporters').then(r => r.exporters);\n}\n\nexport function getProfileChangelog(\n  since: any,\n  to: any,\n  { language, name: qualityProfile }: Profile,\n  page?: number\n): Promise<{\n  events: ProfileChangelogEvent[];\n  p: number;\n  ps: number;\n  total: number;\n}> {\n  return getJSON('/api/qualityprofiles/changelog', {\n    since,\n    to,\n    language,\n    qualityProfile,\n    p: page\n  });\n}\n\nexport interface CompareResponse {\n  left: { name: string };\n  right: { name: string };\n  inLeft: Array<{ key: string; name: string; severity: string }>;\n  inRight: Array<{ key: string; name: string; severity: string }>;\n  modified: Array<{\n    key: string;\n    name: string;\n    left: { params: T.Dict<string>; severity: string };\n    right: { params: T.Dict<string>; severity: string };\n  }>;\n}\n\nexport function compareProfiles(leftKey: string, rightKey: string): Promise<CompareResponse> {\n  return getJSON('/api/qualityprofiles/compare', { leftKey, rightKey });\n}\n\nexport function associateProject({ language, name: qualityProfile }: Profile, project: string) {\n  return post('/api/qualityprofiles/add_project', {\n    language,\n    qualityProfile,\n    project\n  }).catch(throwGlobalError);\n}\n\nexport function dissociateProject({ language, name: qualityProfile }: Profile, project: string) {\n  return post('/api/qualityprofiles/remove_project', {\n    language,\n    qualityProfile,\n    project\n  }).catch(throwGlobalError);\n}\n\nexport interface SearchUsersGroupsParameters {\n  language: string;\n  qualityProfile: string;\n  q?: string;\n  selected?: 'all' | 'selected' | 'deselected';\n}\n\ninterface SearchUsersResponse {\n  users: T.UserSelected[];\n  paging: T.Paging;\n}\n\nexport function searchUsers(parameters: SearchUsersGroupsParameters): Promise<SearchUsersResponse> {\n  return getJSON('/api/qualityprofiles/search_users', parameters).catch(throwGlobalError);\n}\n\nexport interface SearchGroupsResponse {\n  groups: Array<{ name: string }>;\n  paging: T.Paging;\n}\n\nexport function searchGroups(\n  parameters: SearchUsersGroupsParameters\n): Promise<SearchGroupsResponse> {\n  return getJSON('/api/qualityprofiles/search_groups', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveUserParameters {\n  language: string;\n  login: string;\n  qualityProfile: string;\n}\n\nexport function addUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_user', parameters).catch(throwGlobalError);\n}\n\nexport function removeUser(parameters: AddRemoveUserParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_user', parameters).catch(throwGlobalError);\n}\n\nexport interface AddRemoveGroupParameters {\n  group: string;\n  language: string;\n  qualityProfile: string;\n}\n\nexport function addGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/add_group', parameters).catch(throwGlobalError);\n}\n\nexport function removeGroup(parameters: AddRemoveGroupParameters): Promise<void | Response> {\n  return post('/api/qualityprofiles/remove_group', parameters).catch(throwGlobalError);\n}\n\nexport interface BulkActivateParameters {\n  activation?: boolean;\n  active_severities?: string;\n  asc?: boolean;\n  available_since?: string;\n  compareToProfile?: string;\n  inheritance?: string;\n  is_template?: string;\n  languages?: string;\n  q?: string;\n  qprofile?: string;\n  repositories?: string;\n  rule_key?: string;\n  s?: string;\n  severities?: string;\n  statuses?: string;\n  tags?: string;\n  targetKey: string;\n  targetSeverity?: string;\n  template_key?: string;\n  types?: string;\n}\n\nexport function bulkActivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/activate_rules', data);\n}\n\nexport function bulkDeactivateRules(data: BulkActivateParameters) {\n  return postJSON('/api/qualityprofiles/deactivate_rules', data);\n}\n\nexport function activateRule(data: {\n  key: string;\n  params?: T.Dict<string>;\n  reset?: boolean;\n  rule: string;\n  severity?: string;\n}) {\n  const params =\n    data.params && map(data.params, (value, key) => `${key}=${csvEscape(value)}`).join(';');\n  return post('/api/qualityprofiles/activate_rule', { ...data, params }).catch(throwGlobalError);\n}\n\nexport function deactivateRule(data: { key: string; rule: string }) {\n  return post('/api/qualityprofiles/deactivate_rule', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  className?: string;\n  tooltip?: boolean;\n}\n\nexport default function BuiltInQualityProfileBadge({ className, tooltip = true }: Props) {\n  const badge = (\n    <div className={classNames('badge badge-info', className)}>\n      {translate('quality_profiles.built_in')}\n    </div>\n  );\n\n  if (tooltip) {\n    return <Tooltip overlay={translate('quality_profiles.built_in.description')}>{badge}</Tooltip>;\n  }\n\n  return badge;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { getProfilePath } from '../utils';\n\ninterface Props {\n  className?: string;\n  children?: React.ReactElement<any> | string;\n  language: string;\n  name: string;\n}\n\nexport default function ProfileLink({ name, language, children, ...other }: Props) {\n  return (\n    <Link activeClassName=\"link-no-underline\" to={getProfilePath(name, language)} {...other}>\n      {children}\n    </Link>\n  );\n}\n"],"sourceRoot":""}