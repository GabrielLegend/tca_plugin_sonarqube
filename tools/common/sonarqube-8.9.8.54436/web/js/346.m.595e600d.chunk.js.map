{"version":3,"sources":["webpack:///./src/main/js/apps/projectLinks/CreationModal.tsx","webpack:///./src/main/js/apps/projectLinks/Header.tsx","webpack:///./src/main/js/apps/projectLinks/LinkRow.tsx","webpack:///./src/main/js/apps/projectLinks/Table.tsx","webpack:///./src/main/js/apps/projectLinks/App.tsx","webpack:///./src/main/js/helpers/projectLinks.ts","webpack:///./src/main/js/app/utils/isValidUri.ts","webpack:///./src/main/js/api/projectLinks.ts"],"names":["state","name","url","handleSubmit","this","props","onSubmit","then","onClose","handleNameChange","event","setState","currentTarget","value","handleUrlChange","header","size","onCloseClick","onFormSubmit","submitting","className","htmlFor","autoFocus","id","maxLength","onChange","required","type","loading","disabled","onClick","mounted","creationModal","handleCreateClick","handleCreationModalClose","onCreate","renderNameForProvided","link","renderName","renderDeleteButton","confirmButtonText","confirmData","isDestructive","modalBody","modalHeader","onConfirm","onDelete","isValidUri","href","rel","target","links","length","linkRows","map","key","renderHeader","fetchLinks","component","handleCreateLink","projectKey","handleDeleteLink","linkId","filter","prevProps","defer","title","PROVIDED_TYPES","isProvided","includes","orderLinks","provided","unknown","indexOf","toLowerCase","getLinkName","test","getProjectLinks","r","deleteLink","catch","createLink","data"],"mappings":"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","file":"js/346.m.595e600d.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n  onSubmit: (name: string, url: string) => Promise<void>;\n}\n\ninterface State {\n  name: string;\n  url: string;\n}\n\nexport default class CreationModal extends React.PureComponent<Props, State> {\n  state: State = { name: '', url: '' };\n\n  handleSubmit = () => {\n    return this.props.onSubmit(this.state.name, this.state.url).then(this.props.onClose);\n  };\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleUrlChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ url: event.currentTarget.value });\n  };\n\n  render() {\n    const header = translate('project_links.create_new_project_link');\n\n    return (\n      <SimpleModal\n        header={header}\n        onClose={this.props.onClose}\n        onSubmit={this.handleSubmit}\n        size=\"small\">\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n\n            <div className=\"modal-body\">\n              <MandatoryFieldsExplanation className=\"modal-field\" />\n\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-link-name\">\n                  {translate('project_links.name')}\n                  <MandatoryFieldMarker />\n                </label>\n                <input\n                  autoFocus={true}\n                  id=\"create-link-name\"\n                  maxLength={128}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n              </div>\n\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-link-url\">\n                  {translate('project_links.url')}\n                  <MandatoryFieldMarker />\n                </label>\n                <input\n                  id=\"create-link-url\"\n                  maxLength={128}\n                  name=\"url\"\n                  onChange={this.handleUrlChange}\n                  required={true}\n                  type=\"text\"\n                  value={this.state.url}\n                />\n              </div>\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton disabled={submitting} id=\"create-link-confirm\">\n                {translate('create')}\n              </SubmitButton>\n              <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport CreationModal from './CreationModal';\n\ninterface Props {\n  onCreate: (name: string, url: string) => Promise<void>;\n}\n\ninterface State {\n  creationModal: boolean;\n}\n\nexport default class Header extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { creationModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCreateClick = () => {\n    this.setState({ creationModal: true });\n  };\n\n  handleCreationModalClose = () => {\n    if (this.mounted) {\n      this.setState({ creationModal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{translate('project_links.page')}</h1>\n          <div className=\"page-actions\">\n            <Button id=\"create-project-link\" onClick={this.handleCreateClick}>\n              {translate('create')}\n            </Button>\n          </div>\n          <div className=\"page-description\">{translate('project_links.page.description')}</div>\n        </header>\n        {this.state.creationModal && (\n          <CreationModal onClose={this.handleCreationModalClose} onSubmit={this.props.onCreate} />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport ProjectLinkIcon from 'sonar-ui-common/components/icons/ProjectLinkIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport isValidUri from '../../app/utils/isValidUri';\nimport { getLinkName, isProvided } from '../../helpers/projectLinks';\n\ninterface Props {\n  link: T.ProjectLink;\n  onDelete: (linkId: string) => Promise<void>;\n}\n\nexport default class LinkRow extends React.PureComponent<Props> {\n  renderNameForProvided = (link: T.ProjectLink) => {\n    return (\n      <div className=\"display-inline-block text-top\">\n        <div>\n          <span className=\"js-name\">{getLinkName(link)}</span>\n        </div>\n        <div className=\"note little-spacer-top\">\n          <span className=\"js-type\">{`sonar.links.${link.type}`}</span>\n        </div>\n      </div>\n    );\n  };\n\n  renderName = (link: T.ProjectLink) => {\n    return (\n      <div>\n        <ProjectLinkIcon className=\"little-spacer-right\" type={link.type} />\n        {isProvided(link) ? (\n          this.renderNameForProvided(link)\n        ) : (\n          <div className=\"display-inline-block text-top\">\n            <span className=\"js-name\">{link.name}</span>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  renderDeleteButton = (link: T.ProjectLink) => {\n    if (isProvided(link)) {\n      return null;\n    }\n\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('delete')}\n        confirmData={link.id}\n        isDestructive={true}\n        modalBody={translateWithParameters(\n          'project_links.are_you_sure_to_delete_x_link',\n          link.name!\n        )}\n        modalHeader={translate('project_links.delete_project_link')}\n        onConfirm={this.props.onDelete}>\n        {({ onClick }) => (\n          <Button className=\"button-red js-delete-button\" onClick={onClick}>\n            {translate('delete')}\n          </Button>\n        )}\n      </ConfirmButton>\n    );\n  };\n\n  render() {\n    const { link } = this.props;\n\n    return (\n      <tr data-name={link.name}>\n        <td className=\"nowrap\">{this.renderName(link)}</td>\n        <td className=\"nowrap js-url\">\n          {isValidUri(link.url) ? (\n            <a href={link.url} rel=\"nofollow noreferrer noopener\" target=\"_blank\">\n              {link.url}\n            </a>\n          ) : (\n            link.url\n          )}\n        </td>\n        <td className=\"thin nowrap\">{this.renderDeleteButton(link)}</td>\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { orderLinks } from '../../helpers/projectLinks';\nimport LinkRow from './LinkRow';\n\ninterface Props {\n  links: T.ProjectLink[];\n  onDelete: (linkId: string) => Promise<void>;\n}\n\nexport default class Table extends React.PureComponent<Props> {\n  renderHeader() {\n    // keep empty cell for actions\n    return (\n      <thead>\n        <tr>\n          <th className=\"nowrap\">{translate('project_links.name')}</th>\n          <th className=\"nowrap width-100\">{translate('project_links.url')}</th>\n          <th className=\"thin\">&nbsp;</th>\n        </tr>\n      </thead>\n    );\n  }\n\n  render() {\n    if (!this.props.links.length) {\n      return <div className=\"note\">{translate('no_results')}</div>;\n    }\n\n    const orderedLinks = orderLinks(this.props.links);\n\n    const linkRows = orderedLinks.map(link => (\n      <LinkRow key={link.id} link={link} onDelete={this.props.onDelete} />\n    ));\n\n    return (\n      <div className=\"boxed-group boxed-group-inner\">\n        <table className=\"data zebra\" id=\"project-links\">\n          {this.renderHeader()}\n          <tbody>{linkRows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createLink, deleteLink, getProjectLinks } from '../../api/projectLinks';\nimport Header from './Header';\nimport Table from './Table';\n\ninterface Props {\n  component: Pick<T.Component, 'key'>;\n}\n\ninterface State {\n  links?: T.ProjectLink[];\n  loading: boolean;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchLinks();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component.key !== this.props.component.key) {\n      this.fetchLinks();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchLinks = () => {\n    this.setState({ loading: true });\n    getProjectLinks(this.props.component.key).then(\n      links => {\n        if (this.mounted) {\n          this.setState({ links, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  handleCreateLink = (name: string, url: string) => {\n    return createLink({ name, projectKey: this.props.component.key, url }).then(link => {\n      if (this.mounted) {\n        this.setState(({ links = [] }) => ({\n          links: [...links, link]\n        }));\n      }\n    });\n  };\n\n  handleDeleteLink = (linkId: string) => {\n    return deleteLink(linkId).then(() => {\n      if (this.mounted) {\n        this.setState(({ links = [] }) => ({\n          links: links.filter(link => link.id !== linkId)\n        }));\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"page page-limited\">\n        <Helmet defer={false} title={translate('project_links.page')} />\n        <Header onCreate={this.handleCreateLink} />\n        <DeferredSpinner loading={this.state.loading}>\n          {this.state.links && <Table links={this.state.links} onDelete={this.handleDeleteLink} />}\n        </DeferredSpinner>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { partition, sortBy } from 'lodash';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nconst PROVIDED_TYPES = ['homepage', 'ci', 'issue', 'scm', 'scm_dev'];\ntype NameAndType = Pick<T.ProjectLink, 'name' | 'type'>;\n\nexport function isProvided(link: Pick<T.ProjectLink, 'type'>) {\n  return PROVIDED_TYPES.includes(link.type);\n}\n\nexport function orderLinks<T extends NameAndType>(links: T[]) {\n  const [provided, unknown] = partition<T>(links, isProvided);\n  return [\n    ...sortBy(provided, link => PROVIDED_TYPES.indexOf(link.type)),\n    ...sortBy(unknown, link => link.name && link.name.toLowerCase())\n  ];\n}\n\nexport function getLinkName(link: NameAndType) {\n  return isProvided(link) ? translate('project_links', link.type) : link.name;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isWebUri } from 'valid-url';\n\nexport default function(url: string): boolean {\n  return /^(\\/|scm:)/.test(url) || !!isWebUri(url);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getProjectLinks(projectKey: string): Promise<T.ProjectLink[]> {\n  return getJSON('/api/project_links/search', { projectKey }).then(r => r.links, throwGlobalError);\n}\n\nexport function deleteLink(linkId: string) {\n  return post('/api/project_links/delete', { id: linkId }).catch(throwGlobalError);\n}\n\nexport function createLink(data: {\n  name: string;\n  projectKey: string;\n  url: string;\n}): Promise<T.ProjectLink> {\n  return postJSON('/api/project_links/create', data).then(r => r.link, throwGlobalError);\n}\n"],"sourceRoot":""}