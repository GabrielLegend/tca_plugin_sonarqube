{"version":3,"sources":["webpack:///./src/main/js/app/components/extensions/ProjectAdminPageExtension.tsx","webpack:///./src/main/js/app/components/SimpleContainer.tsx","webpack:///./src/main/js/app/components/NotFound.tsx","webpack:///./src/main/js/helpers/extensions.ts","webpack:///./src/main/js/app/components/extensions/Extension.tsx"],"names":["ProjectAdminPageExtension","props","component","params","extensionKey","pluginKey","extension","configuration","extensions","find","p","key","options","withContainer","mapDispatchToProps","onFail","SimpleContainer","children","className","id","height","globalNavHeightRaw","NotFound","Container","defaultTitle","defer","to","librariesExposed","installScript","url","target","Promise","resolve","scriptTag","document","createElement","src","onload","getElementsByTagName","appendChild","async","getExtensionStart","fromCache","exposeLibraries","default","start","reject","Extension","state","handleStart","result","store","el","this","container","currentUser","intl","location","router","theme","baseUrl","l10nBundle","setState","extensionElement","stop","handleFailure","startExtension","prevProps","stopExtension","then","undefined","title","name","ref"],"mappings":"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","file":"js/338.m.38098988.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Location } from 'history';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { addGlobalErrorMessage } from '../../../store/globalMessages';\nimport NotFound from '../NotFound';\nimport Extension from './Extension';\n\nexport interface ProjectAdminPageExtensionProps {\n  component: T.Component;\n  location: Location;\n  params: { extensionKey: string; pluginKey: string };\n}\n\nexport function ProjectAdminPageExtension(props: ProjectAdminPageExtensionProps) {\n  const {\n    component,\n    params: { extensionKey, pluginKey }\n  } = props;\n\n  const extension =\n    component.configuration &&\n    (component.configuration.extensions || []).find(p => p.key === `${pluginKey}/${extensionKey}`);\n\n  return extension ? (\n    <Extension extension={extension} options={{ component }} />\n  ) : (\n    <NotFound withContainer={false} />\n  );\n}\n\nconst mapDispatchToProps = { onFail: addGlobalErrorMessage };\n\nexport default connect(null, mapDispatchToProps)(ProjectAdminPageExtension);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport NavBar from 'sonar-ui-common/components/ui/NavBar';\nimport { rawSizes } from '../theme';\nimport GlobalFooterContainer from './GlobalFooterContainer';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport default function SimpleContainer({ children }: Props) {\n  return (\n    <div className=\"global-container\">\n      <div className=\"page-wrapper\" id=\"container\">\n        <NavBar className=\"navbar-global\" height={rawSizes.globalNavHeightRaw} />\n        {children}\n      </div>\n      <GlobalFooterContainer />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport SimpleContainer from './SimpleContainer';\n\ninterface Props {\n  withContainer?: boolean;\n}\n\nexport default function NotFound({ withContainer = true }: Props) {\n  const Container = withContainer ? SimpleContainer : React.Fragment;\n  return (\n    <Container>\n      <Helmet defaultTitle={translate('404_not_found')} defer={false} />\n      <div className=\"page-wrapper-simple\" id=\"bd\">\n        <div className=\"page-simple\" id=\"nonav\">\n          <h2 className=\"big-spacer-bottom\">{translate('page_not_found')}</h2>\n          <p className=\"spacer-bottom\">{translate('address_mistyped_or_page_moved')}</p>\n          <p>\n            <Link to=\"/\">{translate('go_back_to_homepage')}</Link>\n          </p>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { getExtensionFromCache } from './extensionsHandler';\n\nlet librariesExposed = false;\n\nexport function installScript(url: string, target: 'body' | 'head' = 'body'): Promise<any> {\n  return new Promise(resolve => {\n    const scriptTag = document.createElement('script');\n    scriptTag.src = `${getBaseUrl()}${url}`;\n    scriptTag.onload = resolve;\n    document.getElementsByTagName(target)[0].appendChild(scriptTag);\n  });\n}\n\nexport async function getExtensionStart(key: string) {\n  const fromCache = getExtensionFromCache(key);\n  if (fromCache) {\n    return Promise.resolve(fromCache);\n  }\n\n  if (!librariesExposed) {\n    librariesExposed = true;\n    // Async import allows to reduce initial vendor bundle size\n    const exposeLibraries = (await import('../app/components/extensions/exposeLibraries')).default;\n    exposeLibraries();\n  }\n\n  await installScript(`/static/${key}.js`);\n\n  const start = getExtensionFromCache(key);\n  if (start) {\n    return start;\n  }\n  return Promise.reject();\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getExtensionStart } from '../../../helpers/extensions';\nimport { getCurrentL10nBundle } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { addGlobalErrorMessage } from '../../../store/globalMessages';\nimport { getCurrentUser, Store } from '../../../store/rootReducer';\nimport { ExtensionStartMethod } from '../../../types/extension';\nimport * as theme from '../../theme';\nimport getStore from '../../utils/getStore';\n\ninterface Props extends InjectedIntlProps {\n  currentUser: T.CurrentUser;\n  extension: T.Extension;\n  location: Location;\n  onFail: (message: string) => void;\n  options?: T.Dict<any>;\n  router: Router;\n}\n\ninterface State {\n  extensionElement?: React.ReactElement<any>;\n}\n\nexport class Extension extends React.PureComponent<Props, State> {\n  container?: HTMLElement | null;\n  stop?: Function;\n  state: State = {};\n\n  componentDidMount() {\n    this.startExtension();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.extension !== this.props.extension) {\n      this.stopExtension();\n      this.startExtension();\n    } else if (prevProps.location !== this.props.location) {\n      this.startExtension();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopExtension();\n  }\n\n  handleStart = (start: ExtensionStartMethod) => {\n    const store = getStore();\n    const result = start({\n      store,\n      el: this.container,\n      currentUser: this.props.currentUser,\n      intl: this.props.intl,\n      location: this.props.location,\n      router: this.props.router,\n      theme,\n      baseUrl: getBaseUrl(),\n      l10nBundle: getCurrentL10nBundle(),\n      ...this.props.options\n    });\n\n    if (result) {\n      if (React.isValidElement(result)) {\n        this.setState({ extensionElement: result });\n      } else if (typeof result === 'function') {\n        this.stop = result;\n      }\n    }\n  };\n\n  handleFailure = () => {\n    this.props.onFail(translate('page_extension_failed'));\n  };\n\n  startExtension() {\n    getExtensionStart(this.props.extension.key).then(this.handleStart, this.handleFailure);\n  }\n\n  stopExtension() {\n    if (this.stop) {\n      this.stop();\n      this.stop = undefined;\n    } else {\n      this.setState({ extensionElement: undefined });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Helmet title={this.props.extension.name} />\n        {this.state.extensionElement ? (\n          this.state.extensionElement\n        ) : (\n          <div ref={container => (this.container = container)} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({ currentUser: getCurrentUser(state) });\nconst mapDispatchToProps = { onFail: addGlobalErrorMessage };\n\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Extension)));\n"],"sourceRoot":""}