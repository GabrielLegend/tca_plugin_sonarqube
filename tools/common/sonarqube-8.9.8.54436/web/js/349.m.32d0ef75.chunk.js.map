{"version":3,"sources":["webpack:///./src/main/js/components/workspace/WorkspaceComponentViewer.tsx","webpack:///./src/main/js/components/SourceViewer/SourceViewer.tsx","webpack:///./src/main/js/components/workspace/WorkspaceComponentTitle.tsx","webpack:///./src/main/js/components/workspace/WorkspaceHeader.tsx"],"names":["WorkspaceComponentViewer","props","super","handleClose","this","onClose","component","key","handleIssueChange","_","refreshBranchStatus","handleLoaded","onLoad","name","path","qualifier","q","container","line","row","querySelector","smooth","parent","topOffset","bottomOffset","branchLike","then","parents","length","fetchBranchStatus","pop","document","documentElement","classList","add","remove","className","maximized","onCollapse","onMaximize","onMinimize","onResize","ref","node","style","height","aroundLine","highlightedLine","onIssueChange","onLoaded","mapDispatchToProps","SourceViewer","WorkspaceComponentTitle","limited","WorkspaceHeader","handleDrag","_event","data","deltaY","children","offsetParent","body","onDrag","WorkspaceHeaderButton","icon","onClick","tooltip","Icon","color","fill","undefined"],"mappings":"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","file":"js/349.m.32d0ef75.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { scrollToElement } from 'sonar-ui-common/helpers/scrolling';\nimport { getParents } from '../../api/components';\nimport { isPullRequest } from '../../helpers/branch-like';\nimport { fetchBranchStatus } from '../../store/rootActions';\nimport { BranchLike } from '../../types/branch-like';\nimport SourceViewer from '../SourceViewer/SourceViewer';\nimport { ComponentDescriptor } from './context';\nimport WorkspaceComponentTitle from './WorkspaceComponentTitle';\nimport WorkspaceHeader, { Props as WorkspaceHeaderProps } from './WorkspaceHeader';\n\nexport interface Props extends T.Omit<WorkspaceHeaderProps, 'children' | 'onClose'> {\n  component: ComponentDescriptor;\n  fetchBranchStatus: (branchLike: BranchLike, projectKey: string) => Promise<void>;\n  height: number;\n  onClose: (componentKey: string) => void;\n  onLoad: (details: { key: string; name: string; qualifier: string }) => void;\n}\n\nexport class WorkspaceComponentViewer extends React.PureComponent<Props> {\n  container?: HTMLElement | null;\n\n  constructor(props: Props) {\n    super(props);\n    this.refreshBranchStatus = debounce(this.refreshBranchStatus, 1000);\n  }\n\n  componentDidMount() {\n    if (document.documentElement) {\n      document.documentElement.classList.add('with-workspace');\n    }\n  }\n\n  componentWillUnmount() {\n    if (document.documentElement) {\n      document.documentElement.classList.remove('with-workspace');\n    }\n  }\n\n  handleClose = () => {\n    this.props.onClose(this.props.component.key);\n  };\n\n  handleIssueChange = (_: T.Issue) => {\n    this.refreshBranchStatus();\n  };\n\n  handleLoaded = (component: T.SourceViewerFile) => {\n    this.props.onLoad({\n      key: this.props.component.key,\n      name: component.path,\n      qualifier: component.q\n    });\n\n    if (this.container && this.props.component.line) {\n      const row = this.container.querySelector(\n        `.source-line[data-line-number=\"${this.props.component.line}\"]`\n      );\n      if (row) {\n        scrollToElement(row, {\n          smooth: false,\n          parent: this.container,\n          topOffset: 50,\n          bottomOffset: 50\n        });\n      }\n    }\n  };\n\n  refreshBranchStatus = () => {\n    const { component } = this.props;\n    const { branchLike } = component;\n    if (branchLike && isPullRequest(branchLike)) {\n      getParents(component.key).then(\n        (parents?: any[]) => {\n          if (parents && parents.length > 0) {\n            this.props.fetchBranchStatus(branchLike, parents.pop().key);\n          }\n        },\n        () => {}\n      );\n    }\n  };\n\n  render() {\n    const { component } = this.props;\n\n    return (\n      <div className=\"workspace-viewer\">\n        <WorkspaceHeader\n          maximized={this.props.maximized}\n          onClose={this.handleClose}\n          onCollapse={this.props.onCollapse}\n          onMaximize={this.props.onMaximize}\n          onMinimize={this.props.onMinimize}\n          onResize={this.props.onResize}>\n          <WorkspaceComponentTitle component={component} />\n        </WorkspaceHeader>\n\n        <div\n          className=\"workspace-viewer-container\"\n          ref={node => (this.container = node)}\n          style={{ height: this.props.height }}>\n          <SourceViewer\n            aroundLine={component.line}\n            branchLike={component.branchLike}\n            component={component.key}\n            highlightedLine={component.line}\n            onIssueChange={this.handleIssueChange}\n            onLoaded={this.handleLoaded}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { fetchBranchStatus: fetchBranchStatus as any };\n\nexport default connect(null, mapDispatchToProps)(WorkspaceComponentViewer);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { lazyLoadComponent } from 'sonar-ui-common/components/lazyLoadComponent';\n\nconst SourceViewer = lazyLoadComponent(\n  () => import(/* webpackPrefetch: true */ './SourceViewerBase'),\n  'SourceViewer'\n);\nexport default SourceViewer;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { collapsePath } from 'sonar-ui-common/helpers/path';\nimport { ComponentDescriptor } from './context';\n\ninterface Props {\n  component: ComponentDescriptor;\n  limited?: boolean;\n}\n\nexport default function WorkspaceComponentTitle({ component, limited }: Props) {\n  const { name = '—' } = component;\n  return (\n    <>\n      {component.qualifier && (\n        <QualifierIcon className=\"little-spacer-right\" qualifier={component.qualifier} />\n      )}\n      {limited ? collapsePath(name, 15) : name}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DraggableCore, DraggableData } from 'react-draggable';\nimport { ButtonIcon } from 'sonar-ui-common/components/controls/buttons';\nimport ClearIcon from 'sonar-ui-common/components/icons/ClearIcon';\nimport CollapseIcon from 'sonar-ui-common/components/icons/CollapseIcon';\nimport ExpandIcon from 'sonar-ui-common/components/icons/ExpandIcon';\nimport { IconProps } from 'sonar-ui-common/components/icons/Icon';\nimport MinimizeIcon from 'sonar-ui-common/components/icons/MinimizeIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  children: React.ReactNode;\n  maximized?: boolean;\n  onClose: () => void;\n  onCollapse: () => void;\n  onMaximize: () => void;\n  onMinimize: () => void;\n  onResize: (deltaY: number) => void;\n}\n\nexport default class WorkspaceHeader extends React.PureComponent<Props> {\n  handleDrag = (_event: MouseEvent, data: DraggableData) => {\n    this.props.onResize(data.deltaY);\n  };\n\n  render() {\n    return (\n      <header className=\"workspace-viewer-header\">\n        <h6 className=\"workspace-viewer-name\">{this.props.children}</h6>\n\n        <DraggableCore offsetParent={document.body} onDrag={this.handleDrag}>\n          <div className=\"workspace-viewer-resize js-resize\" />\n        </DraggableCore>\n\n        <div className=\"workspace-viewer-actions\">\n          <WorkspaceHeaderButton\n            icon={MinimizeIcon}\n            onClick={this.props.onCollapse}\n            tooltip=\"workspace.minimize\"\n          />\n\n          {this.props.maximized ? (\n            <WorkspaceHeaderButton\n              icon={CollapseIcon}\n              onClick={this.props.onMinimize}\n              tooltip=\"workspace.normal_size\"\n            />\n          ) : (\n            <WorkspaceHeaderButton\n              icon={ExpandIcon}\n              onClick={this.props.onMaximize}\n              tooltip=\"workspace.full_window\"\n            />\n          )}\n\n          <WorkspaceHeaderButton\n            icon={ClearIcon}\n            onClick={this.props.onClose}\n            tooltip=\"workspace.close\"\n          />\n        </div>\n      </header>\n    );\n  }\n}\n\ninterface WorkspaceHeaderButtonProps {\n  icon: React.SFC<IconProps>;\n  onClick: () => void;\n  tooltip: string;\n}\n\nfunction WorkspaceHeaderButton({ icon: Icon, onClick, tooltip }: WorkspaceHeaderButtonProps) {\n  return (\n    <ButtonIcon\n      className=\"workspace-header-icon\"\n      color=\"#fff\"\n      onClick={onClick}\n      tooltip={translate(tooltip)}>\n      <Icon fill={undefined} />\n    </ButtonIcon>\n  );\n}\n"],"sourceRoot":""}