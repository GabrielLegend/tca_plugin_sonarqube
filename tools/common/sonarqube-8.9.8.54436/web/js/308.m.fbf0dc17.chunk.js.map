{"version":3,"sources":["webpack:///./src/main/js/components/common/MeasuresLink.css?71dd","webpack:///./src/main/js/components/common/MeasuresLink.css","webpack:///./src/main/js/apps/portfolio/styles.css?d02f","webpack:///./src/main/js/apps/portfolio/styles.css","webpack:///./src/main/js/components/common/MeasuresLink.tsx","webpack:///./src/main/js/apps/portfolio/utils.ts","webpack:///./src/main/js/apps/portfolio/components/Effort.tsx","webpack:///./src/main/js/apps/portfolio/components/MainRating.tsx","webpack:///./src/main/js/apps/portfolio/components/RatingFreshness.tsx","webpack:///./src/main/js/apps/portfolio/components/MetricBox.tsx","webpack:///./src/main/js/api/report.ts","webpack:///./src/main/js/apps/portfolio/components/Subscription.tsx","webpack:///./src/main/js/apps/portfolio/components/Report.tsx","webpack:///./src/main/js/apps/portfolio/components/WorstProjects.tsx","webpack:///./src/main/js/apps/portfolio/components/App.tsx","webpack:///./src/main/js/components/measure/utils.ts","webpack:///./src/main/js/components/measure/Measure.tsx","webpack:///./src/main/js/components/activity-graph/utils.ts","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/types/project-activity.ts","webpack:///./src/main/js/components/common/ActivityLink.tsx","webpack:///./src/main/js/components/common/ActivityLink.css?a97d","webpack:///./src/main/js/components/common/ActivityLink.css"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","props","branchLike","className","component","label","metric","to","componentKey","size","PORTFOLIO_METRICS","METRICS_PER_TYPE","releasability","measuresMetric","rating","effort","last_change","reliability","activity","vulnerabilities","security_hotspots","maintainability","SUB_COMPONENTS_METRICS","convertMeasures","measures","result","forEach","measure","value","Effort","metricKey","defaultMessage","id","values","projects","listView","Measure","metricType","String","small","MainRating","RatingFreshness","lastChange","data","JSON","parse","date","MetricBox","keys","lastReliabilityChange","rawEffort","undefined","overlay","Number","level","ActivityLink","graph","custom","getReportUrl","encodeURIComponent","handleSubscription","subscribed","addGlobalSuccessMessage","this","getFrequencyText","onSubscribe","handleSubscribe","catch","throwGlobalError","then","handleUnsubscribe","effectiveFrequency","status","componentFrequency","globalFrequency","hasEmail","currentUser","email","href","onClick","state","mounted","loading","loadStatus","key","setState","canSubscribe","download","name","target","rel","tagName","WorstProjects","subComponents","total","count","length","maxLoc","map","projectsPageUrl","pathname","query","refKey","qualifier","Project","renderCell","ncloc","barWidth","Math","max","round","height","width","fill","blue","x","y","renderNcloc","type","isEmpty","isNotComputed","fetchMetrics","fetchData","prevProps","Promise","all","metricKeys","join","ps","s","components","totalSubComponents","paging","renderSpinner","renderEmpty","renderWhenNotComputed","description","mapDispatchToProps","metrics","KNOWN_RATINGS","enhanceMeasure","leak","getLeakValue","period","getRatingTooltip","finalMetricKey","substr","includes","decimals","formattedValue","omitExtraDecimalZeros","tooltip","DEFAULT_GRAPH","issues","GRAPHS_METRICS_DISPLAYED","bugs","code_smells","coverage","lines_to_cover","uncovered_lines","duplications","duplicated_lines","GRAPHS_METRICS","concat","reliability_rating","security_rating","sqale_rating","duplicated_lines_density","isCustomGraph","getGraphTypes","ignoreCustom","graphs","hasDataValues","serie","some","point","Boolean","hasHistoryData","series","getSeriesMetricType","getDisplayedHistoryMetrics","customMetrics","getHistoryMetrics","splitSeriesInGraphs","maxGraph","maxSeries","slice","generateSeries","measuresHistory","displayedMetrics","filter","indexOf","uncoveredLines","linesToCover","find","history","analysis","idx","translatedName","generateCoveredLinesMetric","Array","isArray","findMetric","saveActivityGraph","namespace","project","getActivityGraph","customGraphs","split","message","dispatch","GraphType"],"mappings":"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","file":"js/308.m.fbf0dc17.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./MeasuresLink.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".measures-link{border:none}.measures-link>span{border-bottom:1px solid #cae3f2}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".portfolio-overview>h1{font-weight:400}.portfolio-overview>.page-actions{margin-bottom:0}.portfolio-measure-secondary-value{line-height:24px;font-size:18px;font-weight:300}.portfolio-grid{position:relative;z-index:10;display:flex;justify-content:space-around;align-items:center}.portfolio-grid>li{vertical-align:top;width:50%;text-align:center}.portfolio-grid>li.text-middle{vertical-align:middle}.portfolio-freshness{line-height:24px;white-space:nowrap}.portfolio-description{max-width:60%}.portfolio-boxes{display:flex;justify-content:space-between;align-items:stretch;margin-bottom:20px;padding:15px 0;width:100%}.portfolio-box{flex:1 0 10%;position:relative;padding:0 16px 66px;margin:0 8px;border:1px solid #e6e6e6;background-color:#fff;box-sizing:border-box}.portfolio-box:first-child{margin-left:0}.portfolio-box:last-child{margin-right:0}.portfolio-box-title{padding:8px 0 16px;margin:8px 0 16px;font-size:16px;line-height:16px;border-bottom:1px solid #e6e6e6;white-space:nowrap}.portfolio-box-title>.button-small>svg{margin-top:0}.portfolio-box>h3{color:#666;font-size:12px;font-weight:400;margin-top:8px}.portfolio-box-rating,.portfolio-box-rating .rating{display:block;width:80px;height:80px;line-height:80px}.portfolio-box-rating{margin:16px auto;border:none}.portfolio-box-rating .rating{border-radius:80px;font-size:48px;text-align:center}.portfolio-box-rating .rating.no-rating{color:#666;font-size:16px}.portfolio-box-links{border-top:1px solid #e6e6e6;text-align:center;position:absolute;bottom:0;left:0;right:0}.portfolio-box-links>div{display:inline-block;padding:12px 0;width:50%;box-sizing:border-box}.portfolio-box-links>div:first-child{border-right:1px solid #e6e6e6}.portfolio-box-links svg,.portfolio-breakdown-box-link svg{vertical-align:middle}.portfolio-breakdown{display:flex}.portfolio-breakdown-box{flex:0 0 auto;display:flex;flex-direction:column;background-color:#fff;border:1px solid #e6e6e6;margin:8px 0 16px}.portfolio-breakdown-box+.portfolio-breakdown-box{margin-left:16px}.portfolio-breakdown-box .portfolio-breakdown-metric,.portfolio-breakdown-box h2{margin:8px 16px 0}.portfolio-breakdown-box-link{margin-top:16px;border-top:1px solid #e6e6e6;padding:16px}.portfolio-sub-components table.data th{font-size:13px;text-transform:none;vertical-align:middle}.portfolio-sub-components-cell{width:110px}.portfolio-meta-header{margin-bottom:4px;color:#333}.portfolio-meta-card{min-width:200px;box-sizing:border-box}.portfolio-meta-card+.portfolio-meta-card{margin-top:16px;padding-top:15px;border-top:1px solid #e6e6e6}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport MeasuresIcon from 'sonar-ui-common/components/icons/MeasuresIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getComponentDrilldownUrl } from '../../helpers/urls';\nimport { BranchLike } from '../../types/branch-like';\nimport './MeasuresLink.css';\n\nexport interface MeasuresLinkProps {\n  branchLike?: BranchLike;\n  className?: string;\n  component: string;\n  label?: string;\n  metric: string;\n}\n\nexport default function MeasuresLink(props: MeasuresLinkProps) {\n  const { branchLike, className, component, label, metric } = props;\n  return (\n    <Link\n      className={classNames('measures-link', className)}\n      to={getComponentDrilldownUrl({ branchLike, componentKey: component, metric })}>\n      <MeasuresIcon className=\"little-spacer-right\" size={14} />\n      <span>{label || translate('portfolio.measures_link')}</span>\n    </Link>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const PORTFOLIO_METRICS = [\n  'projects',\n  'ncloc',\n  'ncloc_language_distribution',\n\n  'releasability_rating',\n  'releasability_effort',\n\n  'sqale_rating',\n  'maintainability_rating_effort',\n\n  'reliability_rating',\n  'reliability_rating_effort',\n\n  'security_rating',\n  'security_rating_effort',\n\n  'security_review_rating',\n  'security_review_rating_effort',\n\n  'last_change_on_releasability_rating',\n  'last_change_on_maintainability_rating',\n  'last_change_on_security_rating',\n  'last_change_on_security_review_rating',\n  'last_change_on_reliability_rating'\n];\n\nexport interface MetricKeys {\n  activity?: string;\n  effort: string;\n  measuresMetric: string;\n  label: string;\n  last_change: string;\n  rating: string;\n}\n\nexport const METRICS_PER_TYPE: T.Dict<MetricKeys> = {\n  releasability: {\n    measuresMetric: 'Releasability',\n    label: 'metric_domain.Releasability',\n    rating: 'releasability_rating',\n    effort: 'releasability_effort',\n    last_change: 'last_change_on_releasability_rating'\n  },\n  reliability: {\n    measuresMetric: 'Reliability',\n    label: 'metric_domain.Reliability',\n    rating: 'reliability_rating',\n    effort: 'reliability_rating_effort',\n    last_change: 'last_change_on_reliability_rating',\n    activity: 'reliability_rating,bugs'\n  },\n  vulnerabilities: {\n    measuresMetric: 'Security',\n    label: 'portfolio.metric_domain.vulnerabilities',\n    rating: 'security_rating',\n    effort: 'security_rating_effort',\n    last_change: 'last_change_on_security_rating',\n    activity: 'security_rating,vulnerabilities'\n  },\n  security_hotspots: {\n    measuresMetric: 'security_review_rating',\n    label: 'portfolio.metric_domain.security_hotspots',\n    rating: 'security_review_rating',\n    effort: 'security_review_rating_effort',\n    last_change: 'last_change_on_security_review_rating',\n    activity: 'security_review_rating,security_hotspots'\n  },\n  maintainability: {\n    measuresMetric: 'Maintainability',\n    label: 'metric_domain.Maintainability',\n    rating: 'sqale_rating',\n    effort: 'maintainability_rating_effort',\n    last_change: 'last_change_on_maintainability_rating',\n    activity: 'sqale_rating,code_smells'\n  }\n};\n\nexport const SUB_COMPONENTS_METRICS = [\n  'ncloc',\n  'releasability_rating',\n  'security_rating',\n  'security_review_rating',\n  'reliability_rating',\n  'sqale_rating',\n  'alert_status'\n];\n\nexport function convertMeasures(measures: Array<{ metric: string; value?: string }>) {\n  const result: T.Dict<string | undefined> = {};\n  measures.forEach(measure => {\n    result[measure.metric] = measure.value;\n  });\n  return result;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport Rating from 'sonar-ui-common/components/ui/Rating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Measure from '../../../components/measure/Measure';\nimport { getComponentDrilldownUrl } from '../../../helpers/urls';\n\ninterface Props {\n  component: string;\n  effort: { projects: number; rating: number };\n  metricKey: string;\n}\n\nexport default function Effort({ component, effort, metricKey }: Props) {\n  return (\n    <div className=\"portfolio-effort\">\n      <FormattedMessage\n        defaultMessage={translate('portfolio.x_in_y')}\n        id=\"portfolio.x_in_y\"\n        values={{\n          projects: (\n            <Link\n              to={getComponentDrilldownUrl({\n                componentKey: component,\n                metric: metricKey,\n                listView: true\n              })}>\n              <span>\n                <Measure\n                  className=\"little-spacer-right\"\n                  metricKey=\"projects\"\n                  metricType=\"SHORT_INT\"\n                  value={String(effort.projects)}\n                />\n                {effort.projects === 1\n                  ? translate('project_singular')\n                  : translate('project_plural')}\n              </span>\n            </Link>\n          ),\n          rating: <Rating small={true} value={effort.rating} />\n        }}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport Rating from 'sonar-ui-common/components/ui/Rating';\nimport { getMeasureTreemapUrl } from '../../../helpers/urls';\n\ninterface Props {\n  component: string;\n  metric: string;\n  value: string;\n}\n\nexport default function MainRating({ component, metric, value }: Props) {\n  return (\n    <Link className=\"portfolio-box-rating\" to={getMeasureTreemapUrl(component, metric)}>\n      <Rating value={value} />\n    </Link>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DateFromNow from 'sonar-ui-common/components/intl/DateFromNow';\nimport Rating from 'sonar-ui-common/components/ui/Rating';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  lastChange?: string;\n  rating?: string;\n}\n\nexport default function RatingFreshness({ lastChange, rating }: Props) {\n  if (!lastChange) {\n    return (\n      <div className=\"portfolio-freshness\">\n        {rating && (\n          <FormattedMessage\n            defaultMessage={translate('portfolio.has_always_been_x')}\n            id=\"portfolio.has_always_been_x\"\n            values={{ rating: <Rating small={true} value={rating} /> }}\n          />\n        )}\n      </div>\n    );\n  }\n\n  const data = JSON.parse(lastChange);\n\n  return (\n    <div className=\"portfolio-freshness\">\n      <FormattedMessage\n        defaultMessage={translate('portfolio.was_x_y')}\n        id=\"portfolio.was_x_y\"\n        values={{\n          rating: <Rating small={true} value={data.value} />,\n          date: <DateFromNow date={data.date} />\n        }}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport ActivityLink from '../../../components/common/ActivityLink';\nimport MeasuresLink from '../../../components/common/MeasuresLink';\nimport Measure from '../../../components/measure/Measure';\nimport { getComponentDrilldownUrl } from '../../../helpers/urls';\nimport { GraphType } from '../../../types/project-activity';\nimport { METRICS_PER_TYPE } from '../utils';\nimport Effort from './Effort';\nimport MainRating from './MainRating';\nimport RatingFreshness from './RatingFreshness';\n\nexport interface MetricBoxProps {\n  component: string;\n  measures: T.Dict<string | undefined>;\n  metricKey: string;\n}\n\nexport default function MetricBox({ component, measures, metricKey }: MetricBoxProps) {\n  const keys = METRICS_PER_TYPE[metricKey];\n  const rating = measures[keys.rating];\n  const lastReliabilityChange = measures[keys.last_change];\n  const rawEffort = measures[keys.effort];\n  const effort = rawEffort ? JSON.parse(rawEffort) : undefined;\n\n  return (\n    <div className=\"portfolio-box\">\n      <h2 className=\"portfolio-box-title\">\n        {translate(keys.label)}\n        <HelpTooltip\n          className=\"little-spacer-left\"\n          overlay={translate('portfolio.metric_domain', metricKey, 'help')}\n        />\n      </h2>\n\n      {rating ? (\n        <MainRating component={component} metric={keys.rating} value={rating} />\n      ) : (\n        <div className=\"portfolio-box-rating\">\n          <span className=\"rating no-rating\">—</span>\n        </div>\n      )}\n\n      {rating && (\n        <>\n          <h3>{translate('portfolio.metric_trend')}</h3>\n          <RatingFreshness lastChange={lastReliabilityChange} rating={rating} />\n        </>\n      )}\n\n      {metricKey === 'releasability'\n        ? Number(effort) > 0 && (\n            <>\n              <h3>{translate('portfolio.lowest_rated_projects')}</h3>\n              <div className=\"portfolio-effort\">\n                <Link\n                  to={getComponentDrilldownUrl({\n                    componentKey: component,\n                    metric: 'alert_status'\n                  })}>\n                  <span>\n                    <Measure\n                      className=\"little-spacer-right\"\n                      metricKey=\"projects\"\n                      metricType=\"SHORT_INT\"\n                      value={effort}\n                    />\n                    {Number(effort) === 1\n                      ? translate('project_singular')\n                      : translate('project_plural')}\n                  </span>\n                </Link>\n                <Level\n                  aria-label={\n                    Number(effort) === 1\n                      ? translate('portfolio.has_qg_status')\n                      : translate('portfolio.have_qg_status')\n                  }\n                  className=\"little-spacer-left\"\n                  level=\"ERROR\"\n                  small={true}\n                />\n              </div>\n            </>\n          )\n        : effort && (\n            <>\n              <h3>{translate('portfolio.lowest_rated_projects')}</h3>\n              <Effort component={component} effort={effort} metricKey={keys.rating} />\n            </>\n          )}\n\n      <div className=\"portfolio-box-links\">\n        <div>\n          <MeasuresLink component={component} metric={keys.measuresMetric} />\n        </div>\n        <div>\n          <ActivityLink\n            component={component}\n            metric={keys.activity || keys.rating}\n            graph={GraphType.custom}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { getBaseUrl } from '../helpers/system';\n\nexport interface ReportStatus {\n  canDownload?: boolean;\n  canSubscribe: boolean;\n  componentFrequency?: string;\n  globalFrequency: string;\n  subscribed?: boolean;\n}\n\nexport function getReportStatus(component: string): Promise<ReportStatus> {\n  return getJSON('/api/governance_reports/status', { componentKey: component }).catch(\n    throwGlobalError\n  );\n}\n\nexport function getReportUrl(component: string): string {\n  return `${getBaseUrl()}/api/governance_reports/download?componentKey=${encodeURIComponent(\n    component\n  )}`;\n}\n\nexport function subscribe(component: string): Promise<void | Response> {\n  return post('/api/governance_reports/subscribe', { componentKey: component }).catch(\n    throwGlobalError\n  );\n}\n\nexport function unsubscribe(component: string): Promise<void | Response> {\n  return post('/api/governance_reports/unsubscribe', { componentKey: component }).catch(\n    throwGlobalError\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { ReportStatus, subscribe, unsubscribe } from '../../../api/report';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\nimport throwGlobalError from '../../../app/utils/throwGlobalError';\nimport { isLoggedIn } from '../../../helpers/users';\nimport { getCurrentUser, Store } from '../../../store/rootReducer';\n\ninterface Props {\n  component: string;\n  currentUser: T.CurrentUser;\n  onSubscribe: () => void;\n  status: ReportStatus;\n}\n\nexport class Subscription extends React.PureComponent<Props> {\n  handleSubscription = (subscribed: boolean) => {\n    addGlobalSuccessMessage(\n      subscribed\n        ? translateWithParameters('report.subscribe_x_success', this.getFrequencyText())\n        : translateWithParameters('report.unsubscribe_x_success', this.getFrequencyText())\n    );\n    this.props.onSubscribe();\n  };\n\n  handleSubscribe = () => {\n    subscribe(this.props.component)\n      .then(() => this.handleSubscription(true))\n      .catch(throwGlobalError);\n  };\n\n  handleUnsubscribe = () => {\n    unsubscribe(this.props.component)\n      .then(() => this.handleSubscription(false))\n      .catch(throwGlobalError);\n  };\n\n  getFrequencyText = () => {\n    const effectiveFrequency =\n      this.props.status.componentFrequency || this.props.status.globalFrequency;\n    return translate('report.frequency', effectiveFrequency);\n  };\n\n  render() {\n    const hasEmail = isLoggedIn(this.props.currentUser) && !!this.props.currentUser.email;\n\n    const { status } = this.props;\n\n    if (!hasEmail) {\n      return <span className=\"text-muted-2\">{translate('report.no_email_to_subscribe')}</span>;\n    }\n\n    return status.subscribed ? (\n      <a href=\"#\" onClick={this.handleUnsubscribe}>\n        {translateWithParameters('report.unsubscribe_x', this.getFrequencyText())}\n      </a>\n    ) : (\n      <a href=\"#\" onClick={this.handleSubscribe}>\n        {translateWithParameters('report.subscribe_x', this.getFrequencyText())}\n      </a>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(Subscription);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport Dropdown from 'sonar-ui-common/components/controls/Dropdown';\nimport DropdownIcon from 'sonar-ui-common/components/icons/DropdownIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getReportStatus, getReportUrl, ReportStatus } from '../../../api/report';\nimport Subscription from './Subscription';\n\ninterface Props {\n  component: { key: string; name: string };\n}\n\ninterface State {\n  loading: boolean;\n  status?: ReportStatus;\n}\n\nexport default class Report extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.loadStatus();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  loadStatus = () => {\n    getReportStatus(this.props.component.key).then(\n      status => {\n        if (this.mounted) {\n          this.setState({ status, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { component } = this.props;\n    const { status, loading } = this.state;\n\n    if (loading || !status) {\n      return null;\n    }\n\n    return status.canSubscribe ? (\n      <Dropdown\n        overlay={\n          <ul className=\"menu\">\n            <li>\n              <a\n                download={component.name + ' - Executive Report.pdf'}\n                href={getReportUrl(component.key)}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\">\n                {translate('report.print')}\n              </a>\n            </li>\n            <li>\n              <Subscription\n                component={component.key}\n                onSubscribe={this.loadStatus}\n                status={status}\n              />\n            </li>\n          </ul>\n        }\n        tagName=\"li\">\n        <Button className=\"dropdown-toggle\">\n          {translate('portfolio.pdf_report')}\n          <DropdownIcon className=\"spacer-left icon-half-transparent\" />\n        </Button>\n      </Dropdown>\n    ) : (\n      <a\n        className=\"button\"\n        download={component.name + ' - Executive Report.pdf'}\n        href={getReportUrl(component.key)}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        {translate('report.print')}\n      </a>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { max } from 'lodash';\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { colors } from '../../../app/theme';\nimport Measure from '../../../components/measure/Measure';\nimport { getComponentOverviewUrl } from '../../../helpers/urls';\nimport { ComponentQualifier } from '../../../types/component';\nimport { SubComponent } from '../types';\n\ninterface Props {\n  component: string;\n  subComponents: SubComponent[];\n  total: number;\n}\n\nexport default function WorstProjects({ component, subComponents, total }: Props) {\n  const count = subComponents.length;\n\n  if (!count) {\n    return null;\n  }\n\n  const maxLoc = max(\n    subComponents.map(component => Number(component.measures['ncloc'] || 0))\n  ) as number;\n\n  const projectsPageUrl = { pathname: '/code', query: { id: component } };\n\n  return (\n    <div className=\"panel panel-white portfolio-sub-components\" id=\"portfolio-sub-components\">\n      <table className=\"data zebra\">\n        <thead>\n          <tr>\n            <th>&nbsp;</th>\n            <th className=\"text-center portfolio-sub-components-cell\">\n              {translate('metric_domain.Releasability')}\n            </th>\n            <th className=\"text-center portfolio-sub-components-cell\">\n              {translate('metric_domain.Reliability')}\n            </th>\n            <th className=\"text-center portfolio-sub-components-cell\">\n              {translate('portfolio.metric_domain.vulnerabilities')}\n            </th>\n            <th className=\"text-center portfolio-sub-components-cell\">\n              {translate('portfolio.metric_domain.security_hotspots')}\n            </th>\n            <th className=\"text-center portfolio-sub-components-cell\">\n              {translate('metric_domain.Maintainability')}\n            </th>\n            <th className=\"text-center portfolio-sub-components-cell\">\n              {translate('metric.ncloc.name')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {subComponents.map(component => (\n            <tr key={component.key}>\n              <td>\n                <Link\n                  className=\"link-with-icon\"\n                  to={getComponentOverviewUrl(\n                    component.refKey || component.key,\n                    component.qualifier\n                  )}>\n                  <QualifierIcon qualifier={component.qualifier} /> {component.name}\n                </Link>\n              </td>\n              {component.qualifier === ComponentQualifier.Project\n                ? renderCell(component.measures, 'alert_status', 'LEVEL')\n                : renderCell(component.measures, 'releasability_rating', 'RATING')}\n              {renderCell(component.measures, 'reliability_rating', 'RATING')}\n              {renderCell(component.measures, 'security_rating', 'RATING')}\n              {renderCell(component.measures, 'security_review_rating', 'RATING')}\n              {renderCell(component.measures, 'sqale_rating', 'RATING')}\n              {renderNcloc(component.measures, maxLoc)}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {total > count && (\n        <footer className=\"spacer-top note text-center\">\n          {translateWithParameters(\n            'x_of_y_shown',\n            formatMeasure(count, 'INT'),\n            formatMeasure(total, 'INT')\n          )}\n          <Link className=\"spacer-left\" to={projectsPageUrl}>\n            {translate('show_more')}\n          </Link>\n        </footer>\n      )}\n    </div>\n  );\n}\n\nfunction renderCell(measures: T.Dict<string | undefined>, metric: string, type: string) {\n  return (\n    <td className=\"text-center\">\n      <Measure metricKey={metric} metricType={type} value={measures[metric]} />\n    </td>\n  );\n}\n\nfunction renderNcloc(measures: T.Dict<string | undefined>, maxLoc: number) {\n  const ncloc = Number(measures['ncloc'] || 0);\n  const barWidth = maxLoc > 0 ? Math.max(1, Math.round((ncloc / maxLoc) * 50)) : 0;\n  return (\n    <td className=\"text-right\">\n      <span className=\"note\">\n        <Measure metricKey=\"ncloc\" metricType=\"SHORT_INT\" value={measures['ncloc']} />\n      </span>\n      {maxLoc > 0 && (\n        <svg className=\"spacer-left\" height=\"16\" width=\"50\">\n          <rect\n            className=\"bar-chart-bar\"\n            fill={colors.blue}\n            height=\"10\"\n            width={barWidth}\n            x=\"0\"\n            y=\"3\"\n          />\n        </svg>\n      )}\n    </td>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getChildren } from '../../../api/components';\nimport { getMeasures } from '../../../api/measures';\nimport MeasuresLink from '../../../components/common/MeasuresLink';\nimport Measure from '../../../components/measure/Measure';\nimport { fetchMetrics } from '../../../store/rootActions';\nimport { getMetrics, Store } from '../../../store/rootReducer';\nimport '../styles.css';\nimport { SubComponent } from '../types';\nimport { convertMeasures, PORTFOLIO_METRICS, SUB_COMPONENTS_METRICS } from '../utils';\nimport MetricBox from './MetricBox';\nimport Report from './Report';\nimport WorstProjects from './WorstProjects';\n\ninterface OwnProps {\n  component: T.Component;\n}\n\ninterface StateToProps {\n  metrics: T.Dict<T.Metric>;\n}\n\ninterface DispatchToProps {\n  fetchMetrics: () => void;\n}\n\ntype Props = StateToProps & DispatchToProps & OwnProps;\n\ninterface State {\n  loading: boolean;\n  measures?: T.Dict<string | undefined>;\n  subComponents?: SubComponent[];\n  totalSubComponents?: number;\n}\n\nexport class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.props.fetchMetrics();\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchData();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchData() {\n    this.setState({ loading: true });\n    Promise.all([\n      getMeasures({ component: this.props.component.key, metricKeys: PORTFOLIO_METRICS.join() }),\n      getChildren(this.props.component.key, SUB_COMPONENTS_METRICS, { ps: 20, s: 'qualifier' })\n    ]).then(\n      ([measures, subComponents]) => {\n        if (this.mounted) {\n          this.setState({\n            loading: false,\n            measures: convertMeasures(measures),\n            subComponents: subComponents.components.map((component: any) => ({\n              ...component,\n              measures: convertMeasures(component.measures)\n            })),\n            totalSubComponents: subComponents.paging.total\n          });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  isEmpty = () => this.state.measures === undefined || this.state.measures['ncloc'] === undefined;\n\n  isNotComputed = () =>\n    this.state.measures && this.state.measures['reliability_rating'] === undefined;\n\n  renderSpinner() {\n    return (\n      <div className=\"page page-limited\">\n        <div className=\"text-center\">\n          <i className=\"spinner spacer\" />\n        </div>\n      </div>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <div className=\"page page-limited\">\n        <div className=\"empty-search\">\n          <h3>\n            {!this.state.measures || !this.state.measures['projects']\n              ? translate('portfolio.empty')\n              : translate('portfolio.no_lines_of_code')}\n          </h3>\n        </div>\n      </div>\n    );\n  }\n\n  renderWhenNotComputed() {\n    return (\n      <div className=\"page page-limited\">\n        <div className=\"empty-search\">\n          <h3>{translate('portfolio.not_computed')}</h3>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { component } = this.props;\n    const { loading, measures, subComponents, totalSubComponents } = this.state;\n\n    if (loading) {\n      return this.renderSpinner();\n    }\n\n    if (this.isEmpty()) {\n      return this.renderEmpty();\n    }\n\n    if (this.isNotComputed()) {\n      return this.renderWhenNotComputed();\n    }\n\n    return (\n      <div className=\"page page-limited portfolio-overview\">\n        <div className=\"page-actions\">\n          <Report component={component} />\n        </div>\n        {component.description && (\n          <div className=\"portfolio-description display-inline-block big-spacer-bottom\">\n            {component.description}\n          </div>\n        )}\n        <h1>{translate('portfolio.health_factors')}</h1>\n        <div className=\"portfolio-boxes\">\n          <MetricBox component={component.key} measures={measures!} metricKey=\"releasability\" />\n          <MetricBox component={component.key} measures={measures!} metricKey=\"reliability\" />\n          <MetricBox component={component.key} measures={measures!} metricKey=\"vulnerabilities\" />\n          <MetricBox component={component.key} measures={measures!} metricKey=\"security_hotspots\" />\n          <MetricBox component={component.key} measures={measures!} metricKey=\"maintainability\" />\n        </div>\n\n        <h1>{translate('portfolio.breakdown')}</h1>\n        <div className=\"portfolio-breakdown\">\n          <div className=\"portfolio-breakdown-box\">\n            <h2 className=\"text-muted small\">{translate('portfolio.number_of_projects')}</h2>\n            <div className=\"portfolio-breakdown-metric huge\">\n              <Measure\n                metricKey=\"projects\"\n                metricType=\"SHORT_INT\"\n                value={(measures && measures.projects) || '0'}\n              />\n            </div>\n            <div className=\"portfolio-breakdown-box-link\">\n              <div>\n                <MeasuresLink component={component.key} metric=\"projects\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"portfolio-breakdown-box\">\n            <h2 className=\"text-muted small\">{translate('portfolio.number_of_lines')}</h2>\n            <div className=\"portfolio-breakdown-metric huge\">\n              <Measure\n                metricKey=\"ncloc\"\n                metricType=\"SHORT_INT\"\n                value={(measures && measures.ncloc) || '0'}\n              />\n            </div>\n            <div className=\"portfolio-breakdown-box-link\">\n              <div>\n                <MeasuresLink\n                  component={component.key}\n                  label={translate('portfolio.language_breakdown_link')}\n                  metric=\"ncloc\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {subComponents !== undefined && totalSubComponents !== undefined && (\n          <WorstProjects\n            component={component.key}\n            subComponents={subComponents}\n            total={totalSubComponents}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps: DispatchToProps = { fetchMetrics };\n\nconst mapStateToProps = (state: Store): StateToProps => ({\n  metrics: getMetrics(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getRatingTooltip as nextGetRatingTooltip, isDiffMetric } from '../../helpers/measures';\n\nconst KNOWN_RATINGS = [\n  'sqale_rating',\n  'maintainability_rating', // Needed to provide the label for \"new_maintainability_rating\"\n  'reliability_rating',\n  'security_rating',\n  'security_review_rating'\n];\n\nexport function enhanceMeasure(measure: T.Measure, metrics: T.Dict<T.Metric>): T.MeasureEnhanced {\n  return {\n    ...measure,\n    metric: metrics[measure.metric],\n    leak: getLeakValue(measure)\n  };\n}\n\nexport function getLeakValue(measure: T.MeasureIntern | undefined): string | undefined {\n  return measure?.period?.value;\n}\n\nexport function getRatingTooltip(metricKey: string, value: number): string | undefined {\n  const finalMetricKey = isDiffMetric(metricKey) ? metricKey.substr(4) : metricKey;\n  if (KNOWN_RATINGS.includes(finalMetricKey)) {\n    return nextGetRatingTooltip(finalMetricKey, value);\n  }\n  return undefined;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport Level from 'sonar-ui-common/components/ui/Level';\nimport Rating from 'sonar-ui-common/components/ui/Rating';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\nimport { getRatingTooltip } from './utils';\n\ninterface Props {\n  className?: string;\n  decimals?: number | null;\n  metricKey: string;\n  metricType: string;\n  small?: boolean;\n  value: string | undefined;\n}\n\nexport default function Measure({\n  className,\n  decimals,\n  metricKey,\n  metricType,\n  small,\n  value\n}: Props) {\n  if (value === undefined) {\n    return <span className={className}>–</span>;\n  }\n\n  if (metricType === 'LEVEL') {\n    return <Level className={className} level={value} small={small} />;\n  }\n\n  if (metricType !== 'RATING') {\n    const formattedValue = formatMeasure(value, metricType, {\n      decimals,\n      omitExtraDecimalZeros: metricType === 'PERCENT'\n    });\n    return <span className={className}>{formattedValue != null ? formattedValue : '–'}</span>;\n  }\n\n  const tooltip = getRatingTooltip(metricKey, Number(value));\n  const rating = <Rating small={small} value={value} />;\n  if (tooltip) {\n    return (\n      <Tooltip overlay={tooltip}>\n        <span className={className}>{rating}</span>\n      </Tooltip>\n    );\n  }\n  return rating;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { chunk, flatMap, groupBy, sortBy } from 'lodash';\nimport { getLocalizedMetricName, translate } from 'sonar-ui-common/helpers/l10n';\nimport { get, save } from 'sonar-ui-common/helpers/storage';\nimport { localizeMetric } from '../../helpers/measures';\nimport { MetricKey } from '../../types/metrics';\nimport { GraphType, MeasureHistory, Serie } from '../../types/project-activity';\n\nexport const DEFAULT_GRAPH = GraphType.issues;\n\nconst GRAPHS_METRICS_DISPLAYED: T.Dict<string[]> = {\n  [GraphType.issues]: [MetricKey.bugs, MetricKey.code_smells, MetricKey.vulnerabilities],\n  [GraphType.coverage]: [MetricKey.lines_to_cover, MetricKey.uncovered_lines],\n  [GraphType.duplications]: [MetricKey.ncloc, MetricKey.duplicated_lines]\n};\n\nconst GRAPHS_METRICS: T.Dict<string[]> = {\n  [GraphType.issues]: GRAPHS_METRICS_DISPLAYED[GraphType.issues].concat([\n    MetricKey.reliability_rating,\n    MetricKey.security_rating,\n    MetricKey.sqale_rating\n  ]),\n  [GraphType.coverage]: [...GRAPHS_METRICS_DISPLAYED[GraphType.coverage], MetricKey.coverage],\n  [GraphType.duplications]: [\n    ...GRAPHS_METRICS_DISPLAYED[GraphType.duplications],\n    MetricKey.duplicated_lines_density\n  ]\n};\n\nexport function isCustomGraph(graph: GraphType) {\n  return graph === GraphType.custom;\n}\n\nexport function getGraphTypes(ignoreCustom = false) {\n  const graphs = [GraphType.issues, GraphType.coverage, GraphType.duplications];\n  return ignoreCustom ? graphs : [...graphs, GraphType.custom];\n}\n\nexport function hasDataValues(serie: Serie) {\n  return serie.data.some(point => Boolean(point.y || point.y === 0));\n}\n\nexport function hasHistoryData(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1);\n}\n\nexport function getSeriesMetricType(series: Serie[]) {\n  return series.length > 0 ? series[0].type : 'INT';\n}\n\nexport function getDisplayedHistoryMetrics(graph: GraphType, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS_DISPLAYED[graph];\n}\n\nexport function getHistoryMetrics(graph: GraphType, customMetrics: string[]) {\n  return isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS[graph];\n}\n\nexport function hasHistoryDataValue(series: Serie[]) {\n  return series.some(serie => serie.data && serie.data.length > 1 && hasDataValues(serie));\n}\n\nexport function splitSeriesInGraphs(series: Serie[], maxGraph: number, maxSeries: number) {\n  return flatMap(\n    groupBy(series, serie => serie.type),\n    type => chunk(type, maxSeries)\n  ).slice(0, maxGraph);\n}\n\nexport function generateCoveredLinesMetric(\n  uncoveredLines: MeasureHistory,\n  measuresHistory: MeasureHistory[]\n) {\n  const linesToCover = measuresHistory.find(measure => measure.metric === MetricKey.lines_to_cover);\n  return {\n    data: linesToCover\n      ? uncoveredLines.history.map((analysis, idx) => ({\n          x: analysis.date,\n          y: Number(linesToCover.history[idx].value) - Number(analysis.value)\n        }))\n      : [],\n    name: 'covered_lines',\n    translatedName: translate('project_activity.custom_metric.covered_lines'),\n    type: 'INT'\n  };\n}\n\nexport function generateSeries(\n  measuresHistory: MeasureHistory[],\n  graph: GraphType,\n  metrics: T.Metric[] | T.Dict<T.Metric>,\n  displayedMetrics: string[]\n): Serie[] {\n  if (displayedMetrics.length <= 0 || measuresHistory === undefined) {\n    return [];\n  }\n  return sortBy(\n    measuresHistory\n      .filter(measure => displayedMetrics.indexOf(measure.metric) >= 0)\n      .map(measure => {\n        if (measure.metric === MetricKey.uncovered_lines && !isCustomGraph(graph)) {\n          return generateCoveredLinesMetric(measure, measuresHistory);\n        }\n        const metric = findMetric(measure.metric, metrics);\n        return {\n          data: measure.history.map(analysis => ({\n            x: analysis.date,\n            y: metric && metric.type === 'LEVEL' ? analysis.value : Number(analysis.value)\n          })),\n          name: measure.metric,\n          translatedName: metric ? getLocalizedMetricName(metric) : localizeMetric(measure.metric),\n          type: metric ? metric.type : 'INT'\n        };\n      }),\n    serie =>\n      displayedMetrics.indexOf(serie.name === 'covered_lines' ? 'uncovered_lines' : serie.name)\n  );\n}\n\nexport function saveActivityGraph(\n  namespace: string,\n  project: string,\n  graph: GraphType,\n  metrics: string[] = []\n) {\n  save(namespace, graph, project);\n  if (isCustomGraph(graph)) {\n    save(`${namespace}.custom`, metrics.join(','), project);\n  }\n}\n\nexport function getActivityGraph(\n  namespace: string,\n  project: string\n): { graph: GraphType; customGraphs: string[] } {\n  const customGraphs = get(`${namespace}.custom`, project);\n  return {\n    graph: (get(namespace, project) as GraphType) || DEFAULT_GRAPH,\n    customGraphs: customGraphs ? customGraphs.split(',') : []\n  };\n}\n\nfunction findMetric(key: string, metrics: T.Metric[] | T.Dict<T.Metric>) {\n  if (Array.isArray(metrics)) {\n    return metrics.find(metric => metric.key === key);\n  }\n  return metrics[key];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as globalMessages from '../../store/globalMessages';\nimport getStore from './getStore';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum GraphType {\n  issues = 'issues',\n  coverage = 'coverage',\n  duplications = 'duplications',\n  custom = 'custom'\n}\n\nexport interface HistoryItem {\n  date: Date;\n  value?: string;\n}\n\nexport interface MeasureHistory {\n  metric: string;\n  history: HistoryItem[];\n}\n\nexport interface Serie {\n  data: Point[];\n  name: string;\n  translatedName: string;\n  type: string;\n}\n\nexport interface Point {\n  x: Date;\n  y: number | string | undefined;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HistoryIcon from 'sonar-ui-common/components/icons/HistoryIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getActivityUrl, getMeasureHistoryUrl } from '../../helpers/urls';\nimport { BranchLike } from '../../types/branch-like';\nimport { GraphType } from '../../types/project-activity';\nimport { isCustomGraph } from '../activity-graph/utils';\nimport './ActivityLink.css';\n\nexport interface ActivityLinkProps {\n  branchLike?: BranchLike;\n  component: string;\n  graph?: GraphType;\n  label?: string;\n  metric?: string;\n}\n\nexport default function ActivityLink(props: ActivityLinkProps) {\n  const { branchLike, component, graph, label, metric } = props;\n  return (\n    <Link\n      className=\"activity-link\"\n      to={\n        metric !== undefined && graph !== undefined && isCustomGraph(graph)\n          ? getMeasureHistoryUrl(component, metric, branchLike)\n          : getActivityUrl(component, branchLike, graph)\n      }>\n      <HistoryIcon className=\"little-spacer-right\" size={14} />\n      <span>{label || translate('portfolio.activity_link')}</span>\n    </Link>\n  );\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./ActivityLink.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"a.activity-link{border:none}.activity-link>span{border-bottom:1px solid #cae3f2}\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}