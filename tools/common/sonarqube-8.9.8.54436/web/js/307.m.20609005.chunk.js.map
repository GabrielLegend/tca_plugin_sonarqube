{"version":3,"sources":["webpack:///./src/main/js/apps/settings/styles.css?cb9e","webpack:///./src/main/js/apps/settings/styles.css","webpack:///./src/main/js/apps/settings/store/actions.ts","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionBox.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormModalRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/CreationTooltip.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormField.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/DeleteModal.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionActions.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForBoolean.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForJSON.tsx","webpack:///./src/main/js/apps/settings/components/inputs/SimpleInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForNumber.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForPassword.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForSingleSelectList.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForString.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForText.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PrimitiveInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/MultiValueInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PropertySetInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/Input.tsx","webpack:///./src/main/js/apps/settings/components/Definition.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/EmailForm.tsx","webpack:///./src/main/js/apps/settings/components/SubCategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/CategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/utils.ts","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegration.tsx","webpack:///./src/main/js/apps/settings/components/AnalysisScope.tsx","webpack:///./src/main/js/apps/settings/components/CategoryOverrides.ts","webpack:///./src/main/js/apps/settings/components/Languages.tsx","webpack:///./src/main/js/apps/settings/components/NewCodePeriod.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/AlmSpecificForm.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBindingRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBinding.tsx","webpack:///./src/main/js/apps/settings/components/AdditionalCategories.tsx","webpack:///./src/main/js/apps/settings/components/AllCategoriesList.tsx","webpack:///./src/main/js/apps/settings/components/PageHeader.tsx","webpack:///./src/main/js/apps/settings/components/AppContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/helpers/sanitize.ts","webpack:///./src/main/js/components/common/ScreenPositionHelper.tsx","webpack:///./src/main/js/api/settings.ts","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts","webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","handleError","key","dispatch","response","then","message","Promise","reject","DEFAULT_STATUS","alertSuccess","failureMessage","type","Validating","STATUS_ICON","Failure","className","Success","AlmBindingDefinitionBox","props","alm","branchesEnabled","definition","multipleDefinitions","status","prDecoFeatureTitle","GitLab","prDecoFeatureDescription","onClick","onEdit","onDelete","url","Warning","overlay","id","defaultMessage","values","link","href","developer","sourceEdition","community","rel","target","getPRDecorationFeatureStatus","includes","getImportFeatureStatus","Alert","variant","onCheck","AlmBindingDefinitionFormModalRenderer","action","children","help","isSecondInstance","header","contentLabel","onRequestClose","onCancel","shouldCloseOnOverlayClick","size","onSubmit","event","preventDefault","disabled","canSubmit","super","handleCancel","this","setState","formData","bindingDefinition","touched","handleDelete","handleEdit","handleFieldChange","fieldId","value","handleFormSubmit","state","optionalFields","length","Object","some","v","prevProps","Boolean","onFieldChange","withAppState","appState","edition","preventCreation","undefined","enterprise","mouseLeaveDelay","AlmTabRenderer","definitions","definitionStatus","editedDefinition","form","loadingAlmDefinitions","loadingProjectCount","multipleAlmEnabled","loading","onCreate","map","def","BitbucketCloud","mounted","submitting","success","handleCreate","defaultBinding","definitionKey","find","d","handleSubmit","config","originalKey","call","updateConfiguration","newKey","createConfiguration","onUpdateDefinitions","catch","AlmBindingDefinitionFormField","autoFocus","isTextArea","maxLength","optional","overwriteOnly","propKey","showField","setShowField","htmlFor","placement","onChange","e","currentTarget","required","rows","name","AzureForm","personalAccessToken","AzureTab","Azure","childProps","to","BitbucketForm","isCreating","onSelectVariant","label","BitbucketServer","example","workspace","clientId","clientSecret","BitbucketTabRenderer","DEFAULT_SERVER_BINDING","DEFAULT_CLOUD_BINDING","handleSelectVariant","DeleteModal","projectCount","confirmButtonText","confirmData","isDestructive","onClose","onConfirm","showProjectCountWarning","reseting","handleClose","handleReset","onReset","setting","isDefault","changedValue","hasValueChanged","hasValueToResetTo","hasBeenChangedToEmptyValue","showReset","style","lineHeight","hasError","onSave","renderModal","InputForBoolean","displayedValue","formatError","handleInputChange","format","JSON","stringify","parse","handleKeyDown","keyCode","onKeyDown","InputForNumber","changing","handleChangeClick","nextProps","autoComplete","renderInput","fill","gray60","option","clearable","InputForString","typeMapping","STRING","TEXT","PASSWORD","BOOLEAN","INTEGER","LONG","FLOAT","other","InputComponent","ensureValue","handleSingleInputChange","index","newValue","splice","handleDeleteValue","isLast","multiValues","fieldKey","emptyValue","newFields","fieldValues","fields","field","width","minWidth","marginTop","description","renderFields","Input","handleChange","clearTimeout","timeout","changeValue","handleCheck","component","componentKey","resetValue","cancelChange","safeSetState","window","setTimeout","passValidation","checkValue","handleSave","saveValue","changes","validationMessage","propertyName","effectiveValue","title","dangerouslySetInnerHTML","__html","sanitize","mapDispatchToProps","getState","defaultValue","keys","ownProps","DefinitionsList","settings","error","recipient","subject","onRecipientChange","onSubjectChange","onMessageChange","currentUser","email","withCurrentUser","renderEmailForm","subCategoryKey","category","fetchValues","prevKeys","join","bySubCategory","subCategory","subCategories","sortedSubCategories","toLowerCase","filteredSubCategories","filter","c","GithubForm","appId","privateKey","GithubTab","GitHub","CategoryDefinitionsList","GitlabForm","GitlabTab","tabs","alt","height","src","requiresBranchesEnabled","AlmIntegrationRenderer","definitionKeyForDeletion","currentAlm","onSelect","onSelectAlm","selected","tab","azure","bitbucket","bitbucketcloud","github","gitlab","onConfirmDelete","ALM_KEY_LIST","deleteConfiguration","fetchPullRequestDecorationSetting","handleSelectAlm","async","_","location","query","forEach","withRouter","AnalysisScope","selectedCategory","abap","apex","cobol","css","flex","go","html","java","javascript","kotlin","php","python","rpg","ruby","scala","swift","typescript","xml","categories","router","availableLanguages","selectedLanguage","lowerCasedLanguagesCategory","lowerCasedSelectedCategory","originalValue","getLanguages","newOption","placeholder","days","saving","onSelectDays","onSelectSetting","currentSetting","currentSettingValue","String","fetchNewCodePeriodSetting","isChanged","isValid","BaselineSettingPreviousVersion","BaselineSettingDays","onChangeDays","renderLabel","helpParams","renderBooleanField","inputExtra","renderField","AlmSpecificForm","repository","slug","summaryCommentEnabled","monorepo","monorepoEnabled","formFields","doc_link","display","optionRenderer","instance","PRDecorationBindingRenderer","instances","isConfigured","autosize","menuContainerStyle","maxWidth","searchable","valueKey","valueRenderer","REQUIRED_FIELDS_BY_ALM","fetchDefinitions","project","all","getProjectBinding","originalData","newFormData","validateForm","orignalData","catchError","additionalFields","submitProjectAlmBinding","isDataSame","reduce","result","NotFound","throwGlobalError","almSpecificFields","almSetting","projectName","repositoryName","oKey","oRepository","oSlug","osummaryCommentEnabled","omonorepo","datacenter","ADDITIONAL_CATEGORIES","renderComponent","availableGlobally","availableForProject","displayTab","defaultCategory","pathname","categoriesWithName","concat","sortedCategories","active","PageHeader","InstanceMessage","fetchSettings","stopLoading","originalCategory","foundAdditionalCategory","isProjectSettings","shouldRenderAdditionalCategory","Suggestions","suggestions","defer","ScreenPositionHelper","top","AllCategoriesList","filtered","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","sanitizeStringRestricted","ALLOWED_TAGS","ALLOWED_ATTR","sanitizeString","USE_PROFILES","getPosition","containerPos","container","getBoundingClientRect","pageYOffset","left","pageXOffset","debouncedOnResize","forceUpdate","addEventListener","removeEventListener","ref","getDefinitions","r","getValues","data","setSettingValue","setSimpleSettingValue","resetSettingValue","sendTestEmail","checkSecretKey","generateSecretKey","encryptValue","getAlmDefinitions","getAlmSettings","getAlmSettingsNoCatch","almSettings","validateAlmSettings","BadRequest","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createBitbucketCloudConfiguration","updateBitbucketCloudConfiguration","createGitlabConfiguration","updateGitlabConfiguration","countBindedProjects","projects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectBitbucketCloudBinding","setProjectGithubBinding","setProjectGitlabBinding","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY","getNewCodePeriod","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","validateDays","parsed","parseInt","isNaN","getSettingValue","analysis","referenceBranch","validateSetting","overrideGeneralSetting","isInvalid"],"mappings":"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","file":"js/307.m.20609005.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#settings-page .layout-page-side,#settings-page .layout-page-side-outer{width:calc(50vw - 480px);border-right:none}#settings-page .layout-page-side-inner{width:160px;margin-left:calc(50vw - 639px)}#settings-page .layout-page-main{padding:0}#settings-page .layout-page-main-inner{max-width:1110px}#settings-page .top-bar-outer{height:80px}#settings-page .top-bar{background-color:#f3f3f3;position:fixed;z-index:55;left:0;right:0}#settings-page .top-bar-inner{max-width:1280px;margin:0 auto;height:80px;box-sizing:border-box}#settings-page .page-description,#settings-page .page-title{float:none}.settings-definitions-list>li+li{margin-top:30px}.settings-definition{margin:0 -20px;padding:10px 20px;border-top:1px solid transparent;border-bottom:1px solid transparent;display:flex;align-items:stretch}.settings-definition-changed{border-top:1px solid #faebcc;border-bottom:1px solid #faebcc;background-color:#fcf8e3}.settings-definition-left{width:330px;padding-right:30px;box-sizing:border-box}.settings-definition-right{position:relative;width:calc(100% - 330px);box-sizing:border-box}.settings-definition-name{text-overflow:ellipsis}.settings-definition-key{line-height:1.5;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.settings-definition-key:hover{overflow:visible}.settings-definition-state{min-height:32px;padding-bottom:4px}.settings-definition-state>span{display:flex}.settings-definition-changes{margin-top:20px;padding-top:20px;border-top:1px dotted #e6e6e6}.settings-sub-categories-list>li+li,.settings-sub-category{margin:30px -20px 0;padding:30px 20px;border-top:1px solid #e6e6e6}.settings-sub-category-name{margin-bottom:20px;font-size:16px}.settings-sub-category-description{margin-top:-15px;margin-bottom:20px;color:#666}.settings-large-input{width:100%!important;max-width:400px;min-width:200px}.side-tabs-menu{margin-top:16px}.side-tabs-menu>li{margin-bottom:4px}.side-tabs-menu>li>a{display:block;padding:10px;line-height:1.5;border-top-left-radius:3px;border-bottom-left-radius:3px;border:1px solid #e6e6e6;border-right:none;overflow:hidden;text-overflow:ellipsis;transition:color .3s ease,background-color .3s ease}.side-tabs-menu>li>a.active,.side-tabs-menu>li>a:focus,.side-tabs-menu>li>a:hover{background-color:#fff}.side-tabs-menu>li>a.active{color:#333;cursor:default}@media (max-width:1320px){#settings-page .layout-page-side,#settings-page .layout-page-side-outer{width:180px}#settings-page .layout-page-side-inner{margin-left:20px}#settings-page .top-bar-inner{margin:0 20px}}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport {\n  getDefinitions,\n  getValues,\n  resetSettingValue,\n  setSettingValue\n} from '../../../api/settings';\nimport { closeAllGlobalMessages } from '../../../store/globalMessages';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppDefinition,\n  Store\n} from '../../../store/rootReducer';\nimport { isEmptyValue } from '../utils';\nimport { receiveDefinitions } from './definitions';\nimport {\n  cancelChange,\n  failValidation,\n  passValidation,\n  startLoading,\n  stopLoading\n} from './settingsPage';\nimport { receiveValues } from './values';\n\nexport function fetchSettings(component?: string) {\n  return (dispatch: Dispatch) => {\n    return getDefinitions(component).then(definitions => {\n      const filtered = definitions.filter(definition => definition.type !== 'LICENSE');\n      dispatch(receiveDefinitions(filtered));\n    });\n  };\n}\n\nexport function fetchValues(keys: string, component?: string) {\n  return (dispatch: Dispatch) =>\n    getValues({ keys, component }).then(settings => {\n      dispatch(receiveValues(settings, component));\n      dispatch(closeAllGlobalMessages());\n    });\n}\n\nexport function checkValue(key: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      if (definition.defaultValue === undefined) {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty_no_default')));\n      } else {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      }\n      return false;\n    }\n\n    if (definition.type === 'JSON') {\n      try {\n        JSON.parse(value);\n      } catch (e) {\n        dispatch(failValidation(key, e.message));\n        return false;\n      }\n    }\n\n    dispatch(passValidation(key));\n    return true;\n  };\n}\n\nexport function saveValue(key: string, component?: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    dispatch(startLoading(key));\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      dispatch(stopLoading(key));\n      return Promise.reject();\n    }\n\n    return setSettingValue(definition, value, component)\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        dispatch(receiveValues(values, component));\n        dispatch(cancelChange(key));\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nexport function resetValue(key: string, component?: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(startLoading(key));\n\n    return resetSettingValue({ keys: key, component })\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        if (values.length > 0) {\n          dispatch(receiveValues(values, component));\n        } else {\n          dispatch(receiveValues([{ key }], component));\n        }\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nfunction handleError(key: string, dispatch: Dispatch) {\n  return (response: Response) => {\n    dispatch(stopLoading(key));\n    return parseError(response).then(message => {\n      dispatch(failValidation(key, message));\n      return Promise.reject();\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeleteIcon from 'sonar-ui-common/components/icons/DeleteIcon';\nimport EditIcon from 'sonar-ui-common/components/icons/EditIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getEdition, getEditionUrl } from '../../../../helpers/editions';\nimport { IMPORT_COMPATIBLE_ALMS } from '../../../../helpers/constants';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  AlmSettingsBindingStatusType\n} from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\n\nexport interface AlmBindingDefinitionBoxProps {\n  alm: AlmKeys;\n  branchesEnabled: boolean;\n  definition: AlmBindingDefinition;\n  multipleDefinitions: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  status?: AlmSettingsBindingStatus;\n}\n\nconst DEFAULT_STATUS: AlmSettingsBindingStatus = {\n  alertSuccess: false,\n  failureMessage: '',\n  type: AlmSettingsBindingStatusType.Validating\n};\n\nconst STATUS_ICON = {\n  [AlmSettingsBindingStatusType.Failure]: <AlertErrorIcon className=\"spacer-left\" />,\n  [AlmSettingsBindingStatusType.Success]: <AlertSuccessIcon className=\"spacer-left\" />\n};\n\nfunction getPRDecorationFeatureStatus(\n  branchesEnabled: boolean,\n  type: AlmSettingsBindingStatusType.Success | AlmSettingsBindingStatusType.Failure\n) {\n  if (branchesEnabled) {\n    return STATUS_ICON[type];\n  }\n\n  return (\n    <div className=\"display-inline-flex-center\">\n      <strong className=\"spacer-left\">\n        {translate('settings.almintegration.feature.pr_decoration.disabled')}\n      </strong>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={\n          <FormattedMessage\n            id=\"settings.almintegration.feature.pr_decoration.disabled.no_branches\"\n            defaultMessage={translate(\n              'settings.almintegration.feature.pr_decoration.disabled.no_branches'\n            )}\n            values={{\n              link: (\n                <a\n                  href={getEditionUrl(getEdition(EditionKey.developer), {\n                    sourceEdition: EditionKey.community\n                  })}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  {translate(\n                    'settings.almintegration.feature.pr_decoration.disabled.no_branches.link'\n                  )}\n                </a>\n              )\n            }}\n          />\n        }\n      />\n    </div>\n  );\n}\n\nfunction getImportFeatureStatus(\n  definition: AlmBindingDefinition,\n  multipleDefinitions: boolean,\n  type: AlmSettingsBindingStatusType.Success | AlmSettingsBindingStatusType.Failure\n) {\n  if (multipleDefinitions) {\n    return (\n      <div className=\"display-inline-flex-center\">\n        <strong className=\"spacer-left\">\n          {translate('settings.almintegration.feature.alm_repo_import.disabled')}\n        </strong>\n        <HelpTooltip\n          className=\"little-spacer-left\"\n          overlay={translate('settings.almintegration.feature.alm_repo_import.disabled.multiple')}\n        />\n      </div>\n    );\n  }\n\n  if (!definition.url) {\n    return (\n      <div className=\"display-inline-flex-center\">\n        <strong className=\"spacer-left\">\n          {translate('settings.almintegration.feature.alm_repo_import.disabled')}\n        </strong>\n        <HelpTooltip\n          className=\"little-spacer-left\"\n          overlay={translate('settings.almintegration.feature.alm_repo_import.disabled.no_url')}\n        />\n      </div>\n    );\n  }\n\n  return STATUS_ICON[type];\n}\n\nexport default function AlmBindingDefinitionBox(props: AlmBindingDefinitionBoxProps) {\n  const { alm, branchesEnabled, definition, multipleDefinitions, status = DEFAULT_STATUS } = props;\n\n  const prDecoFeatureTitle =\n    alm === AlmKeys.GitLab\n      ? translate('settings.almintegration.feature.mr_decoration.title')\n      : translate('settings.almintegration.feature.pr_decoration.title');\n\n  const prDecoFeatureDescription =\n    alm === AlmKeys.GitLab\n      ? translate('settings.almintegration.feature.mr_decoration.description')\n      : translate('settings.almintegration.feature.pr_decoration.description');\n\n  return (\n    <div className=\"boxed-group-inner bordered spacer-top spacer-bottom it__alm-binding-definition\">\n      <div className=\"actions pull-right\">\n        <Button onClick={() => props.onEdit(definition.key)}>\n          <EditIcon className=\"spacer-right\" />\n          {translate('edit')}\n        </Button>\n        <Button className=\"button-red spacer-left\" onClick={() => props.onDelete(definition.key)}>\n          <DeleteIcon className=\"spacer-right\" />\n          {translate('delete')}\n        </Button>\n      </div>\n\n      <div className=\"big-spacer-bottom\">\n        <h3>{definition.key}</h3>\n        {definition.url && <span>{definition.url}</span>}\n      </div>\n\n      {status.type === AlmSettingsBindingStatusType.Validating ? (\n        <>\n          <i className=\"spinner spacer-right\" />\n          {translate('settings.almintegration.checking_configuration')}\n        </>\n      ) : (\n        <>\n          {status.type !== AlmSettingsBindingStatusType.Warning && (\n            <div className=\"display-flex-row spacer-bottom\">\n              <div className=\"huge-spacer-right\">\n                <Tooltip overlay={prDecoFeatureDescription}>\n                  <span>{prDecoFeatureTitle}</span>\n                </Tooltip>\n                {getPRDecorationFeatureStatus(branchesEnabled, status.type)}\n              </div>\n              {IMPORT_COMPATIBLE_ALMS.includes(alm) && (\n                <div>\n                  <Tooltip\n                    overlay={translate(\n                      'settings.almintegration.feature.alm_repo_import.description'\n                    )}>\n                    <span>\n                      {translate('settings.almintegration.feature.alm_repo_import.title')}\n                    </span>\n                  </Tooltip>\n                  {getImportFeatureStatus(definition, multipleDefinitions, status.type)}\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className=\"width-50\">\n            {status.type === AlmSettingsBindingStatusType.Warning && (\n              <Alert variant=\"warning\">\n                {translate('settings.almintegration.could_not_validate')}\n              </Alert>\n            )}\n\n            {status.type === AlmSettingsBindingStatusType.Failure && (\n              <Alert variant=\"error\">{status.failureMessage}</Alert>\n            )}\n\n            {status.type === AlmSettingsBindingStatusType.Success && status.alertSuccess && (\n              <Alert variant=\"success\">\n                {translate('settings.almintegration.configuration_valid')}\n              </Alert>\n            )}\n          </div>\n\n          <Button className=\"big-spacer-top\" onClick={() => props.onCheck(definition.key)}>\n            {translate('settings.almintegration.check_configuration')}\n          </Button>\n        </>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface AlmBindingDefinitionFormModalProps {\n  action: 'edit' | 'create';\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  help?: React.ReactNode;\n  isSecondInstance: boolean;\n  onCancel: () => void;\n  onSubmit: () => void | Promise<void | Response>;\n}\n\nexport default function AlmBindingDefinitionFormModalRenderer(\n  props: AlmBindingDefinitionFormModalProps\n) {\n  const { action, children, help, isSecondInstance } = props;\n  const header = translate('settings.almintegration.form.header', action);\n\n  const handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    props.onSubmit();\n  };\n\n  return (\n    <Modal\n      contentLabel={header}\n      onRequestClose={props.onCancel}\n      shouldCloseOnOverlayClick={false}\n      size=\"medium\">\n      <form className=\"views-form\" onSubmit={handleSubmit}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {isSecondInstance && action === 'create' && (\n            <Alert className=\"big-spacer-bottom\" variant=\"warning\">\n              {translate('settings.almintegration.form.second_instance_warning')}\n            </Alert>\n          )}\n\n          <div className=\"display-flex-start\">\n            <div className=\"flex-1\">{children}</div>\n\n            {help ? (\n              <Alert className=\"huge-spacer-left flex-1\" variant=\"info\">\n                {help}\n              </Alert>\n            ) : (\n              <div className=\"flex-1\" />\n            )}\n          </div>\n        </div>\n\n        <div className=\"modal-foot\">\n          <SubmitButton disabled={!props.canSubmit()}>\n            {translate('settings.almintegration.form.save')}\n          </SubmitButton>\n          <ResetButtonLink onClick={props.onCancel}>{translate('cancel')}</ResetButtonLink>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isEqual, omit } from 'lodash';\nimport * as React from 'react';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\nimport AlmBindingDefinitionFormModalRenderer from './AlmBindingDefinitionFormModalRenderer';\n\nexport interface AlmBindingDefinitionFormChildrenProps<B> {\n  formData: B;\n  onFieldChange: (fieldId: keyof B, value: string) => void;\n}\n\ninterface Props<B> {\n  bindingDefinition: B;\n  children: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  isSecondInstance?: boolean;\n  onCancel?: () => void;\n  onDelete?: (definitionKey: string) => void;\n  onEdit?: (definitionKey: string) => void;\n  onSubmit: (data: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n}\n\ninterface State<B> {\n  formData: B;\n  touched: boolean;\n}\n\nexport default class AlmBindingDefinitionForm<\n  B extends AlmBindingDefinition\n> extends React.PureComponent<Props<B>, State<B>> {\n  constructor(props: Props<B>) {\n    super(props);\n    this.state = { formData: props.bindingDefinition, touched: false };\n  }\n\n  componentDidUpdate(prevProps: Props<B>) {\n    if (!isEqual(prevProps.bindingDefinition, this.props.bindingDefinition)) {\n      this.setState({ formData: this.props.bindingDefinition, touched: false });\n    }\n  }\n\n  handleCancel = () => {\n    this.setState({ formData: this.props.bindingDefinition, touched: false });\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  handleDelete = () => {\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleEdit = () => {\n    if (this.props.onEdit) {\n      this.props.onEdit(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleFieldChange = (fieldId: keyof B, value: string) => {\n    this.setState(({ formData }) => ({\n      formData: {\n        ...formData,\n        [fieldId]: value\n      },\n      touched: true\n    }));\n  };\n\n  handleFormSubmit = () => {\n    this.props.onSubmit(this.state.formData, this.props.bindingDefinition.key);\n  };\n\n  canSubmit = () => {\n    const { optionalFields } = this.props;\n    const { formData, touched } = this.state;\n\n    let values = { ...formData };\n\n    if (optionalFields && optionalFields.length > 0) {\n      values = omit(values, optionalFields) as B;\n    }\n\n    return touched && !Object.values(values).some(v => !v);\n  };\n\n  render() {\n    const { bindingDefinition, children, help, isSecondInstance } = this.props;\n    const { formData } = this.state;\n\n    const action = bindingDefinition.key ? 'edit' : 'create';\n\n    return (\n      <AlmBindingDefinitionFormModalRenderer\n        action={action}\n        canSubmit={this.canSubmit}\n        help={help}\n        isSecondInstance={Boolean(isSecondInstance)}\n        onCancel={this.handleCancel}\n        onSubmit={this.handleFormSubmit}>\n        {children({\n          formData,\n          onFieldChange: this.handleFieldChange\n        })}\n      </AlmBindingDefinitionFormModalRenderer>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { getEdition, getEditionUrl } from '../../../../helpers/editions';\nimport { AlmKeys } from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\n\nexport interface CreationTooltipProps {\n  alm: AlmKeys;\n  appState: T.AppState;\n  children: React.ReactElement<{}>;\n  preventCreation: boolean;\n}\n\nexport function CreationTooltip(props: CreationTooltipProps) {\n  const {\n    alm,\n    appState: { edition },\n    children,\n    preventCreation\n  } = props;\n\n  const sourceEdition = edition ? EditionKey[edition] : undefined;\n\n  return (\n    <Tooltip\n      overlay={\n        preventCreation ? (\n          <FormattedMessage\n            id=\"settings.almintegration.create.tooltip\"\n            defaultMessage={translate('settings.almintegration.create.tooltip')}\n            values={{\n              link: (\n                <a\n                  href={getEditionUrl(getEdition(EditionKey.enterprise), {\n                    sourceEdition\n                  })}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  {translate('settings.almintegration.create.tooltip.link')}\n                </a>\n              ),\n              alm: translate('alm', alm)\n            }}\n          />\n        ) : null\n      }\n      mouseLeaveDelay={0.25}>\n      {children}\n    </Tooltip>\n  );\n}\n\nexport default withAppState(CreationTooltip);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  isBitbucketCloudBindingDefinition\n} from '../../../../types/alm-settings';\nimport AlmBindingDefinitionBox from './AlmBindingDefinitionBox';\nimport AlmBindingDefinitionForm, {\n  AlmBindingDefinitionFormChildrenProps\n} from './AlmBindingDefinitionForm';\nimport CreationTooltip from './CreationTooltip';\n\nexport interface AlmTabRendererProps<B> {\n  alm: AlmKeys;\n  branchesEnabled: boolean;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  editedDefinition?: B;\n  definitions: B[];\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help: React.ReactNode;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCheck: (definitionKey: string) => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default function AlmTabRenderer<B extends AlmBindingDefinition>(\n  props: AlmTabRendererProps<B>\n) {\n  const {\n    alm,\n    branchesEnabled,\n    definitions,\n    definitionStatus,\n    editedDefinition,\n    form,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    multipleAlmEnabled,\n    optionalFields,\n    help\n  } = props;\n\n  const preventCreation = loadingProjectCount || (!multipleAlmEnabled && definitions.length > 0);\n\n  return (\n    <div className=\"big-padded\">\n      <DeferredSpinner loading={loadingAlmDefinitions}>\n        {definitions.length === 0 && (\n          <p className=\"spacer-top\">{translate('settings.almintegration.empty', alm)}</p>\n        )}\n\n        <div className={definitions.length > 0 ? 'spacer-bottom text-right' : 'big-spacer-top'}>\n          <CreationTooltip alm={alm} preventCreation={preventCreation}>\n            <Button\n              data-test=\"settings__alm-create\"\n              disabled={preventCreation}\n              onClick={props.onCreate}>\n              {translate('settings.almintegration.create')}\n            </Button>\n          </CreationTooltip>\n        </div>\n        {definitions.map(def => (\n          <AlmBindingDefinitionBox\n            alm={isBitbucketCloudBindingDefinition(def) ? AlmKeys.BitbucketCloud : alm}\n            branchesEnabled={branchesEnabled}\n            definition={def}\n            key={def.key}\n            multipleDefinitions={definitions.length > 1}\n            onCheck={props.onCheck}\n            onDelete={props.onDelete}\n            onEdit={props.onEdit}\n            status={definitionStatus[def.key]}\n          />\n        ))}\n\n        {editedDefinition && (\n          <AlmBindingDefinitionForm\n            bindingDefinition={editedDefinition}\n            help={help}\n            isSecondInstance={definitions.length === 1}\n            onCancel={props.onCancel}\n            onSubmit={props.onSubmit}\n            optionalFields={optionalFields}>\n            {form}\n          </AlmBindingDefinitionForm>\n        )}\n      </DeferredSpinner>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingStatus\n} from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormChildrenProps } from './AlmBindingDefinitionForm';\nimport AlmTabRenderer from './AlmTabRenderer';\n\ninterface Props<B> {\n  alm: AlmKeys;\n  branchesEnabled: boolean;\n  createConfiguration: (data: B) => Promise<void>;\n  defaultBinding: B;\n  definitions: B[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help: React.ReactNode;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n  optionalFields?: Array<keyof B>;\n  updateConfiguration: (data: B & { newKey?: string }) => Promise<void>;\n}\n\ninterface State<B> {\n  editedDefinition?: B;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default class AlmTab<B extends AlmBindingDefinition> extends React.PureComponent<\n  Props<B>,\n  State<B>\n> {\n  mounted = false;\n  state: State<B> = { submitting: false, success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({ editedDefinition: undefined, success: false });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: this.props.defaultBinding, success: false });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition, success: false });\n  };\n\n  handleSubmit = (config: B, originalKey: string) => {\n    const call = originalKey\n      ? this.props.updateConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : this.props.createConfiguration({ ...config });\n\n    this.setState({ submitting: true });\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            editedDefinition: undefined,\n            submitting: false,\n            success: true\n          });\n        }\n      })\n      .then(this.props.onUpdateDefinitions)\n      .then(() => {\n        this.props.onCheck(config.key);\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submitting: false, success: false });\n        }\n      });\n  };\n\n  render() {\n    const {\n      alm,\n      branchesEnabled,\n      definitions,\n      definitionStatus,\n      form,\n      help,\n      loadingAlmDefinitions,\n      loadingProjectCount,\n      multipleAlmEnabled,\n      optionalFields\n    } = this.props;\n    const { editedDefinition, submitting, success } = this.state;\n\n    return (\n      <AlmTabRenderer\n        alm={alm}\n        branchesEnabled={branchesEnabled}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        editedDefinition={editedDefinition}\n        form={form}\n        help={help}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={this.handleCancel}\n        onCheck={this.props.onCheck}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n        optionalFields={optionalFields}\n        submitting={submitting}\n        success={success}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\n\nexport interface AlmBindingDefinitionFormFieldProps<B extends AlmBindingDefinition> {\n  autoFocus?: boolean;\n  help?: React.ReactNode;\n  id: string;\n  isTextArea?: boolean;\n  maxLength?: number;\n  onFieldChange: (id: keyof B, value: string) => void;\n  optional?: boolean;\n  overwriteOnly?: boolean;\n  propKey: keyof B;\n  value: string;\n}\n\nexport function AlmBindingDefinitionFormField<B extends AlmBindingDefinition>(\n  props: AlmBindingDefinitionFormFieldProps<B>\n) {\n  const {\n    autoFocus,\n    help,\n    id,\n    isTextArea,\n    maxLength,\n    optional,\n    overwriteOnly = false,\n    propKey,\n    value\n  } = props;\n  const [showField, setShowField] = React.useState(!overwriteOnly);\n\n  return (\n    <div className=\"modal-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.almintegration.form', id)}\n        {!optional && <MandatoryFieldMarker />}\n        {help && <HelpTooltip className=\"spacer-left\" overlay={help} placement=\"right\" />}\n      </label>\n\n      {!showField && overwriteOnly && (\n        <div>\n          <p>{translate('settings.almintegration.form.secret_field')}</p>\n          <ButtonLink\n            onClick={() => {\n              props.onFieldChange(propKey, '');\n              setShowField(true);\n            }}>\n            {translate('settings.almintegration.form.update_secret_field')}\n          </ButtonLink>\n        </div>\n      )}\n\n      {showField && isTextArea && (\n        <textarea\n          className=\"settings-large-input\"\n          id={id}\n          maxLength={maxLength || 2000}\n          onChange={e => props.onFieldChange(propKey, e.currentTarget.value)}\n          required={!optional}\n          rows={5}\n          value={value}\n        />\n      )}\n\n      {showField && !isTextArea && (\n        <input\n          autoFocus={autoFocus}\n          className=\"input-super-large\"\n          id={id}\n          maxLength={maxLength || 100}\n          name={id}\n          onChange={e => props.onFieldChange(propKey, e.currentTarget.value)}\n          size={50}\n          type=\"text\"\n          value={value}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AzureBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface AzureFormProps {\n  formData: AzureBindingDefinition;\n  onFieldChange: (fieldId: keyof AzureBindingDefinition, value: string) => void;\n}\n\nexport default function AzureForm(props: AzureFormProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmBindingDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.almintegration.form.name.azure.help')}\n        id=\"name.azure\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.azure.help1')}\n            <br />\n            <em>https://ado.your-company.com/your_collection</em>\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.azure.help2')}\n            <br />\n            <em>https://dev.azure.com/your_organization</em>\n          </>\n        }\n        id=\"url.azure\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url || ''}\n      />\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.azure.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createAzureConfiguration, updateAzureConfiguration } from '../../../../api/alm-settings';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  AzureBindingDefinition\n} from '../../../../types/alm-settings';\nimport AlmTab from './AlmTab';\nimport AzureForm from './AzureForm';\n\nexport interface AzureTabProps {\n  branchesEnabled: boolean;\n  definitions: AzureBindingDefinition[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function AzureTab(props: AzureTabProps) {\n  const {\n    branchesEnabled,\n    multipleAlmEnabled,\n    definitions,\n    definitionStatus,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.Azure}\n        branchesEnabled={branchesEnabled}\n        createConfiguration={createAzureConfiguration}\n        defaultBinding={{ key: '', personalAccessToken: '', url: '' }}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        form={childProps => <AzureForm {...childProps} />}\n        help={\n          <FormattedMessage\n            defaultMessage={translate(`settings.almintegration.azure.info`)}\n            id=\"settings.almintegration.azure.info\"\n            values={{\n              link: (\n                <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.Azure]}>\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        }\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCheck={props.onCheck}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateAzureConfiguration}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport RadioToggle from 'sonar-ui-common/components/controls/RadioToggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  AlmKeys,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition,\n  isBitbucketBindingDefinition,\n  isBitbucketCloudBindingDefinition\n} from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface BitbucketFormProps {\n  formData: BitbucketBindingDefinition | BitbucketCloudBindingDefinition;\n  isCreating: boolean;\n  onFieldChange: (\n    fieldId: keyof (BitbucketBindingDefinition & BitbucketCloudBindingDefinition),\n    value: string\n  ) => void;\n  onSelectVariant: (variant: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud) => void;\n  variant?: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud;\n}\n\nexport default function BitbucketForm(props: BitbucketFormProps) {\n  const { formData, isCreating, variant } = props;\n\n  return (\n    <div>\n      {isCreating && (\n        <>\n          <strong>{translate('settings.almintegration.form.choose_bitbucket_variant')}</strong>\n          <RadioToggle\n            className=\"little-spacer-top big-spacer-bottom\"\n            name=\"variant\"\n            onCheck={props.onSelectVariant}\n            options={[\n              {\n                label: 'Bitbucket Server',\n                value: AlmKeys.BitbucketServer\n              },\n              { label: 'Bitbucket Cloud', value: AlmKeys.BitbucketCloud }\n            ]}\n            value={variant}\n          />\n        </>\n      )}\n\n      {variant === AlmKeys.BitbucketServer && isBitbucketBindingDefinition(formData) && (\n        <div>\n          <AlmBindingDefinitionFormField\n            autoFocus={true}\n            help={translate('settings.almintegration.form.name.bitbucket.help')}\n            id=\"name.bitbucket\"\n            maxLength={100}\n            onFieldChange={props.onFieldChange}\n            propKey=\"key\"\n            value={formData.key}\n          />\n          <AlmBindingDefinitionFormField\n            help={\n              <FormattedMessage\n                defaultMessage={translate('settings.almintegration.form.url.bitbucket.help')}\n                id=\"settings.almintegration.form.url.bitbucket.help\"\n                values={{ example: 'https://bitbucket-server.your-company.com' }}\n              />\n            }\n            id=\"url.bitbucket\"\n            maxLength={2000}\n            onFieldChange={props.onFieldChange}\n            propKey=\"url\"\n            value={formData.url}\n          />\n          <AlmBindingDefinitionFormField\n            id=\"personal_access_token\"\n            isTextArea={true}\n            onFieldChange={props.onFieldChange}\n            overwriteOnly={Boolean(formData.key)}\n            propKey=\"personalAccessToken\"\n            value={formData.personalAccessToken}\n          />\n        </div>\n      )}\n\n      {variant === AlmKeys.BitbucketCloud && isBitbucketCloudBindingDefinition(formData) && (\n        <div>\n          <AlmBindingDefinitionFormField\n            autoFocus={true}\n            help={translate('settings.almintegration.form.name.bitbucketcloud.help')}\n            id=\"name.bitbucket\"\n            maxLength={100}\n            onFieldChange={props.onFieldChange}\n            propKey=\"key\"\n            value={formData.key}\n          />\n          <AlmBindingDefinitionFormField\n            help={\n              <FormattedMessage\n                defaultMessage={translate(\n                  'settings.almintegration.form.workspace.bitbucketcloud.help'\n                )}\n                id=\"settings.almintegration.form.workspace.bitbucketcloud.help\"\n                values={{\n                  example: (\n                    <>\n                      {'https://bitbucket.org/'}\n                      <strong>{'{workspace}'}</strong>\n                      {'/{repository}'}\n                    </>\n                  )\n                }}\n              />\n            }\n            id=\"workspace.bitbucketcloud\"\n            maxLength={2000}\n            onFieldChange={props.onFieldChange}\n            propKey=\"workspace\"\n            value={formData.workspace}\n          />\n          <AlmBindingDefinitionFormField\n            id=\"client_id.bitbucketcloud\"\n            onFieldChange={props.onFieldChange}\n            propKey=\"clientId\"\n            value={formData.clientId}\n          />\n          <AlmBindingDefinitionFormField\n            id=\"client_secret.bitbucketcloud\"\n            onFieldChange={props.onFieldChange}\n            overwriteOnly={Boolean(formData.key)}\n            propKey=\"clientSecret\"\n            value={formData.clientSecret}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition\n} from '../../../../types/alm-settings';\nimport AlmTabRenderer from './AlmTabRenderer';\nimport BitbucketForm from './BitbucketForm';\n\nexport interface BitbucketTabRendererProps {\n  branchesEnabled: boolean;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  editedDefinition?: BitbucketBindingDefinition | BitbucketCloudBindingDefinition;\n  definitions: Array<BitbucketBindingDefinition | BitbucketCloudBindingDefinition>;\n  isCreating: boolean;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCheck: (definitionKey: string) => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSelectVariant: (variant: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud) => void;\n  onSubmit: (\n    config: BitbucketBindingDefinition | BitbucketCloudBindingDefinition,\n    originalKey: string\n  ) => void;\n  submitting: boolean;\n  success: boolean;\n  variant?: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud;\n}\n\nexport default function BitbucketTabRenderer(props: BitbucketTabRendererProps) {\n  const {\n    branchesEnabled,\n    editedDefinition,\n    definitions,\n    definitionStatus,\n    isCreating,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    multipleAlmEnabled,\n    submitting,\n    success,\n    variant\n  } = props;\n\n  let help;\n  if (variant === AlmKeys.BitbucketServer) {\n    help = (\n      <>\n        <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n        <p className=\"big-spacer-top\">{translate('settings.almintegration.bitbucket.help_1')}</p>\n\n        <ul className=\"big-spacer-top list-styled\">\n          <li>{translate('settings.almintegration.bitbucket.help_2')}</li>\n          <li>{translate('settings.almintegration.bitbucket.help_3')}</li>\n        </ul>\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.BitbucketServer]}>\n            {translate('learn_more')}\n          </Link>\n        </p>\n      </>\n    );\n  } else if (variant === AlmKeys.BitbucketCloud) {\n    help = (\n      <FormattedMessage\n        defaultMessage={translate(`settings.almintegration.bitbucketcloud.info`)}\n        id=\"settings.almintegration.bitbucketcloud.info\"\n        values={{\n          link: (\n            <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.BitbucketCloud]}>\n              {translate('learn_more')}\n            </Link>\n          )\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"bordered\">\n      <AlmTabRenderer\n        branchesEnabled={branchesEnabled}\n        alm={AlmKeys.BitbucketServer} // Always use Bitbucket Server for the translation keys.\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        editedDefinition={editedDefinition}\n        form={childProps => (\n          <BitbucketForm\n            isCreating={isCreating}\n            onSelectVariant={props.onSelectVariant}\n            variant={variant}\n            {...childProps}\n          />\n        )}\n        help={help}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={props.onCancel}\n        onCheck={props.onCheck}\n        onCreate={props.onCreate}\n        onDelete={props.onDelete}\n        onEdit={props.onEdit}\n        onSubmit={props.onSubmit}\n        submitting={submitting}\n        success={success}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  createBitbucketCloudConfiguration,\n  createBitbucketConfiguration,\n  updateBitbucketCloudConfiguration,\n  updateBitbucketConfiguration\n} from '../../../../api/alm-settings';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition,\n  isBitbucketBindingDefinition\n} from '../../../../types/alm-settings';\nimport BitbucketTabRenderer from './BitbucketTabRenderer';\n\ninterface Props {\n  branchesEnabled: boolean;\n  definitions: Array<BitbucketBindingDefinition | BitbucketCloudBindingDefinition>;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: BitbucketBindingDefinition | BitbucketCloudBindingDefinition;\n  isCreating: boolean;\n  submitting: boolean;\n  success: boolean;\n  variant?: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud;\n}\n\nexport const DEFAULT_SERVER_BINDING = { key: '', url: '', personalAccessToken: '' };\nexport const DEFAULT_CLOUD_BINDING = { key: '', clientId: '', clientSecret: '', workspace: '' };\n\nexport default class BitbucketTab extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { isCreating: false, submitting: false, success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined,\n      isCreating: false,\n      success: false,\n      variant: undefined\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({\n      editedDefinition: DEFAULT_SERVER_BINDING, // Default to Bitbucket Server.\n      isCreating: true,\n      success: false,\n      variant: undefined\n    });\n  };\n\n  handleSelectVariant = (variant: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud) => {\n    this.setState({\n      variant,\n      editedDefinition:\n        variant === AlmKeys.BitbucketServer ? DEFAULT_SERVER_BINDING : DEFAULT_CLOUD_BINDING\n    });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    const variant = isBitbucketBindingDefinition(editedDefinition)\n      ? AlmKeys.BitbucketServer\n      : AlmKeys.BitbucketCloud;\n    this.setState({ editedDefinition, variant, success: false });\n  };\n\n  handleSubmit = (\n    config: BitbucketBindingDefinition | BitbucketCloudBindingDefinition,\n    originalKey: string\n  ) => {\n    const call = originalKey\n      ? this.updateConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : this.createConfiguration({ ...config });\n\n    this.setState({ submitting: true });\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            editedDefinition: undefined,\n            isCreating: false,\n            submitting: false,\n            success: true\n          });\n        }\n      })\n      .then(this.props.onUpdateDefinitions)\n      .then(() => {\n        this.props.onCheck(config.key);\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submitting: false, success: false });\n        }\n      });\n  };\n\n  updateConfiguration = (\n    config: (BitbucketBindingDefinition | BitbucketCloudBindingDefinition) & { newKey: string }\n  ) => {\n    if (isBitbucketBindingDefinition(config)) {\n      return updateBitbucketConfiguration(config);\n    }\n    return updateBitbucketCloudConfiguration(config);\n  };\n\n  createConfiguration = (config: BitbucketBindingDefinition | BitbucketCloudBindingDefinition) => {\n    if (isBitbucketBindingDefinition(config)) {\n      return createBitbucketConfiguration(config);\n    }\n    return createBitbucketCloudConfiguration(config);\n  };\n\n  render() {\n    const {\n      branchesEnabled,\n      definitions,\n      definitionStatus,\n      loadingAlmDefinitions,\n      loadingProjectCount,\n      multipleAlmEnabled\n    } = this.props;\n    const { editedDefinition, isCreating, submitting, success, variant } = this.state;\n\n    return (\n      <BitbucketTabRenderer\n        branchesEnabled={branchesEnabled}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        editedDefinition={editedDefinition}\n        isCreating={isCreating}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={this.handleCancel}\n        onCheck={this.props.onCheck}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSelectVariant={this.handleSelectVariant}\n        onSubmit={this.handleSubmit}\n        submitting={submitting}\n        success={success}\n        variant={variant}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nexport interface DeleteModalProps {\n  id: string;\n  projectCount?: number;\n  onDelete: (id: string) => void;\n  onCancel: () => void;\n}\n\nfunction showProjectCountWarning(projectCount?: number) {\n  if (projectCount === undefined) {\n    return <p>{translate('settings.almintegration.delete.no_info')}</p>;\n  }\n\n  return projectCount ? (\n    <p>{translateWithParameters('settings.almintegration.delete.info', projectCount)} </p>\n  ) : null;\n}\n\nexport default function DeleteModal({ id, onDelete, onCancel, projectCount }: DeleteModalProps) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={id}\n      header={translate('settings.almintegration.delete.header')}\n      isDestructive={true}\n      onClose={onCancel}\n      onConfirm={onDelete}>\n      <>\n        <p className=\"spacer-bottom\">\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.delete.message')}\n            id=\"settings.almintegration.delete.message\"\n            values={{ id: <b>{id}</b> }}\n          />\n        </p>\n        {showProjectCountWarning(projectCount)}\n      </>\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Setting } from '../../../types/settings';\nimport { getDefaultValue, getSettingValue, isEmptyValue } from '../utils';\n\ntype Props = {\n  changedValue: string;\n  hasError: boolean;\n  hasValueChanged: boolean;\n  isDefault: boolean;\n  onCancel: () => void;\n  onReset: () => void;\n  onSave: () => void;\n  setting: Setting;\n};\n\ntype State = { reseting: boolean };\n\nexport default class DefinitionActions extends React.PureComponent<Props, State> {\n  state: State = { reseting: false };\n\n  handleClose = () => {\n    this.setState({ reseting: false });\n  };\n\n  handleReset = () => {\n    this.setState({ reseting: true });\n  };\n\n  handleSubmit = () => {\n    this.props.onReset();\n    this.handleClose();\n  };\n\n  renderModal() {\n    const header = translate('settings.reset_confirm.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <p>{translate('settings.reset_confirm.description')}</p>\n          </div>\n          <footer className=\"modal-foot\">\n            <SubmitButton className=\"button-red\">{translate('reset_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    const { setting, isDefault, changedValue, hasValueChanged } = this.props;\n\n    const hasValueToResetTo = !isEmptyValue(setting.definition, getSettingValue(setting));\n    const hasBeenChangedToEmptyValue =\n      changedValue != null && isEmptyValue(setting.definition, changedValue);\n    const showReset =\n      hasValueToResetTo && (hasBeenChangedToEmptyValue || (!isDefault && !hasValueChanged));\n\n    return (\n      <>\n        {isDefault && !hasValueChanged && (\n          <div className=\"spacer-top note\" style={{ lineHeight: '24px' }}>\n            {translate('settings._default')}\n          </div>\n        )}\n        <div className=\"settings-definition-changes nowrap\">\n          {hasValueChanged && (\n            <Button\n              className=\"spacer-right button-success\"\n              disabled={this.props.hasError}\n              onClick={this.props.onSave}>\n              {translate('save')}\n            </Button>\n          )}\n\n          {showReset && (\n            <Button className=\"spacer-right\" onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          )}\n\n          {hasValueChanged && (\n            <ResetButtonLink className=\"spacer-right\" onClick={this.props.onCancel}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          )}\n\n          {showReset && (\n            <span className=\"note\">\n              {translate('default')}\n              {': '}\n              {getDefaultValue(setting)}\n            </span>\n          )}\n\n          {this.state.reseting && this.renderModal()}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Toggle from 'sonar-ui-common/components/controls/Toggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  value: string | boolean | undefined;\n}\n\nexport default function InputForBoolean({ onChange, name, value }: Props) {\n  const displayedValue = value != null ? value : false;\n  return (\n    <div className=\"display-inline-block text-top\">\n      <Toggle name={name} onChange={onChange} value={displayedValue} />\n      {value == null && <span className=\"spacer-left note\">{translate('settings.not_set')}</span>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nconst JSON_SPACE_SIZE = 4;\n\ninterface State {\n  formatError: boolean;\n}\n\nexport default class InputForJSON extends React.PureComponent<DefaultSpecializedInputProps, State> {\n  state: State = { formatError: false };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ formatError: false });\n    this.props.onChange(event.target.value);\n  };\n\n  format = () => {\n    const { value } = this.props;\n    try {\n      if (value) {\n        this.props.onChange(JSON.stringify(JSON.parse(value), undefined, JSON_SPACE_SIZE));\n      }\n    } catch (e) {\n      this.setState({ formatError: true });\n    }\n  };\n\n  render() {\n    const { formatError } = this.state;\n    return (\n      <div className=\"display-flex-end\">\n        <textarea\n          className=\"settings-large-input text-top monospaced spacer-right\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          rows={5}\n          value={this.props.value || ''}\n        />\n        <div>\n          {formatError && <Alert variant=\"info\">{translate('settings.json.format_error')} </Alert>}\n          <Button className=\"spacer-top\" onClick={this.format}>\n            {translate('settings.json.format')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  className?: string;\n  type: string;\n  value: string | number;\n}\n\nexport default class SimpleInput extends React.PureComponent<Props> {\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13 && this.props.onSave) {\n      this.props.onSave();\n    } else if (event.keyCode === 27 && this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classNames('text-top', this.props.className)}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        type={this.props.type}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForNumber(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"input-small\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface State {\n  changing: boolean;\n}\n\nexport default class InputForPassword extends React.PureComponent<\n  DefaultSpecializedInputProps,\n  State\n> {\n  state: State = {\n    changing: !this.props.value\n  };\n\n  componentWillReceiveProps(nextProps: DefaultSpecializedInputProps) {\n    /*\n     * Reset `changing` if:\n     *  - the value is reset (valueChanged -> !valueChanged)\n     *     or\n     *  - the value changes from outside the input (i.e. store update/reset/cancel)\n     */\n    if (\n      (this.props.hasValueChanged || this.props.value !== nextProps.value) &&\n      !nextProps.hasValueChanged\n    ) {\n      this.setState({ changing: !nextProps.value });\n    }\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ changing: true });\n  };\n\n  renderInput() {\n    return (\n      <form>\n        <input className=\"hidden\" type=\"password\" />\n        <input\n          autoComplete=\"off\"\n          autoFocus={this.state.changing && this.props.value}\n          className=\"js-password-input settings-large-input text-top\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          type=\"password\"\n          value={this.props.value}\n        />\n      </form>\n    );\n  }\n\n  render() {\n    if (this.state.changing) {\n      return this.renderInput();\n    }\n\n    return (\n      <>\n        <LockIcon className=\"text-middle big-spacer-right\" fill={colors.gray60} />\n        <Button className=\"text-middle\" onClick={this.handleChangeClick}>\n          {translate('change_verb')}\n        </Button>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { SettingCategoryDefinition } from '../../../../types/settings';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ntype Props = DefaultSpecializedInputProps & Pick<SettingCategoryDefinition, 'options'>;\n\nexport default class InputForSingleSelectList extends React.PureComponent<Props> {\n  handleInputChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = this.props.options.map(option => ({\n      label: option,\n      value: option\n    }));\n\n    return (\n      <Select\n        className=\"settings-large-input\"\n        clearable={false}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        options={options}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForString(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"settings-large-input\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nexport default class InputForText extends React.PureComponent<DefaultSpecializedInputProps> {\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"settings-large-input text-top\"\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        rows={5}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SettingType } from '../../../../types/settings';\nimport {\n  DefaultInputProps,\n  DefaultSpecializedInputProps,\n  getUniqueName,\n  isDefaultOrInherited\n} from '../../utils';\nimport InputForBoolean from './InputForBoolean';\nimport InputForJSON from './InputForJSON';\nimport InputForNumber from './InputForNumber';\nimport InputForPassword from './InputForPassword';\nimport InputForSingleSelectList from './InputForSingleSelectList';\nimport InputForString from './InputForString';\nimport InputForText from './InputForText';\n\nconst typeMapping: {\n  [type in SettingType]?: React.ComponentType<DefaultSpecializedInputProps>;\n} = {\n  STRING: InputForString,\n  TEXT: InputForText,\n  JSON: InputForJSON,\n  PASSWORD: InputForPassword,\n  BOOLEAN: InputForBoolean,\n  INTEGER: InputForNumber,\n  LONG: InputForNumber,\n  FLOAT: InputForNumber\n};\n\ninterface Props extends DefaultInputProps {\n  name?: string;\n}\n\nexport default class PrimitiveInput extends React.PureComponent<Props> {\n  render() {\n    const { setting, ...other } = this.props;\n    const { definition } = setting;\n\n    const name = this.props.name || getUniqueName(definition);\n\n    if (definition.type === 'SINGLE_SELECT_LIST') {\n      return (\n        <InputForSingleSelectList\n          isDefault={isDefaultOrInherited(setting)}\n          name={name}\n          options={definition.options}\n          {...other}\n        />\n      );\n    }\n\n    const InputComponent = (definition.type && typeMapping[definition.type]) || InputForString;\n    return <InputComponent isDefault={isDefaultOrInherited(setting)} name={name} {...other} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class MultiValueInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue = () => {\n    return this.props.value || [];\n  };\n\n  handleSingleInputChange = (index: number, value: any) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1, value);\n    this.props.onChange(newValue);\n  };\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  renderInput(value: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    return (\n      <li className=\"spacer-bottom\" key={index}>\n        <PrimitiveInput\n          hasValueChanged={this.props.hasValueChanged}\n          onChange={value => this.handleSingleInputChange(index, value)}\n          setting={{\n            ...setting,\n            definition: { ...setting.definition, multiValues: false },\n            values: undefined\n          }}\n          value={value}\n        />\n\n        {!isLast && (\n          <div className=\"display-inline-block spacer-left\">\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          </div>\n        )}\n      </li>\n    );\n  }\n\n  render() {\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(this.props.setting.definition)];\n    return (\n      <div>\n        <ul>\n          {displayedValue.map((value, index) =>\n            this.renderInput(value, index, index === displayedValue.length - 1)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue, getUniqueName, isCategoryDefinition } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class PropertySetInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue() {\n    return this.props.value || [];\n  }\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (index: number, fieldKey: string, value: any) => {\n    const emptyValue = getEmptyValue(this.props.setting.definition)[0];\n    const newValue = [...this.ensureValue()];\n    const newFields = { ...emptyValue, ...newValue[index], [fieldKey]: value };\n    newValue.splice(index, 1, newFields);\n    return this.props.onChange(newValue);\n  };\n\n  renderFields(fieldValues: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    const { definition } = setting;\n\n    return (\n      <tr key={index}>\n        {isCategoryDefinition(definition) &&\n          definition.fields.map(field => (\n            <td key={field.key}>\n              <PrimitiveInput\n                hasValueChanged={this.props.hasValueChanged}\n                name={getUniqueName(definition, field.key)}\n                onChange={value => this.handleInputChange(index, field.key, value)}\n                setting={{ ...setting, definition: field, value: fieldValues[field.key] }}\n                value={fieldValues[field.key]}\n              />\n            </td>\n          ))}\n        <td className=\"thin nowrap text-middle\">\n          {!isLast && (\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { definition } = this.props.setting;\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(definition)];\n\n    return (\n      <div>\n        <table\n          className=\"data zebra-hover no-outer-padding\"\n          style={{ width: 'auto', minWidth: 480, marginTop: -12 }}>\n          <thead>\n            <tr>\n              {isCategoryDefinition(definition) &&\n                definition.fields.map(field => (\n                  <th key={field.key}>\n                    {field.name}\n                    {field.description != null && (\n                      <span className=\"spacer-top small\">{field.description}</span>\n                    )}\n                  </th>\n                ))}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayedValue.map((fieldValues, index) =>\n              this.renderFields(fieldValues, index, index === displayedValue.length - 1)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultInputProps, isCategoryDefinition } from '../../utils';\nimport MultiValueInput from './MultiValueInput';\nimport PrimitiveInput from './PrimitiveInput';\nimport PropertySetInput from './PropertySetInput';\n\nexport default function Input(props: DefaultInputProps) {\n  const { definition } = props.setting;\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    return <MultiValueInput {...props} />;\n  }\n\n  if (definition.type === 'PROPERTY_SET') {\n    return <PropertySetInput {...props} />;\n  }\n\n  return <PrimitiveInput {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { sanitizeStringRestricted } from '../../../helpers/sanitize';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppValidationMessage,\n  isSettingsAppLoading,\n  Store\n} from '../../../store/rootReducer';\nimport { Setting } from '../../../types/settings';\nimport { checkValue, resetValue, saveValue } from '../store/actions';\nimport { cancelChange, changeValue, passValidation } from '../store/settingsPage';\nimport {\n  getPropertyDescription,\n  getPropertyName,\n  getSettingValue,\n  isDefaultOrInherited\n} from '../utils';\nimport DefinitionActions from './DefinitionActions';\nimport Input from './inputs/Input';\n\ninterface Props {\n  cancelChange: (key: string) => void;\n  changeValue: (key: string, value: any) => void;\n  changedValue: any;\n  checkValue: (key: string) => boolean;\n  component?: T.Component;\n  loading: boolean;\n  passValidation: (key: string) => void;\n  resetValue: (key: string, component?: string) => Promise<void>;\n  saveValue: (key: string, component?: string) => Promise<void>;\n  setting: Setting;\n  validationMessage?: string;\n}\n\ninterface State {\n  success: boolean;\n}\n\nconst SAFE_SET_STATE_DELAY = 3000;\n\nexport class Definition extends React.PureComponent<Props, State> {\n  timeout?: number;\n  mounted = false;\n  state = { success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  safeSetState(changes: State) {\n    if (this.mounted) {\n      this.setState(changes);\n    }\n  }\n\n  handleChange = (value: any) => {\n    clearTimeout(this.timeout);\n    this.props.changeValue(this.props.setting.definition.key, value);\n    this.handleCheck();\n  };\n\n  handleReset = () => {\n    const { component, setting } = this.props;\n    const { definition } = setting;\n    const componentKey = component && component.key;\n    return this.props.resetValue(definition.key, componentKey).then(() => {\n      this.props.cancelChange(definition.key);\n      this.safeSetState({ success: true });\n      this.timeout = window.setTimeout(\n        () => this.safeSetState({ success: false }),\n        SAFE_SET_STATE_DELAY\n      );\n    });\n  };\n\n  handleCancel = () => {\n    const { setting } = this.props;\n    this.props.cancelChange(setting.definition.key);\n    this.props.passValidation(setting.definition.key);\n  };\n\n  handleCheck = () => {\n    const { setting } = this.props;\n    this.props.checkValue(setting.definition.key);\n  };\n\n  handleSave = () => {\n    if (this.props.changedValue != null) {\n      this.safeSetState({ success: false });\n      const { component, setting } = this.props;\n      this.props.saveValue(setting.definition.key, component && component.key).then(\n        () => {\n          this.safeSetState({ success: true });\n          this.timeout = window.setTimeout(\n            () => this.safeSetState({ success: false }),\n            SAFE_SET_STATE_DELAY\n          );\n        },\n        () => {\n          /* Do nothing */\n        }\n      );\n    }\n  };\n\n  render() {\n    const { changedValue, loading, setting, validationMessage } = this.props;\n    const { definition } = setting;\n    const propertyName = getPropertyName(definition);\n    const hasError = validationMessage != null;\n    const hasValueChanged = changedValue != null;\n    const effectiveValue = hasValueChanged ? changedValue : getSettingValue(setting);\n    const isDefault = isDefaultOrInherited(setting);\n    const description = getPropertyDescription(definition);\n    return (\n      <div\n        className={classNames('settings-definition', {\n          'settings-definition-changed': hasValueChanged\n        })}\n        data-key={definition.key}>\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\" title={propertyName}>\n            {propertyName}\n          </h3>\n\n          {description && (\n            <div\n              className=\"markdown small spacer-top\"\n              // eslint-disable-next-line react/no-danger\n              dangerouslySetInnerHTML={{ __html: sanitizeStringRestricted(description) }}\n            />\n          )}\n\n          <div className=\"settings-definition-key note little-spacer-top\">\n            {translateWithParameters('settings.key_x', definition.key)}\n          </div>\n        </div>\n\n        <div className=\"settings-definition-right\">\n          <div className=\"settings-definition-state\">\n            {loading && (\n              <span className=\"text-info\">\n                <i className=\"spinner spacer-right\" />\n                {translate('settings.state.saving')}\n              </span>\n            )}\n\n            {!loading && validationMessage && (\n              <span className=\"text-danger\">\n                <AlertErrorIcon className=\"spacer-right\" />\n                <span>\n                  {translateWithParameters('settings.state.validation_failed', validationMessage)}\n                </span>\n              </span>\n            )}\n\n            {!loading && !hasError && this.state.success && (\n              <span className=\"text-success\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n\n          <Input\n            hasValueChanged={hasValueChanged}\n            onCancel={this.handleCancel}\n            onChange={this.handleChange}\n            onSave={this.handleSave}\n            setting={setting}\n            value={effectiveValue}\n          />\n\n          <DefinitionActions\n            changedValue={changedValue}\n            hasError={hasError}\n            hasValueChanged={hasValueChanged}\n            isDefault={isDefault}\n            onCancel={this.handleCancel}\n            onReset={this.handleReset}\n            onSave={this.handleSave}\n            setting={setting}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: Pick<Props, 'setting'>) => ({\n  changedValue: getSettingsAppChangedValue(state, ownProps.setting.definition.key),\n  loading: isSettingsAppLoading(state, ownProps.setting.definition.key),\n  validationMessage: getSettingsAppValidationMessage(state, ownProps.setting.definition.key)\n});\n\nconst mapDispatchToProps = {\n  cancelChange: cancelChange as any,\n  changeValue: changeValue as any,\n  checkValue: checkValue as any,\n  passValidation: passValidation as any,\n  resetValue: resetValue as any,\n  saveValue: saveValue as any\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Definition);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Setting } from '../../../types/settings';\nimport Definition from './Definition';\n\ninterface Props {\n  component?: T.Component;\n  settings: Setting[];\n}\n\nexport default function DefinitionsList({ component, settings }: Props) {\n  return (\n    <ul className=\"settings-definitions-list\">\n      {settings.map(setting => (\n        <li key={setting.definition.key}>\n          <Definition component={component} setting={setting} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { sendTestEmail } from '../../../api/settings';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  recipient: string;\n  subject: string;\n  message: string;\n  loading: boolean;\n  success?: string;\n  error?: string;\n}\n\nexport class EmailForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      recipient: this.props.currentUser.email || '',\n      subject: translate('email_configuration.test.subject'),\n      message: translate('email_configuration.test.message_text'),\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    return parseError(response).then(message => {\n      if (this.mounted) {\n        this.setState({ error: message, loading: false });\n      }\n    });\n  };\n\n  handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ success: undefined, error: undefined, loading: true });\n    const { recipient, subject, message } = this.state;\n    sendTestEmail(recipient, subject, message).then(() => {\n      if (this.mounted) {\n        this.setState({ success: recipient, loading: false });\n      }\n    }, this.handleError);\n  };\n\n  onRecipientChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ recipient: event.target.value });\n  };\n\n  onSubjectChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ subject: event.target.value });\n  };\n\n  onMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    const { error, loading, message, recipient, subject, success } = this.state;\n    return (\n      <div className=\"settings-definition\">\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\">\n            {translate('email_configuration.test.title')}\n          </h3>\n        </div>\n\n        <form className=\"settings-definition-right\" onSubmit={this.handleFormSubmit}>\n          {success && (\n            <div className=\"form-field\">\n              <Alert variant=\"success\">\n                {translateWithParameters('email_configuration.test.email_was_sent_to_x', success)}\n              </Alert>\n            </div>\n          )}\n\n          {error !== undefined && (\n            <div className=\"form-field\">\n              <Alert variant=\"error\">{error}</Alert>\n            </div>\n          )}\n\n          <MandatoryFieldsExplanation className=\"form-field\" />\n\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-to\">\n              {translate('email_configuration.test.to_address')}\n              <MandatoryFieldMarker />\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-to\"\n              onChange={this.onRecipientChange}\n              required={true}\n              type=\"email\"\n              value={recipient}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-subject\">\n              {translate('email_configuration.test.subject')}\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-subject\"\n              onChange={this.onSubjectChange}\n              type=\"text\"\n              value={subject}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-message\">\n              {translate('email_configuration.test.message')}\n              <MandatoryFieldMarker />\n            </label>\n            <textarea\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-message\"\n              onChange={this.onMessageChange}\n              required={true}\n              rows={5}\n              value={message}\n            />\n          </div>\n\n          <SubmitButton disabled={loading}>\n            {translate('email_configuration.test.send')}\n          </SubmitButton>\n          {loading && <DeferredSpinner className=\"spacer-left\" />}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withCurrentUser(EmailForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, isEqual, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { sanitizeStringRestricted } from '../../../helpers/sanitize';\nimport { Setting, SettingCategoryDefinition } from '../../../types/settings';\nimport { getSubCategoryDescription, getSubCategoryName } from '../utils';\nimport DefinitionsList from './DefinitionsList';\nimport EmailForm from './EmailForm';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n  fetchValues: Function;\n  settings: Array<Setting & { definition: SettingCategoryDefinition }>;\n  subCategory?: string;\n}\n\nexport default class SubCategoryDefinitionsList extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.fetchValues();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevKeys = prevProps.settings.map(setting => setting.definition.key);\n    const keys = this.props.settings.map(setting => setting.definition.key);\n    if (prevProps.component !== this.props.component || !isEqual(prevKeys, keys)) {\n      this.fetchValues();\n    }\n  }\n\n  fetchValues() {\n    const keys = this.props.settings.map(setting => setting.definition.key).join();\n    this.props.fetchValues(keys, this.props.component && this.props.component.key);\n  }\n\n  renderEmailForm = (subCategoryKey: string) => {\n    const isEmailSettings = this.props.category === 'general' && subCategoryKey === 'email';\n    if (!isEmailSettings) {\n      return null;\n    }\n    return <EmailForm />;\n  };\n\n  render() {\n    const bySubCategory = groupBy(this.props.settings, setting => setting.definition.subCategory);\n    const subCategories = Object.keys(bySubCategory).map(key => ({\n      key,\n      name: getSubCategoryName(bySubCategory[key][0].definition.category, key),\n      description: getSubCategoryDescription(bySubCategory[key][0].definition.category, key)\n    }));\n    const sortedSubCategories = sortBy(subCategories, subCategory =>\n      subCategory.name.toLowerCase()\n    );\n    const filteredSubCategories = this.props.subCategory\n      ? sortedSubCategories.filter(c => c.key === this.props.subCategory)\n      : sortedSubCategories;\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        {filteredSubCategories.map(subCategory => (\n          <li key={subCategory.key}>\n            <h2 className=\"settings-sub-category-name\">{subCategory.name}</h2>\n            {subCategory.description != null && (\n              <div\n                className=\"settings-sub-category-description markdown\"\n                // eslint-disable-next-line react/no-danger\n                dangerouslySetInnerHTML={{\n                  __html: sanitizeStringRestricted(subCategory.description)\n                }}\n              />\n            )}\n            <DefinitionsList\n              component={this.props.component}\n              settings={bySubCategory[subCategory.key]}\n            />\n            {this.renderEmailForm(subCategory.key)}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getSettingsAppSettingsForCategory, Store } from '../../../store/rootReducer';\nimport { fetchValues } from '../store/actions';\nimport SubCategoryDefinitionsList from './SubCategoryDefinitionsList';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n}\n\nconst mapStateToProps = (state: Store, ownProps: Props) => ({\n  settings: getSettingsAppSettingsForCategory(\n    state,\n    ownProps.category,\n    ownProps.component && ownProps.component.key\n  )\n});\n\nconst mapDispatchToProps = { fetchValues };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubCategoryDefinitionsList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GithubFormProps {\n  formData: GithubBindingDefinition;\n  onFieldChange: (fieldId: keyof GithubBindingDefinition, value: string) => void;\n}\n\nexport default function GithubForm(props: GithubFormProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmBindingDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.almintegration.form.name.github.help')}\n        id=\"name.github\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.github.help1')}\n            <br />\n            <em>https://github.company.com/api/v3</em>\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.github.help2')}\n            <br />\n            <em>https://api.github.com/</em>\n          </>\n        }\n        id=\"url.github\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"app_id\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"appId\"\n        value={formData.appId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"client_id.github\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"clientId\"\n        value={formData.clientId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"client_secret.github\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"clientSecret\"\n        value={formData.clientSecret}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"private_key\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"privateKey\"\n        value={formData.privateKey}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGithubConfiguration, updateGithubConfiguration } from '../../../../api/alm-settings';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  GithubBindingDefinition\n} from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GithubForm from './GithubForm';\n\nexport interface GithubTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GithubBindingDefinition[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GithubTab(props: GithubTabProps) {\n  const {\n    branchesEnabled,\n    component,\n    multipleAlmEnabled,\n    definitions,\n    definitionStatus,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.GitHub}\n        branchesEnabled={branchesEnabled}\n        createConfiguration={createGithubConfiguration}\n        defaultBinding={{\n          key: '',\n          appId: '',\n          clientId: '',\n          clientSecret: '',\n          url: '',\n          privateKey: ''\n        }}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        form={childProps => <GithubForm {...childProps} />}\n        help={\n          <FormattedMessage\n            defaultMessage={translate(`settings.almintegration.github.info`)}\n            id=\"settings.almintegration.github.info\"\n            values={{\n              link: (\n                <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.GitHub]}>\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        }\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCheck={props.onCheck}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateGithubConfiguration}\n      />\n\n      <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitHub}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GitlabFormProps {\n  formData: GitlabBindingDefinition;\n  onFieldChange: (fieldId: keyof GitlabBindingDefinition, value: string) => void;\n}\n\nexport default function GitlabForm(props: GitlabFormProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmBindingDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.almintegration.form.name.gitlab.help')}\n        id=\"name.gitlab\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.gitlab.help')}\n            <br />\n            <em>https://gitlab.com/api/v4</em>\n          </>\n        }\n        id=\"url.gitlab\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url || ''}\n      />\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.gitlab.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGitlabConfiguration, updateGitlabConfiguration } from '../../../../api/alm-settings';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  GitlabBindingDefinition\n} from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GitlabForm from './GitlabForm';\n\nexport interface GitlabTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GitlabBindingDefinition[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GitlabTab(props: GitlabTabProps) {\n  const {\n    branchesEnabled,\n    component,\n    multipleAlmEnabled,\n    definitions,\n    definitionStatus,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.GitLab}\n        branchesEnabled={branchesEnabled}\n        createConfiguration={createGitlabConfiguration}\n        defaultBinding={{ key: '', personalAccessToken: '', url: '' }}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        form={childProps => <GitlabForm {...childProps} />}\n        help={\n          <FormattedMessage\n            defaultMessage={translate(`settings.almintegration.gitlab.info`)}\n            id=\"settings.almintegration.gitlab.info\"\n            values={{\n              link: (\n                <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.GitLab]}>\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        }\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCheck={props.onCheck}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateGitlabConfiguration}\n      />\n\n      <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitLab}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedTabs from 'sonar-ui-common/components/controls/BoxedTabs';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  AlmKeys,\n  AlmSettingsBindingDefinitions,\n  AlmSettingsBindingStatus\n} from '../../../../types/alm-settings';\nimport AzureTab from './AzureTab';\nimport BitbucketTab from './BitbucketTab';\nimport DeleteModal from './DeleteModal';\nimport GithubTab from './GithubTab';\nimport GitlabTab from './GitlabTab';\n\nexport interface AlmIntegrationRendererProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCheck: (definitionKey: string) => void;\n  onConfirmDelete: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onSelectAlm: (alm: AlmKeys) => void;\n  onUpdateDefinitions: () => void;\n  projectCount?: number;\n}\n\nconst tabs = [\n  {\n    key: AlmKeys.GitHub,\n    label: (\n      <>\n        <img\n          alt=\"github\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/github.svg`}\n        />\n        GitHub\n      </>\n    ),\n    requiresBranchesEnabled: false\n  },\n  {\n    key: AlmKeys.BitbucketServer,\n    label: (\n      <>\n        <img\n          alt=\"bitbucket\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n        />\n        Bitbucket\n      </>\n    ),\n    requiresBranchesEnabled: false\n  },\n  {\n    key: AlmKeys.Azure,\n    label: (\n      <>\n        <img\n          alt=\"azure\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/azure.svg`}\n        />\n        Azure DevOps\n      </>\n    ),\n    requiresBranchesEnabled: false\n  },\n  {\n    key: AlmKeys.GitLab,\n    label: (\n      <>\n        <img\n          alt=\"gitlab\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n        />\n        GitLab\n      </>\n    ),\n    requiresBranchesEnabled: false\n  }\n];\n\nexport default function AlmIntegrationRenderer(props: AlmIntegrationRendererProps) {\n  const {\n    component,\n    definitionKeyForDeletion,\n    definitions,\n    definitionStatus,\n    currentAlm,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    branchesEnabled,\n    multipleAlmEnabled,\n    projectCount\n  } = props;\n\n  return (\n    <>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.almintegration.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.almintegration.description')}\n      </div>\n      <BoxedTabs\n        onSelect={props.onSelectAlm}\n        selected={currentAlm}\n        tabs={tabs.filter(tab => !(tab.requiresBranchesEnabled && !branchesEnabled))}\n      />\n\n      {currentAlm === AlmKeys.Azure && (\n        <AzureTab\n          branchesEnabled={branchesEnabled}\n          definitions={definitions.azure}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.BitbucketServer && (\n        <BitbucketTab\n          branchesEnabled={branchesEnabled}\n          definitions={[...definitions.bitbucket, ...definitions.bitbucketcloud]}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitHub && (\n        <GithubTab\n          branchesEnabled={branchesEnabled}\n          component={component}\n          definitions={definitions.github}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitLab && (\n        <GitlabTab\n          branchesEnabled={branchesEnabled}\n          definitions={definitions.gitlab}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n\n      {definitionKeyForDeletion && (\n        <DeleteModal\n          id={definitionKeyForDeletion}\n          onCancel={props.onCancel}\n          onDelete={props.onConfirmDelete}\n          projectCount={projectCount}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { AlmKeys } from '../../../../types/alm-settings';\n\nexport const ALM_KEY_LIST = [\n  AlmKeys.Azure,\n  AlmKeys.BitbucketServer,\n  AlmKeys.BitbucketCloud,\n  AlmKeys.GitHub,\n  AlmKeys.GitLab\n];\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  countBindedProjects,\n  deleteConfiguration,\n  getAlmDefinitions,\n  validateAlmSettings\n} from '../../../../api/alm-settings';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { withRouter } from '../../../../components/hoc/withRouter';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingDefinitions,\n  AlmSettingsBindingStatus,\n  AlmSettingsBindingStatusType\n} from '../../../../types/alm-settings';\nimport AlmIntegrationRenderer from './AlmIntegrationRenderer';\nimport { ALM_KEY_LIST } from './utils';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  appState: Pick<T.AppState, 'branchesEnabled' | 'multipleAlmEnabled'>;\n  component?: T.Component;\n}\n\ninterface State {\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  projectCount?: number;\n}\n\nexport class AlmIntegration extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      currentAlm: props.location.query.alm || AlmKeys.GitHub,\n      definitions: {\n        [AlmKeys.Azure]: [],\n        [AlmKeys.BitbucketServer]: [],\n        [AlmKeys.BitbucketCloud]: [],\n        [AlmKeys.GitHub]: [],\n        [AlmKeys.GitLab]: []\n      },\n      definitionStatus: {},\n      loadingAlmDefinitions: true,\n      loadingProjectCount: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    return this.fetchPullRequestDecorationSetting().then(definitions => {\n      if (definitions) {\n        // Validate all alms on load:\n        ALM_KEY_LIST.forEach(alm => {\n          this.state.definitions[alm].forEach((def: AlmBindingDefinition) =>\n            this.handleCheck(def.key, false)\n          );\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  deleteConfiguration = (definitionKey: string) => {\n    return deleteConfiguration(definitionKey)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n        }\n      })\n      .then(this.fetchPullRequestDecorationSetting);\n  };\n\n  fetchPullRequestDecorationSetting = () => {\n    this.setState({ loadingAlmDefinitions: true });\n    return getAlmDefinitions()\n      .then(definitions => {\n        if (this.mounted) {\n          this.setState({\n            definitions,\n            loadingAlmDefinitions: false\n          });\n          return definitions;\n        }\n        return undefined;\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingAlmDefinitions: false });\n        }\n      });\n  };\n\n  handleSelectAlm = (currentAlm: AlmKeys) => {\n    this.setState({ currentAlm });\n  };\n\n  handleCancel = () => {\n    this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n  };\n\n  handleDelete = (definitionKey: string) => {\n    this.setState({ loadingProjectCount: true });\n    return countBindedProjects(definitionKey)\n      .then(projectCount => {\n        if (this.mounted) {\n          this.setState({\n            definitionKeyForDeletion: definitionKey,\n            loadingProjectCount: false,\n            projectCount\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingProjectCount: false });\n        }\n      });\n  };\n\n  handleCheck = async (definitionKey: string, alertSuccess = true) => {\n    this.setState(({ definitionStatus }) => {\n      definitionStatus[definitionKey] = {\n        ...definitionStatus[definitionKey],\n        type: AlmSettingsBindingStatusType.Validating\n      };\n\n      return { definitionStatus: { ...definitionStatus } };\n    });\n\n    let type: AlmSettingsBindingStatusType;\n    let failureMessage = '';\n\n    try {\n      failureMessage = await validateAlmSettings(definitionKey);\n      type = failureMessage\n        ? AlmSettingsBindingStatusType.Failure\n        : AlmSettingsBindingStatusType.Success;\n    } catch (_) {\n      type = AlmSettingsBindingStatusType.Warning;\n    }\n\n    if (this.mounted) {\n      this.setState(({ definitionStatus }) => {\n        definitionStatus[definitionKey] = {\n          alertSuccess,\n          failureMessage,\n          type\n        };\n\n        return { definitionStatus: { ...definitionStatus } };\n      });\n    }\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled, multipleAlmEnabled },\n      component\n    } = this.props;\n    return (\n      <AlmIntegrationRenderer\n        branchesEnabled={Boolean(branchesEnabled)}\n        component={component}\n        multipleAlmEnabled={Boolean(multipleAlmEnabled)}\n        onCancel={this.handleCancel}\n        onConfirmDelete={this.deleteConfiguration}\n        onCheck={this.handleCheck}\n        onDelete={this.handleDelete}\n        onSelectAlm={this.handleSelectAlm}\n        onUpdateDefinitions={this.fetchPullRequestDecorationSetting}\n        {...this.state}\n      />\n    );\n  }\n}\n\nexport default withRouter(withAppState(AlmIntegration));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\n\nexport function AnalysisScope(props: AdditionalCategoryComponentProps) {\n  const { component, selectedCategory } = props;\n\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        {translate('settings.analysis_scope.wildcards.introduction')}\n        <Link\n          className=\"spacer-left\"\n          to=\"/documentation/project-administration/narrowing-the-focus/\">\n          {translate('learn_more')}\n        </Link>\n      </p>\n\n      <table className=\"data spacer-bottom\">\n        <tbody>\n          <tr>\n            <td>*</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_char')}</td>\n          </tr>\n          <tr>\n            <td>**</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_dir')}</td>\n          </tr>\n          <tr>\n            <td>?</td>\n            <td>{translate('settings.analysis_scope.wildcards.single_char')}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"settings-sub-category\">\n        <CategoryDefinitionsList category={selectedCategory} component={component} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\n\nconst CATEGORY_OVERRIDES: T.Dict<string> = {\n  abap: LANGUAGES_CATEGORY,\n  apex: LANGUAGES_CATEGORY,\n  'c / c++ / objective-c': LANGUAGES_CATEGORY,\n  'c#': LANGUAGES_CATEGORY,\n  cobol: LANGUAGES_CATEGORY,\n  css: LANGUAGES_CATEGORY,\n  flex: LANGUAGES_CATEGORY,\n  go: LANGUAGES_CATEGORY,\n  html: LANGUAGES_CATEGORY,\n  java: LANGUAGES_CATEGORY,\n  javascript: LANGUAGES_CATEGORY,\n  'javascript / typescript': LANGUAGES_CATEGORY,\n  kotlin: LANGUAGES_CATEGORY,\n  php: LANGUAGES_CATEGORY,\n  'pl/i': LANGUAGES_CATEGORY,\n  'pl/sql': LANGUAGES_CATEGORY,\n  python: LANGUAGES_CATEGORY,\n  rpg: LANGUAGES_CATEGORY,\n  ruby: LANGUAGES_CATEGORY,\n  scala: LANGUAGES_CATEGORY,\n  swift: LANGUAGES_CATEGORY,\n  't-sql': LANGUAGES_CATEGORY,\n  typescript: LANGUAGES_CATEGORY,\n  'vb.net': LANGUAGES_CATEGORY,\n  'visual basic': LANGUAGES_CATEGORY,\n  xml: LANGUAGES_CATEGORY\n};\n\nexport default CATEGORY_OVERRIDES;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\nexport interface LanguagesProps extends AdditionalCategoryComponentProps {\n  categories: string[];\n  location: Location;\n  router: Router;\n}\n\ninterface SelectOption {\n  label: string;\n  originalValue: string;\n  value: string;\n}\n\nexport function Languages(props: LanguagesProps) {\n  const { categories, component, location, router, selectedCategory } = props;\n  const { availableLanguages, selectedLanguage } = getLanguages(categories, selectedCategory);\n\n  const handleOnChange = (newOption: SelectOption) => {\n    router.push({\n      ...location,\n      query: { ...location.query, category: newOption.originalValue }\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"settings-sub-category-name\">{translate('property.category.languages')}</h2>\n      <div data-test=\"language-select\">\n        <Select\n          className=\"input-large\"\n          onChange={handleOnChange}\n          options={availableLanguages}\n          placeholder={translate('settings.languages.select_a_language_placeholder')}\n          value={selectedLanguage}\n        />\n      </div>\n      {selectedLanguage && (\n        <div className=\"settings-sub-category\">\n          <CategoryDefinitionsList category={selectedLanguage} component={component} />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction getLanguages(categories: string[], selectedCategory: string) {\n  const lowerCasedLanguagesCategory = LANGUAGES_CATEGORY.toLowerCase();\n  const lowerCasedSelectedCategory = selectedCategory.toLowerCase();\n\n  const availableLanguages = categories\n    .filter(c => CATEGORY_OVERRIDES[c.toLowerCase()] === lowerCasedLanguagesCategory)\n    .map(c => ({\n      label: getCategoryName(c),\n      value: c.toLowerCase(),\n      originalValue: c\n    }));\n\n  let selectedLanguage = undefined;\n\n  if (\n    lowerCasedSelectedCategory !== lowerCasedLanguagesCategory &&\n    availableLanguages.find(c => c.value === lowerCasedSelectedCategory)\n  ) {\n    selectedLanguage = lowerCasedSelectedCategory;\n  }\n\n  return {\n    availableLanguages,\n    selectedLanguage\n  };\n}\n\nexport default withRouter(\n  connect((state: Store) => ({\n    categories: getSettingsAppAllCategories(state)\n  }))(Languages)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport BaselineSettingDays from '../../projectBaseline/components/BaselineSettingDays';\nimport BaselineSettingPreviousVersion from '../../projectBaseline/components/BaselineSettingPreviousVersion';\nimport { validateDays } from '../../projectBaseline/utils';\n\ninterface State {\n  currentSetting?: T.NewCodePeriodSettingType;\n  days: string;\n  loading: boolean;\n  currentSettingValue?: string | number;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  success: boolean;\n}\n\nconst DEFAULT_SETTING = 'PREVIOUS_VERSION';\n\nexport default class NewCodePeriod extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    loading: true,\n    days: '30',\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNewCodePeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNewCodePeriodSetting() {\n    getNewCodePeriod()\n      .then(({ type, value }) => {\n        const currentSetting = type || DEFAULT_SETTING;\n\n        this.setState(({ days }) => ({\n          currentSetting,\n          days: currentSetting === 'NUMBER_OF_DAYS' ? String(value) : days,\n          loading: false,\n          currentSettingValue: value,\n          selected: currentSetting\n        }));\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  onSelectDays = (days: string) => {\n    this.setState({ days, success: false });\n  };\n\n  onSelectSetting = (selected: T.NewCodePeriodSettingType) => {\n    this.setState({ selected, success: false });\n  };\n\n  onCancel = () => {\n    this.setState(({ currentSetting, currentSettingValue, days }) => ({\n      selected: currentSetting,\n      days: currentSetting === 'NUMBER_OF_DAYS' ? String(currentSettingValue) : days\n    }));\n  };\n\n  onSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { days, selected } = this.state;\n\n    const type = selected;\n    const value = type === 'NUMBER_OF_DAYS' ? days : undefined;\n\n    if (type) {\n      this.setState({ saving: true, success: false });\n      setNewCodePeriod({\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined,\n            success: true\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentSetting,\n      days,\n      loading,\n      currentSettingValue,\n      saving,\n      selected,\n      success\n    } = this.state;\n\n    const isChanged =\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && String(days) !== currentSettingValue);\n\n    const isValid = selected !== 'NUMBER_OF_DAYS' || validateDays(days);\n\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        <li>\n          <ul className=\"settings-definitions-list\">\n            <li>\n              <div className=\"settings-definition\">\n                <div className=\"settings-definition-left\">\n                  <h3\n                    className=\"settings-definition-name\"\n                    title={translate('settings.new_code_period.title')}>\n                    {translate('settings.new_code_period.title')}\n                  </h3>\n\n                  <div className=\"small big-spacer-top\">\n                    <FormattedMessage\n                      defaultMessage={translate('settings.new_code_period.description')}\n                      id=\"settings.new_code_period.description\"\n                      values={{\n                        link: (\n                          <Link to=\"/documentation/project-administration/new-code-period/\">\n                            {translate('learn_more')}\n                          </Link>\n                        )\n                      }}\n                    />\n                    <p className=\"spacer-top\">\n                      {translate('settings.new_code_period.description2')}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"settings-definition-right\">\n                  {loading ? (\n                    <DeferredSpinner />\n                  ) : (\n                    <form onSubmit={this.onSubmit}>\n                      <BaselineSettingPreviousVersion\n                        isDefault={true}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'PREVIOUS_VERSION'}\n                      />\n                      <BaselineSettingDays\n                        className=\"spacer-top\"\n                        days={days}\n                        isChanged={isChanged}\n                        isValid={isValid}\n                        onChangeDays={this.onSelectDays}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'NUMBER_OF_DAYS'}\n                      />\n                      {isChanged && (\n                        <div className=\"big-spacer-top\">\n                          <p className=\"spacer-bottom\">\n                            {translate('baseline.next_analysis_notice')}\n                          </p>\n                          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n                          <SubmitButton disabled={saving || !isValid}>\n                            {translate('save')}\n                          </SubmitButton>\n                          <ResetButtonLink className=\"spacer-left\" onClick={this.onCancel}>\n                            {translate('cancel')}\n                          </ResetButtonLink>\n                        </div>\n                      )}\n                      {!saving && !loading && success && (\n                        <div className=\"big-spacer-top\">\n                          <span className=\"text-success\">\n                            <AlertSuccessIcon className=\"spacer-right\" />\n                            {translate('settings.state.saved')}\n                          </span>\n                        </div>\n                      )}\n                    </form>\n                  )}\n                </div>\n              </div>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport { AlmKeys, ProjectAlmBindingResponse } from '../../../../types/alm-settings';\nimport InputForBoolean from '../inputs/InputForBoolean';\n\nexport interface AlmSpecificFormProps {\n  alm: AlmKeys;\n  formData: T.Omit<ProjectAlmBindingResponse, 'alm'>;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  monorepoEnabled: boolean;\n}\n\ninterface LabelProps {\n  help?: boolean;\n  helpParams?: T.Dict<string | JSX.Element>;\n  id: string;\n  optional?: boolean;\n}\n\ninterface CommonFieldProps extends LabelProps {\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  propKey: keyof ProjectAlmBindingResponse;\n}\n\nfunction renderLabel(props: LabelProps) {\n  const { help, helpParams, optional, id } = props;\n  return (\n    <label className=\"display-flex-center\" htmlFor={id}>\n      {translate('settings.pr_decoration.binding.form', id)}\n      {!optional && <MandatoryFieldMarker />}\n      {help && (\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={\n            <FormattedMessage\n              defaultMessage={translate('settings.pr_decoration.binding.form', id, 'help')}\n              id={`settings.pr_decoration.binding.form.${id}.help`}\n              values={helpParams}\n            />\n          }\n          placement=\"right\"\n        />\n      )}\n    </label>\n  );\n}\n\nfunction renderBooleanField(\n  props: Omit<CommonFieldProps, 'optional'> & {\n    value: boolean;\n    inputExtra?: React.ReactNode;\n  }\n) {\n  const { id, value, onFieldChange, propKey, inputExtra } = props;\n  return (\n    <div className=\"form-field\">\n      {renderLabel({ ...props, optional: true })}\n      <div className=\"display-flex-center\">\n        <InputForBoolean\n          isDefault={true}\n          name={id}\n          onChange={v => onFieldChange(propKey, v)}\n          value={value}\n        />\n        {inputExtra}\n      </div>\n    </div>\n  );\n}\n\nfunction renderField(\n  props: CommonFieldProps & {\n    value: string;\n  }\n) {\n  const { id, propKey, value, onFieldChange } = props;\n  return (\n    <div className=\"form-field\">\n      {renderLabel(props)}\n      <input\n        className=\"input-super-large\"\n        id={id}\n        maxLength={256}\n        name={id}\n        onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n        type=\"text\"\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default function AlmSpecificForm(props: AlmSpecificFormProps) {\n  const {\n    alm,\n    formData: { repository, slug, summaryCommentEnabled, monorepo },\n    monorepoEnabled\n  } = props;\n\n  let formFields: JSX.Element;\n\n  switch (alm) {\n    case AlmKeys.Azure:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            id: 'azure.project',\n            onFieldChange: props.onFieldChange,\n            propKey: 'slug',\n            value: slug || ''\n          })}\n          {renderField({\n            help: true,\n            id: 'azure.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.BitbucketServer:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            helpParams: {\n              example: (\n                <>\n                  {'.../projects/'}\n                  <strong>{'{KEY}'}</strong>\n                  {'/repos/{SLUG}/browse'}\n                </>\n              )\n            },\n            id: 'bitbucket.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n          {renderField({\n            help: true,\n            helpParams: {\n              example: (\n                <>\n                  {'.../projects/{KEY}/repos/'}\n                  <strong>{'{SLUG}'}</strong>\n                  {'/browse'}\n                </>\n              )\n            },\n            id: 'bitbucket.slug',\n            onFieldChange: props.onFieldChange,\n            propKey: 'slug',\n            value: slug || ''\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.BitbucketCloud:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            helpParams: {\n              example: (\n                <>\n                  {'https://bitbucket.org/{workspace}/'}\n                  <strong>{'{repository}'}</strong>\n                </>\n              )\n            },\n            id: 'bitbucketcloud.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.GitHub:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            helpParams: { example: 'SonarSource/sonarqube' },\n            id: 'github.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n          {renderBooleanField({\n            help: true,\n            id: 'github.summary_comment_setting',\n            onFieldChange: props.onFieldChange,\n            propKey: 'summaryCommentEnabled',\n            value: summaryCommentEnabled === undefined ? true : summaryCommentEnabled\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.GitLab:\n      formFields = (\n        <>\n          {renderField({\n            id: 'gitlab.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n        </>\n      );\n      break;\n  }\n\n  return (\n    <>\n      {formFields}\n      {monorepoEnabled &&\n        renderBooleanField({\n          help: true,\n          helpParams: {\n            doc_link: (\n              <Link to={ALM_DOCUMENTATION_PATHS[alm]} target=\"_blank\">\n                {translate('learn_more')}\n              </Link>\n            )\n          },\n          id: 'monorepo',\n          onFieldChange: props.onFieldChange,\n          propKey: 'monorepo',\n          value: monorepo,\n          inputExtra: monorepo && (\n            <Alert className=\"no-margin-bottom spacer-left\" variant=\"warning\" display=\"inline\">\n              {translate('settings.pr_decoration.binding.form.monorepo.warning')}\n            </Alert>\n          )\n        })}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmSettingsInstance, ProjectAlmBindingResponse } from '../../../../types/alm-settings';\nimport AlmSpecificForm from './AlmSpecificForm';\n\nexport interface PRDecorationBindingRendererProps {\n  formData: T.Omit<ProjectAlmBindingResponse, 'alm'>;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  onReset: () => void;\n  onSubmit: () => void;\n  saving: boolean;\n  success: boolean;\n  monorepoEnabled: boolean;\n}\n\nfunction optionRenderer(instance: AlmSettingsInstance) {\n  return instance.url ? (\n    <>\n      <span>{instance.key} — </span>\n      <span className=\"text-muted\">{instance.url}</span>\n    </>\n  ) : (\n    <span>{instance.key}</span>\n  );\n}\n\nexport default function PRDecorationBindingRenderer(props: PRDecorationBindingRendererProps) {\n  const {\n    formData,\n    instances,\n    isChanged,\n    isConfigured,\n    isValid,\n    loading,\n    saving,\n    success,\n    monorepoEnabled\n  } = props;\n\n  if (loading) {\n    return <DeferredSpinner />;\n  }\n\n  if (instances.length < 1) {\n    return (\n      <div>\n        <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.binding.no_bindings')}\n            id=\"settings.pr_decoration.binding.no_bindings\"\n            values={{\n              link: (\n                <Link to=\"/documentation/analysis/pull-request/#pr-decoration\">\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        </Alert>\n      </div>\n    );\n  }\n\n  const selected = formData.key && instances.find(i => i.key === formData.key);\n  const alm = selected && selected.alm;\n\n  return (\n    <div>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.binding.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.binding.description')}\n      </div>\n\n      <form\n        onSubmit={(event: React.SyntheticEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          props.onSubmit();\n        }}>\n        <MandatoryFieldsExplanation className=\"form-field\" />\n\n        <div className=\"form-field\">\n          <label htmlFor=\"name\">\n            {translate('settings.pr_decoration.binding.form.name')}\n            <MandatoryFieldMarker className=\"spacer-right\" />\n          </label>\n          <Select\n            autosize={true}\n            className=\"abs-width-400\"\n            clearable={false}\n            id=\"name\"\n            menuContainerStyle={{\n              maxWidth: '210%' /* Allow double the width of the select */,\n              width: 'auto'\n            }}\n            onChange={(instance: AlmSettingsInstance) => props.onFieldChange('key', instance.key)}\n            optionRenderer={optionRenderer}\n            options={instances}\n            searchable={false}\n            value={formData.key}\n            valueKey=\"key\"\n            valueRenderer={optionRenderer}\n          />\n        </div>\n\n        {alm && (\n          <AlmSpecificForm\n            alm={alm}\n            formData={formData}\n            onFieldChange={props.onFieldChange}\n            monorepoEnabled={monorepoEnabled}\n          />\n        )}\n\n        <div className=\"display-flex-center\">\n          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n          {isChanged && (\n            <SubmitButton className=\"spacer-right button-success\" disabled={saving || !isValid}>\n              <span data-test=\"project-settings__alm-save\">{translate('save')}</span>\n            </SubmitButton>\n          )}\n          {isConfigured && (\n            <Button className=\"spacer-right\" onClick={props.onReset}>\n              <span data-test=\"project-settings__alm-reset\">{translate('reset_verb')}</span>\n            </Button>\n          )}\n          {!saving && success && (\n            <span className=\"text-success\">\n              <AlertSuccessIcon className=\"spacer-right\" />\n              {translate('settings.state.saved')}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { HttpStatus } from 'sonar-ui-common/helpers/request';\nimport {\n  deleteProjectAlmBinding,\n  getAlmSettings,\n  getProjectAlmBinding,\n  setProjectAzureBinding,\n  setProjectBitbucketBinding,\n  setProjectBitbucketCloudBinding,\n  setProjectGithubBinding,\n  setProjectGitlabBinding\n} from '../../../../api/alm-settings';\nimport throwGlobalError from '../../../../app/utils/throwGlobalError';\nimport { getAppState, Store } from '../../../../store/rootReducer';\nimport {\n  AlmKeys,\n  AlmSettingsInstance,\n  ProjectAlmBindingResponse\n} from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\nimport PRDecorationBindingRenderer from './PRDecorationBindingRenderer';\n\ntype FormData = T.Omit<ProjectAlmBindingResponse, 'alm'>;\n\ninterface StateProps {\n  monorepoEnabled: boolean;\n}\n\ninterface Props {\n  component: T.Component;\n}\n\ninterface State {\n  formData: FormData;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  orignalData?: FormData;\n  saving: boolean;\n  success: boolean;\n}\n\nconst REQUIRED_FIELDS_BY_ALM: {\n  [almKey in AlmKeys]: Array<keyof T.Omit<FormData, 'key'>>;\n} = {\n  [AlmKeys.Azure]: ['repository', 'slug'],\n  [AlmKeys.BitbucketServer]: ['repository', 'slug'],\n  [AlmKeys.BitbucketCloud]: ['repository'],\n  [AlmKeys.GitHub]: ['repository'],\n  [AlmKeys.GitLab]: ['repository']\n};\n\nexport class PRDecorationBinding extends React.PureComponent<Props & StateProps, State> {\n  mounted = false;\n  state: State = {\n    formData: { key: '', monorepo: false },\n    instances: [],\n    isChanged: false,\n    isConfigured: false,\n    isValid: false,\n    loading: true,\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDefinitions();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDefinitions = () => {\n    const project = this.props.component.key;\n    return Promise.all([getAlmSettings(project), this.getProjectBinding(project)])\n      .then(([instances, originalData]) => {\n        if (this.mounted) {\n          this.setState(({ formData }) => {\n            const newFormData = originalData || formData;\n            return {\n              formData: newFormData,\n              instances: instances || [],\n              isChanged: false,\n              isConfigured: !!originalData,\n              isValid: this.validateForm(newFormData),\n              loading: false,\n              orignalData: newFormData\n            };\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  getProjectBinding(project: string): Promise<ProjectAlmBindingResponse | undefined> {\n    return getProjectAlmBinding(project).catch((response: Response) => {\n      if (response && response.status === HttpStatus.NotFound) {\n        return undefined;\n      }\n      return throwGlobalError(response);\n    });\n  }\n\n  catchError = () => {\n    if (this.mounted) {\n      this.setState({ saving: false });\n    }\n  };\n\n  handleReset = () => {\n    const { component } = this.props;\n    this.setState({ saving: true });\n    deleteProjectAlmBinding(component.key)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            formData: {\n              key: '',\n              repository: '',\n              slug: '',\n              monorepo: false\n            },\n            orignalData: undefined,\n            isChanged: false,\n            isConfigured: false,\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .catch(this.catchError);\n  };\n\n  submitProjectAlmBinding(\n    alm: AlmKeys,\n    key: string,\n    almSpecificFields?: T.Omit<FormData, 'key'>\n  ): Promise<void> {\n    const almSetting = key;\n    const project = this.props.component.key;\n    const repository = almSpecificFields?.repository;\n    const slug = almSpecificFields?.slug;\n    const monorepo = almSpecificFields?.monorepo ?? false;\n\n    if (!repository) {\n      return Promise.reject();\n    }\n\n    switch (alm) {\n      case AlmKeys.Azure: {\n        if (!slug) {\n          return Promise.reject();\n        }\n        return setProjectAzureBinding({\n          almSetting,\n          project,\n          projectName: slug,\n          repositoryName: repository,\n          monorepo\n        });\n      }\n      case AlmKeys.BitbucketServer: {\n        if (!slug) {\n          return Promise.reject();\n        }\n        return setProjectBitbucketBinding({\n          almSetting,\n          project,\n          repository,\n          slug,\n          monorepo\n        });\n      }\n      case AlmKeys.BitbucketCloud: {\n        return setProjectBitbucketCloudBinding({\n          almSetting,\n          project,\n          repository,\n          monorepo\n        });\n      }\n      case AlmKeys.GitHub: {\n        // By default it must remain true.\n        const summaryCommentEnabled = almSpecificFields?.summaryCommentEnabled ?? true;\n        return setProjectGithubBinding({\n          almSetting,\n          project,\n          repository,\n          summaryCommentEnabled,\n          monorepo\n        });\n      }\n\n      case AlmKeys.GitLab: {\n        return setProjectGitlabBinding({\n          almSetting,\n          project,\n          repository,\n          monorepo\n        });\n      }\n\n      default:\n        return Promise.reject();\n    }\n  }\n\n  handleSubmit = () => {\n    this.setState({ saving: true });\n    const {\n      formData: { key, ...additionalFields },\n      instances\n    } = this.state;\n\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return;\n    }\n\n    this.submitProjectAlmBinding(selected.alm, key, additionalFields)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .then(this.fetchDefinitions)\n      .catch(this.catchError);\n  };\n\n  isDataSame(\n    { key, repository = '', slug = '', summaryCommentEnabled = false, monorepo = false }: FormData,\n    {\n      key: oKey = '',\n      repository: oRepository = '',\n      slug: oSlug = '',\n      summaryCommentEnabled: osummaryCommentEnabled = false,\n      monorepo: omonorepo = false\n    }: FormData\n  ) {\n    return (\n      key === oKey &&\n      repository === oRepository &&\n      slug === oSlug &&\n      summaryCommentEnabled === osummaryCommentEnabled &&\n      monorepo === omonorepo\n    );\n  }\n\n  handleFieldChange = (id: keyof ProjectAlmBindingResponse, value: string | boolean) => {\n    this.setState(({ formData, orignalData }) => {\n      const newFormData = {\n        ...formData,\n        [id]: value\n      };\n\n      return {\n        formData: newFormData,\n        isValid: this.validateForm(newFormData),\n        isChanged: !this.isDataSame(newFormData, orignalData || { key: '', monorepo: false }),\n        success: false\n      };\n    });\n  };\n\n  validateForm = ({ key, ...additionalFields }: State['formData']) => {\n    const { instances } = this.state;\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return false;\n    }\n    return REQUIRED_FIELDS_BY_ALM[selected.alm].reduce(\n      (result: boolean, field) => result && Boolean(additionalFields[field]),\n      true\n    );\n  };\n\n  render() {\n    const { monorepoEnabled } = this.props;\n\n    return (\n      <PRDecorationBindingRenderer\n        onFieldChange={this.handleFieldChange}\n        onReset={this.handleReset}\n        onSubmit={this.handleSubmit}\n        monorepoEnabled={monorepoEnabled}\n        {...this.state}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  // This feature trigger will be replaced when SONAR-14349 is implemented\n  monorepoEnabled: [EditionKey.enterprise, EditionKey.datacenter].includes(\n    getAppState(state).edition as EditionKey\n  )\n});\n\nexport default connect(mapStateToProps)(PRDecorationBinding);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  ALM_INTEGRATION,\n  ANALYSIS_SCOPE_CATEGORY,\n  LANGUAGES_CATEGORY,\n  NEW_CODE_PERIOD_CATEGORY,\n  PULL_REQUEST_DECORATION_BINDING_CATEGORY\n} from './AdditionalCategoryKeys';\nimport AlmIntegration from './almIntegration/AlmIntegration';\nimport { AnalysisScope } from './AnalysisScope';\nimport Languages from './Languages';\nimport NewCodePeriod from './NewCodePeriod';\nimport PullRequestDecorationBinding from './pullRequestDecorationBinding/PRDecorationBinding';\n\nexport interface AdditionalCategoryComponentProps {\n  component: T.Component | undefined;\n  selectedCategory: string;\n}\n\nexport interface AdditionalCategory {\n  availableGlobally: boolean;\n  availableForProject: boolean;\n  displayTab: boolean;\n  key: string;\n  name: string;\n  renderComponent: (props: AdditionalCategoryComponentProps) => React.ReactNode;\n  requiresBranchesEnabled?: boolean;\n}\n\nexport const ADDITIONAL_CATEGORIES: AdditionalCategory[] = [\n  {\n    key: LANGUAGES_CATEGORY,\n    name: translate('property.category.languages'),\n    renderComponent: getLanguagesComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: true\n  },\n  {\n    key: NEW_CODE_PERIOD_CATEGORY,\n    name: translate('settings.new_code_period.category'),\n    renderComponent: getNewCodePeriodComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true\n  },\n  {\n    key: ANALYSIS_SCOPE_CATEGORY,\n    name: translate('property.category.exclusions'),\n    renderComponent: getAnalysisScopeComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: false\n  },\n  {\n    key: ALM_INTEGRATION,\n    name: translate('property.category.almintegration'),\n    renderComponent: getAlmIntegrationComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: false\n  },\n  {\n    key: PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n    name: translate('settings.pr_decoration.binding.category'),\n    renderComponent: getPullRequestDecorationBindingComponent,\n    availableGlobally: false,\n    availableForProject: true,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  }\n];\n\nfunction getLanguagesComponent(props: AdditionalCategoryComponentProps) {\n  return <Languages {...props} />;\n}\n\nfunction getNewCodePeriodComponent() {\n  return <NewCodePeriod />;\n}\n\nfunction getAnalysisScopeComponent(props: AdditionalCategoryComponentProps) {\n  return <AnalysisScope {...props} />;\n}\n\nfunction getAlmIntegrationComponent(props: AdditionalCategoryComponentProps) {\n  return <AlmIntegration {...props} />;\n}\n\nfunction getPullRequestDecorationBindingComponent(props: AdditionalCategoryComponentProps) {\n  return props.component && <PullRequestDecorationBinding component={props.component} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { IndexLink } from 'react-router';\nimport { getAppState, getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\nexport interface CategoriesListProps {\n  branchesEnabled?: boolean;\n  categories: string[];\n  component?: T.Component;\n  defaultCategory: string;\n  selectedCategory: string;\n}\n\nexport function CategoriesList(props: CategoriesListProps) {\n  const { branchesEnabled, categories, component, defaultCategory, selectedCategory } = props;\n  const pathname = component ? '/project/settings' : '/settings';\n\n  const categoriesWithName = categories\n    .filter(key => !CATEGORY_OVERRIDES[key.toLowerCase()])\n    .map(key => ({\n      key,\n      name: getCategoryName(key)\n    }))\n    .concat(\n      ADDITIONAL_CATEGORIES.filter(c => c.displayTab)\n        .filter(c =>\n          component\n            ? // Project settings\n              c.availableForProject\n            : // Global settings\n              c.availableGlobally\n        )\n        .filter(c => branchesEnabled || !c.requiresBranchesEnabled)\n    );\n  const sortedCategories = sortBy(categoriesWithName, category => category.name.toLowerCase());\n\n  return (\n    <ul className=\"side-tabs-menu\">\n      {sortedCategories.map(category => (\n        <li key={category.key}>\n          <IndexLink\n            className={classNames({\n              active: category.key.toLowerCase() === selectedCategory.toLowerCase()\n            })}\n            title={category.name}\n            to={{\n              pathname,\n              query: {\n                category: category.key !== defaultCategory ? category.key.toLowerCase() : undefined,\n                id: component && component.key\n              }\n            }}>\n            {category.name}\n          </IndexLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  categories: getSettingsAppAllCategories(state),\n  branchesEnabled: getAppState(state).branchesEnabled\n});\n\nexport default connect(mapStateToProps)(CategoriesList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\n\nexport interface PageHeaderProps {\n  component?: T.Component;\n}\n\nexport default function PageHeader({ component }: PageHeaderProps) {\n  const title = component ? translate('project_settings.page') : translate('settings.page');\n\n  const description = component ? (\n    translate('project_settings.page.description')\n  ) : (\n    <InstanceMessage message={translate('settings.page.description')} />\n  );\n\n  return (\n    <header className=\"top-bar-outer\">\n      <div className=\"top-bar\">\n        <div className=\"top-bar-inner bordered-bottom big-padded-top padded-bottom\">\n          <h1 className=\"page-title\">{title}</h1>\n          <div className=\"page-description spacer-top\">{description}</div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  addSideBarClass,\n  addWhitePageClass,\n  removeSideBarClass,\n  removeWhitePageClass\n} from 'sonar-ui-common/helpers/pages';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport ScreenPositionHelper from '../../../components/common/ScreenPositionHelper';\nimport { getSettingsAppDefaultCategory, Store } from '../../../store/rootReducer';\nimport { fetchSettings } from '../store/actions';\nimport '../styles.css';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport AllCategoriesList from './AllCategoriesList';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\nimport PageHeader from './PageHeader';\n\ninterface Props {\n  component?: T.Component;\n  defaultCategory: string;\n  fetchSettings(component?: string): Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport class App extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    addSideBarClass();\n    addWhitePageClass();\n    this.fetchSettings();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchSettings();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeSideBarClass();\n    removeWhitePageClass();\n  }\n\n  fetchSettings = () => {\n    const { component } = this.props;\n    this.props.fetchSettings(component && component.key).then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n\n    const { query } = this.props.location;\n    const originalCategory = (query.category as string) || this.props.defaultCategory;\n    const overriddenCategory = CATEGORY_OVERRIDES[originalCategory.toLowerCase()];\n    const selectedCategory = overriddenCategory || originalCategory;\n    const foundAdditionalCategory = find(ADDITIONAL_CATEGORIES, c => c.key === selectedCategory);\n    const isProjectSettings = this.props.component;\n    const shouldRenderAdditionalCategory =\n      foundAdditionalCategory &&\n      ((isProjectSettings && foundAdditionalCategory.availableForProject) ||\n        (!isProjectSettings && foundAdditionalCategory.availableGlobally));\n\n    return (\n      <div id=\"settings-page\">\n        <Suggestions suggestions=\"settings\" />\n        <Helmet defer={false} title={translate('settings.page')} />\n        <PageHeader component={this.props.component} />\n\n        <div className=\"layout-page\">\n          <ScreenPositionHelper className=\"layout-page-side-outer\">\n            {({ top }) => (\n              <div className=\"layout-page-side\" style={{ top }}>\n                <div className=\"layout-page-side-inner\">\n                  <AllCategoriesList\n                    component={this.props.component}\n                    defaultCategory={this.props.defaultCategory}\n                    selectedCategory={selectedCategory}\n                  />\n                </div>\n              </div>\n            )}\n          </ScreenPositionHelper>\n\n          <div className=\"layout-page-main\">\n            <div className=\"layout-page-main-inner\">\n              <div className=\"big-padded\">\n                {foundAdditionalCategory && shouldRenderAdditionalCategory ? (\n                  foundAdditionalCategory.renderComponent({\n                    component: this.props.component,\n                    selectedCategory: originalCategory\n                  })\n                ) : (\n                  <CategoryDefinitionsList\n                    category={selectedCategory}\n                    component={this.props.component}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  defaultCategory: getSettingsAppDefaultCategory(state)\n});\n\nconst mapDispatchToProps = { fetchSettings: fetchSettings as any };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n\nimport { sanitize } from 'dompurify';\n\nexport function sanitizeStringRestricted(html: string) {\n  return sanitize(html, {\n    ALLOWED_TAGS: ['b', 'br', 'code', 'i', 'li', 'p', 'strong', 'ul', 'a'],\n    ALLOWED_ATTR: ['target', 'href']\n  });\n}\n\nexport function sanitizeString(html: string) {\n  return sanitize(html, { USE_PROFILES: { html: true } });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\n\ninterface Props {\n  className?: string;\n  children: (position: { top: number; left: number }) => React.ReactElement<any>;\n}\n\nexport default class ScreenPositionHelper extends React.PureComponent<Props> {\n  container?: HTMLDivElement;\n  debouncedOnResize: () => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.debouncedOnResize = debounce(() => this.forceUpdate(), 250);\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n    window.addEventListener('resize', this.debouncedOnResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.debouncedOnResize);\n  }\n\n  getPosition = () => {\n    const containerPos = this.container && this.container.getBoundingClientRect();\n    if (!containerPos) {\n      return { top: 0, left: 0 };\n    }\n    return {\n      top: window.pageYOffset + containerPos.top,\n      left: window.pageXOffset + containerPos.left\n    };\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        ref={container => (this.container = container as HTMLDivElement)}>\n        {this.props.children(this.getPosition())}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omitBy } from 'lodash';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { isCategoryDefinition } from '../apps/settings/utils';\nimport { BranchParameters } from '../types/branch-like';\nimport { SettingCategoryDefinition, SettingDefinition, SettingValue } from '../types/settings';\n\nexport function getDefinitions(component?: string): Promise<SettingCategoryDefinition[]> {\n  return getJSON('/api/settings/list_definitions', { component }).then(\n    r => r.definitions,\n    throwGlobalError\n  );\n}\n\nexport function getValues(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<SettingValue[]> {\n  return getJSON('/api/settings/values', data).then(r => r.settings);\n}\n\nexport function setSettingValue(\n  definition: SettingDefinition,\n  value: any,\n  component?: string\n): Promise<void> {\n  const { key } = definition;\n  const data: RequestData = { key, component };\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    data.values = value;\n  } else if (definition.type === 'PROPERTY_SET') {\n    data.fieldValues = value\n      .map((fields: any) => omitBy(fields, value => value == null))\n      .map(JSON.stringify);\n  } else {\n    data.value = value;\n  }\n\n  return post('/api/settings/set', data);\n}\n\nexport function setSimpleSettingValue(\n  data: { component?: string; value: string; key: string } & BranchParameters\n): Promise<void | Response> {\n  return post('/api/settings/set', data).catch(throwGlobalError);\n}\n\nexport function resetSettingValue(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<void> {\n  return post('/api/settings/reset', data);\n}\n\nexport function sendTestEmail(to: string, subject: string, message: string): Promise<void> {\n  return post('/api/emails/send', { to, subject, message });\n}\n\nexport function checkSecretKey(): Promise<{ secretKeyAvailable: boolean }> {\n  return getJSON('/api/settings/check_secret_key').catch(throwGlobalError);\n}\n\nexport function generateSecretKey(): Promise<{ secretKey: string }> {\n  return postJSON('/api/settings/generate_secret_key').catch(throwGlobalError);\n}\n\nexport function encryptValue(value: string): Promise<{ encryptedValue: string }> {\n  return postJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { get, getJSON, HttpStatus, parseError, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBindingParams,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition,\n  BitbucketCloudProjectAlmBindingParams,\n  BitbucketProjectAlmBindingParams,\n  GithubBindingDefinition,\n  GithubProjectAlmBindingParams,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBindingParams,\n  ProjectAlmBindingResponse\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions');\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getAlmSettingsNoCatch(project).catch(throwGlobalError);\n}\n\nexport function getAlmSettingsNoCatch(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project }).then(({ almSettings }) => almSettings);\n}\n\nexport function validateAlmSettings(key: string): Promise<string> {\n  return get('/api/alm_settings/validate', { key })\n    .then(() => {\n      return '';\n    })\n    .catch((response: Response) => {\n      if (response.status === HttpStatus.BadRequest) {\n        return parseError(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    });\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketCloudConfiguration(data: BitbucketCloudBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketCloudConfiguration(\n  data: BitbucketCloudBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBindingResponse> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketCloudBinding(data: BitbucketCloudProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucketcloud_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  referenceBranch,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  referenceBranch?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'REFERENCE_BRANCH':\n      return referenceBranch;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  overrideGeneralSetting?: boolean;\n  referenceBranch?: string;\n  selected?: T.NewCodePeriodSettingType;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    overrideGeneralSetting,\n    referenceBranch = '',\n    selected\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue) ||\n      (selected === 'REFERENCE_BRANCH' && referenceBranch !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days)) ||\n    (selected === 'REFERENCE_BRANCH' && referenceBranch.length > 0);\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <>\n            <MandatoryFieldsExplanation />\n\n            <ValidationInput\n              error={undefined}\n              id=\"baseline_number_of_days\"\n              isInvalid={isChanged && !isValid}\n              isValid={isChanged && isValid}\n              label={translate('baseline.specify_days')}\n              required={true}>\n              <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n            </ValidationInput>\n          </>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n"],"sourceRoot":""}