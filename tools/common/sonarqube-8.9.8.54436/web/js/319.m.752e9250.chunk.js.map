{"version":3,"sources":["webpack:///./src/main/js/app/components/PluginRiskConsent.css?57b0","webpack:///./src/main/js/app/components/PluginRiskConsent.css","webpack:///./src/main/js/app/components/PluginRiskConsent.tsx","webpack:///./node_modules/lodash/pickBy.js","webpack:///./node_modules/lodash/omitBy.js","webpack:///./node_modules/lodash/negate.js","webpack:///./src/main/js/api/settings.ts","webpack:///./src/main/js/types/plugins.ts","webpack:///./src/main/js/types/settings.ts","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","PluginRiskConsent","props","router","currentUser","Admin","replace","className","onClick","async","key","value","Accepted","window","location","href","_","arrayMap","baseIteratee","basePickBy","getAllKeysIn","object","predicate","prop","path","negate","pickBy","TypeError","args","arguments","length","call","this","apply","getDefinitions","component","then","r","definitions","getValues","data","settings","setSettingValue","definition","multiValues","values","type","fieldValues","map","fields","JSON","stringify","setSimpleSettingValue","catch","resetSettingValue","sendTestEmail","to","subject","message","checkSecretKey","generateSecretKey","encryptValue","PluginType","RiskConsent","isAvailablePlugin","plugin","undefined","release","isInstalledPlugin","version","isPendingPlugin","updatedAt","SettingsKey","whenLoggedIn","WrappedComponent","Wrapper","displayName"],"mappings":"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","file":"js/319.m.752e9250.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./PluginRiskConsent.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".plugin-risk-consent-page{padding-top:10vh}.plugin-risk-consent-page h1{line-height:1.5;font-size:24px;font-weight:300;text-align:center}.plugin-risk-consent-content{min-width:500px;width:40%;margin:0 auto}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { setSimpleSettingValue } from '../../api/settings';\nimport { whenLoggedIn } from '../../components/hoc/whenLoggedIn';\nimport { Router, withRouter } from '../../components/hoc/withRouter';\nimport { hasGlobalPermission } from '../../helpers/users';\nimport { Permissions } from '../../types/permissions';\nimport { RiskConsent } from '../../types/plugins';\nimport { SettingsKey } from '../../types/settings';\nimport GlobalMessagesContainer from './GlobalMessagesContainer';\nimport './PluginRiskConsent.css';\n\nexport interface PluginRiskConsentProps {\n  currentUser: T.LoggedInUser;\n  router: Router;\n}\n\nexport function PluginRiskConsent(props: PluginRiskConsentProps) {\n  const { router, currentUser } = props;\n\n  if (!hasGlobalPermission(currentUser, Permissions.Admin)) {\n    router.replace('/');\n    return null;\n  }\n\n  const acknowledgeRisk = async () => {\n    try {\n      await setSimpleSettingValue({\n        key: SettingsKey.PluginRiskConsent,\n        value: RiskConsent.Accepted\n      });\n\n      window.location.href = `/`; // force a refresh for the backend\n    } catch (_) {\n      /* Do nothing */\n    }\n  };\n\n  return (\n    <div className=\"plugin-risk-consent-page\">\n      <GlobalMessagesContainer />\n\n      <div className=\"plugin-risk-consent-content boxed-group\">\n        <div className=\"boxed-group-inner text-center\">\n          <h1 className=\"big-spacer-bottom\">{translate('plugin_risk_consent.title')}</h1>\n          <p className=\"big big-spacer-bottom\">{translate('plugin_risk_consent.description')}</p>\n          <p className=\"big huge-spacer-bottom\">{translate('plugin_risk_consent.description2')}</p>\n\n          <Button className=\"big-spacer-bottom\" onClick={acknowledgeRisk}>\n            {translate('plugin_risk_consent.action')}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default whenLoggedIn(withRouter(PluginRiskConsent));\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omitBy } from 'lodash';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { isCategoryDefinition } from '../apps/settings/utils';\nimport { BranchParameters } from '../types/branch-like';\nimport { SettingCategoryDefinition, SettingDefinition, SettingValue } from '../types/settings';\n\nexport function getDefinitions(component?: string): Promise<SettingCategoryDefinition[]> {\n  return getJSON('/api/settings/list_definitions', { component }).then(\n    r => r.definitions,\n    throwGlobalError\n  );\n}\n\nexport function getValues(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<SettingValue[]> {\n  return getJSON('/api/settings/values', data).then(r => r.settings);\n}\n\nexport function setSettingValue(\n  definition: SettingDefinition,\n  value: any,\n  component?: string\n): Promise<void> {\n  const { key } = definition;\n  const data: RequestData = { key, component };\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    data.values = value;\n  } else if (definition.type === 'PROPERTY_SET') {\n    data.fieldValues = value\n      .map((fields: any) => omitBy(fields, value => value == null))\n      .map(JSON.stringify);\n  } else {\n    data.value = value;\n  }\n\n  return post('/api/settings/set', data);\n}\n\nexport function setSimpleSettingValue(\n  data: { component?: string; value: string; key: string } & BranchParameters\n): Promise<void | Response> {\n  return post('/api/settings/set', data).catch(throwGlobalError);\n}\n\nexport function resetSettingValue(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<void> {\n  return post('/api/settings/reset', data);\n}\n\nexport function sendTestEmail(to: string, subject: string, message: string): Promise<void> {\n  return post('/api/emails/send', { to, subject, message });\n}\n\nexport function checkSecretKey(): Promise<{ secretKeyAvailable: boolean }> {\n  return getJSON('/api/settings/check_secret_key').catch(throwGlobalError);\n}\n\nexport function generateSecretKey(): Promise<{ secretKey: string }> {\n  return postJSON('/api/settings/generate_secret_key').catch(throwGlobalError);\n}\n\nexport function encryptValue(value: string): Promise<{ encryptedValue: string }> {\n  return postJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport interface Plugin {\n  key: string;\n  name: string;\n  category?: string;\n  description?: string;\n  editionBundled?: boolean;\n  license?: string;\n  organizationName?: string;\n  homepageUrl?: string;\n  organizationUrl?: string;\n  issueTrackerUrl?: string;\n  termsAndConditionsUrl?: string;\n}\n\nexport interface PendingPluginResult {\n  installing: PendingPlugin[];\n  updating: PendingPlugin[];\n  removing: PendingPlugin[];\n}\n\nexport interface AvailablePlugin extends Plugin {\n  release: Release;\n  update: Update;\n}\n\nexport interface PendingPlugin extends Plugin {\n  version: string;\n  implementationBuild: string;\n}\n\nexport interface InstalledPlugin extends PendingPlugin {\n  documentationPath?: string;\n  issueTrackerUrl?: string;\n  filename: string;\n  hash: string;\n  sonarLintSupported: boolean;\n  updatedAt: number;\n  updates?: Update[];\n}\n\nexport interface Release {\n  version: string;\n  date: string;\n  description?: string;\n  changeLogUrl?: string;\n}\n\nexport interface Update {\n  status: string;\n  release?: Release;\n  requires: Plugin[];\n  previousUpdates?: Update[];\n}\n\nexport enum PluginType {\n  Bundled = 'BUNDLED',\n  External = 'EXTERNAL'\n}\n\nexport enum RiskConsent {\n  Accepted = 'ACCEPTED',\n  NotAccepted = 'NOT_ACCEPTED',\n  Required = 'REQUIRED'\n}\n\nexport function isAvailablePlugin(plugin: Plugin): plugin is AvailablePlugin {\n  return (plugin as any).release !== undefined;\n}\n\nexport function isInstalledPlugin(plugin: Plugin): plugin is InstalledPlugin {\n  return isPendingPlugin(plugin) && (plugin as any).updatedAt !== undefined;\n}\n\nexport function isPendingPlugin(plugin: Plugin): plugin is PendingPlugin {\n  return (plugin as any).version !== undefined;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const enum SettingsKey {\n  DaysBeforeDeletingInactiveBranchesAndPRs = 'sonar.dbcleaner.daysBeforeDeletingInactiveBranchesAndPRs',\n  DefaultProjectVisibility = 'projects.default.visibility',\n  ServerBaseUrl = 'sonar.core.serverBaseURL',\n  PluginRiskConsent = 'sonar.plugins.risk.consent'\n}\n\nexport type Setting = SettingValue & { definition: SettingDefinition };\n\nexport type SettingType =\n  | 'STRING'\n  | 'TEXT'\n  | 'JSON'\n  | 'PASSWORD'\n  | 'BOOLEAN'\n  | 'FLOAT'\n  | 'INTEGER'\n  | 'LICENSE'\n  | 'LONG'\n  | 'SINGLE_SELECT_LIST'\n  | 'PROPERTY_SET';\n\nexport interface SettingDefinition {\n  description?: string;\n  key: string;\n  multiValues?: boolean;\n  name?: string;\n  options: string[];\n  type?: SettingType;\n}\n\nexport interface SettingFieldDefinition extends SettingDefinition {\n  description: string;\n  name: string;\n}\n\nexport interface SettingCategoryDefinition extends SettingDefinition {\n  category: string;\n  defaultValue?: string;\n  deprecatedKey?: string;\n  fields: SettingFieldDefinition[];\n  multiValues?: boolean;\n  subCategory: string;\n}\n\nexport interface SettingValue {\n  fieldValues?: Array<T.Dict<string>>;\n  inherited?: boolean;\n  key: string;\n  parentFieldValues?: Array<T.Dict<string>>;\n  parentValue?: string;\n  parentValues?: string[];\n  value?: string;\n  values?: string[];\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n"],"sourceRoot":""}