{"version":3,"sources":["webpack:///./src/main/js/apps/groups/components/DeleteForm.tsx","webpack:///./src/main/js/apps/groups/components/Form.tsx","webpack:///./src/main/js/apps/groups/components/Header.tsx","webpack:///./src/main/js/apps/groups/components/EditMembersModal.tsx","webpack:///./src/main/js/apps/groups/components/EditMembers.tsx","webpack:///./src/main/js/apps/groups/components/ListItem.tsx","webpack:///./src/main/js/apps/groups/components/List.tsx","webpack:///./src/main/js/apps/groups/components/App.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/api/user_groups.ts"],"names":["DeleteForm","group","onClose","onSubmit","header","onCloseClick","onFormSubmit","submitting","className","name","loading","disabled","onClick","props","super","handleSubmit","this","description","state","then","handleDescriptionChange","event","setState","currentTarget","value","handleNameChange","size","htmlFor","autoFocus","id","maxLength","onChange","required","type","confirmButtonText","mounted","createModal","handleCreateClick","handleClose","data","onCreate","fetchUsers","searchParams","p","page","ps","pageSize","q","query","undefined","selected","filter","prevState","more","users","newSelectedUsers","user","map","login","selectedUsers","needToReload","lastSearchParams","usersTotalCount","total","handleSelect","handleUnselect","renderElement","modalHeader","contentLabel","onRequestClose","elements","elementsTotalCount","SelectList","All","onSearch","onSelect","onUnselect","selectedElements","withPaging","modal","handleMembersClick","handleModalClose","onEdit","title","ListItem","default","membersCount","onEditMembers","ActionsDropdown","destructive","onDelete","List","colSpan","showAnyone","key","groups","toLowerCase","makeFetchGroupsRequest","stopLoading","fetchGroups","async","paging","fetchMoreGroups","currentPaging","pageIndex","existingGroups","search","refresh","closeDeleteForm","groupToBeDeleted","closeEditForm","editedGroup","openDeleteForm","openEditForm","handleCreate","handleDelete","handleEdit","includes","Suggestions","suggestions","defer","minLength","placeholder","count","length","loadMore","ready","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","searchUsersGroups","catch","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","r","updateGroup","deleteGroup"],"mappings":"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","file":"js/350.m.5e8922a8.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  group: T.Group;\n  onClose: () => void;\n  onSubmit: () => Promise<void>;\n}\n\nexport default function DeleteForm({ group, onClose, onSubmit }: Props) {\n  const header = translate('groups.delete_group');\n\n  return (\n    <SimpleModal header={header} onClose={onClose} onSubmit={onSubmit}>\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form onSubmit={onFormSubmit}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n          </header>\n\n          <div className=\"modal-body\">\n            {translateWithParameters('groups.delete_group.confirmation', group.name)}\n          </div>\n\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton className=\"button-red\" disabled={submitting}>\n              {translate('delete')}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  confirmButtonText: string;\n  group?: T.Group;\n  header: string;\n  onClose: () => void;\n  onSubmit: (data: { description: string; name: string }) => Promise<void>;\n}\n\ninterface State {\n  description: string;\n  name: string;\n}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      description: (props.group && props.group.description) || '',\n      name: (props.group && props.group.name) || ''\n    };\n  }\n\n  handleSubmit = () => {\n    return this.props\n      .onSubmit({ description: this.state.description, name: this.state.name })\n      .then(this.props.onClose);\n  };\n\n  handleDescriptionChange = (event: React.SyntheticEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.currentTarget.value });\n  };\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <SimpleModal\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onSubmit={this.handleSubmit}\n        size=\"small\">\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{this.props.header}</h2>\n            </header>\n\n            <div className=\"modal-body\">\n              <MandatoryFieldsExplanation className=\"modal-field\" />\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-group-name\">\n                  {translate('name')}\n                  <MandatoryFieldMarker />\n                </label>\n                <input\n                  autoFocus={true}\n                  id=\"create-group-name\"\n                  maxLength={255}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  size={50}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-group-description\">{translate('description')}</label>\n                <textarea\n                  id=\"create-group-description\"\n                  name=\"description\"\n                  onChange={this.handleDescriptionChange}\n                  value={this.state.description}\n                />\n              </div>\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton disabled={submitting}>{this.props.confirmButtonText}</SubmitButton>\n              <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Form from './Form';\n\ninterface Props {\n  onCreate: (data: { description: string; name: string }) => Promise<void>;\n}\n\ninterface State {\n  createModal: boolean;\n}\n\nexport default class Header extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { createModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCreateClick = () => {\n    this.setState({ createModal: true });\n  };\n\n  handleClose = () => {\n    if (this.mounted) {\n      this.setState({ createModal: false });\n    }\n  };\n\n  handleSubmit = (data: { name: string; description: string }) => {\n    return this.props.onCreate(data);\n  };\n\n  render() {\n    return (\n      <>\n        <header className=\"page-header\" id=\"groups-header\">\n          <h1 className=\"page-title\">{translate('user_groups.page')}</h1>\n\n          <div className=\"page-actions\">\n            <Button id=\"groups-create\" onClick={this.handleCreateClick}>\n              {translate('groups.create_group')}\n            </Button>\n          </div>\n\n          <p className=\"page-description\">{translate('user_groups.page.description')}</p>\n        </header>\n        {this.state.createModal && (\n          <Form\n            confirmButtonText={translate('create')}\n            header={translate('groups.create_group')}\n            onClose={this.handleClose}\n            onSubmit={this.handleSubmit}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, without } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport SelectList, {\n  SelectListFilter,\n  SelectListSearchParams\n} from 'sonar-ui-common/components/controls/SelectList';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addUserToGroup, getUsersInGroup, removeUserFromGroup } from '../../../api/user_groups';\n\ninterface Props {\n  group: T.Group;\n  onClose: () => void;\n}\n\ninterface State {\n  lastSearchParams?: SelectListSearchParams;\n  needToReload: boolean;\n  users: T.UserSelected[];\n  usersTotalCount?: number;\n  selectedUsers: string[];\n}\n\nexport default class EditMembersModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      needToReload: false,\n      users: [],\n      selectedUsers: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchUsers = (searchParams: SelectListSearchParams) =>\n    getUsersInGroup({\n      name: this.props.group.name,\n      p: searchParams.page,\n      ps: searchParams.pageSize,\n      q: searchParams.query !== '' ? searchParams.query : undefined,\n      selected: searchParams.filter\n    }).then(data => {\n      if (this.mounted) {\n        this.setState(prevState => {\n          const more = searchParams.page != null && searchParams.page > 1;\n\n          const users = more ? [...prevState.users, ...data.users] : data.users;\n          const newSelectedUsers = data.users.filter(user => user.selected).map(user => user.login);\n          const selectedUsers = more\n            ? [...prevState.selectedUsers, ...newSelectedUsers]\n            : newSelectedUsers;\n\n          return {\n            needToReload: false,\n            lastSearchParams: searchParams,\n            loading: false,\n            users,\n            usersTotalCount: data.total,\n            selectedUsers\n          };\n        });\n      }\n    });\n\n  handleSelect = (login: string) =>\n    addUserToGroup({\n      name: this.props.group.name,\n      login\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedUsers: [...state.selectedUsers, login]\n        }));\n      }\n    });\n\n  handleUnselect = (login: string) =>\n    removeUserFromGroup({\n      name: this.props.group.name,\n      login\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedUsers: without(state.selectedUsers, login)\n        }));\n      }\n    });\n\n  renderElement = (login: string): React.ReactNode => {\n    const user = find(this.state.users, { login });\n    return (\n      <div className=\"select-list-list-item\">\n        {user === undefined ? (\n          login\n        ) : (\n          <>\n            {user.name}\n            <br />\n            <span className=\"note\">{user.login}</span>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const modalHeader = translate('users.update');\n    return (\n      <Modal contentLabel={modalHeader} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{modalHeader}</h2>\n        </header>\n\n        <div className=\"modal-body modal-container\">\n          <SelectList\n            elements={this.state.users.map(user => user.login)}\n            elementsTotalCount={this.state.usersTotalCount}\n            needToReload={\n              this.state.needToReload &&\n              this.state.lastSearchParams &&\n              this.state.lastSearchParams.filter !== SelectListFilter.All\n            }\n            onSearch={this.fetchUsers}\n            onSelect={this.handleSelect}\n            onUnselect={this.handleUnselect}\n            renderElement={this.renderElement}\n            selectedElements={this.state.selectedUsers}\n            withPaging={true}\n          />\n        </div>\n\n        <footer className=\"modal-foot\">\n          <ResetButtonLink onClick={this.props.onClose}>{translate('Done')}</ResetButtonLink>\n        </footer>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonIcon } from 'sonar-ui-common/components/controls/buttons';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport EditMembersModal from './EditMembersModal';\n\ninterface Props {\n  group: T.Group;\n  onEdit: () => void;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class EditMembers extends React.PureComponent<Props, State> {\n  container?: HTMLElement | null;\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleMembersClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleModalClose = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n      this.props.onEdit();\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <ButtonIcon\n          aria-label={translate('groups.users.edit')}\n          className=\"button-small\"\n          onClick={this.handleMembersClick}\n          title={translate('groups.users.edit')}>\n          <BulletListIcon />\n        </ButtonIcon>\n        {this.state.modal && (\n          <EditMembersModal group={this.props.group} onClose={this.handleModalClose} />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport EditMembers from './EditMembers';\n\nexport interface ListItemProps {\n  group: T.Group;\n  onDelete: (group: T.Group) => void;\n  onEdit: (group: T.Group) => void;\n  onEditMembers: () => void;\n}\n\nexport default function ListItem(props: ListItemProps) {\n  const { group } = props;\n\n  return (\n    <tr data-id={group.name}>\n      <td className=\"width-20\">\n        <strong className=\"js-group-name\">{group.name}</strong>\n        {group.default && <span className=\"little-spacer-left\">({translate('default')})</span>}\n      </td>\n\n      <td className=\"thin text-middle text-right little-padded-right\">{group.membersCount}</td>\n      <td className=\"little-padded-left\">\n        {!group.default && <EditMembers group={group} onEdit={props.onEditMembers} />}\n      </td>\n\n      <td className=\"width-40\">\n        <span className=\"js-group-description\">{group.description}</span>\n      </td>\n\n      <td className=\"thin nowrap text-right\">\n        {!group.default && (\n          <ActionsDropdown>\n            <ActionsDropdownItem className=\"js-group-update\" onClick={() => props.onEdit(group)}>\n              {translate('update_details')}\n            </ActionsDropdownItem>\n            <ActionsDropdownDivider />\n            <ActionsDropdownItem\n              className=\"js-group-delete\"\n              destructive={true}\n              onClick={() => props.onDelete(group)}>\n              {translate('delete')}\n            </ActionsDropdownItem>\n          </ActionsDropdown>\n        )}\n      </td>\n    </tr>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport ListItem from './ListItem';\n\ninterface Props {\n  groups: T.Group[];\n  onDelete: (group: T.Group) => void;\n  onEdit: (group: T.Group) => void;\n  onEditMembers: () => void;\n  showAnyone: boolean;\n}\n\nexport default function List(props: Props) {\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className=\"data zebra zebra-hover\" id=\"groups-list\">\n        <thead>\n          <tr>\n            <th />\n            <th className=\"nowrap width-10\" colSpan={2}>\n              {translate('members')}\n            </th>\n            <th className=\"nowrap\">{translate('description')}</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {props.showAnyone && (\n            <tr className=\"js-anyone\" key=\"anyone\">\n              <td className=\"width-20\">\n                <strong className=\"js-group-name\">{translate('groups.anyone')}</strong>\n              </td>\n              <td className=\"width-10\" colSpan={2} />\n              <td className=\"width-40\" colSpan={2}>\n                <span className=\"js-group-description\">\n                  {translate('user_groups.anyone.description')}\n                </span>\n              </td>\n            </tr>\n          )}\n\n          {sortBy(props.groups, group => group.name.toLowerCase()).map(group => (\n            <ListItem\n              group={group}\n              key={group.name}\n              onDelete={props.onDelete}\n              onEdit={props.onEdit}\n              onEditMembers={props.onEditMembers}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { omitNil } from 'sonar-ui-common/helpers/request';\nimport { createGroup, deleteGroup, searchUsersGroups, updateGroup } from '../../../api/user_groups';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport DeleteForm from './DeleteForm';\nimport Form from './Form';\nimport Header from './Header';\nimport List from './List';\n\ninterface State {\n  groups?: T.Group[];\n  editedGroup?: T.Group;\n  groupToBeDeleted?: T.Group;\n  loading: boolean;\n  paging?: T.Paging;\n  query: string;\n}\n\nexport default class App extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { loading: true, query: '' };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchGroups();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  makeFetchGroupsRequest = (data?: { p?: number; q?: string }) => {\n    this.setState({ loading: true });\n    return searchUsersGroups({\n      q: this.state.query,\n      ...data\n    });\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  fetchGroups = async (data?: { p?: number; q?: string }) => {\n    try {\n      const { groups, paging } = await this.makeFetchGroupsRequest(data);\n      if (this.mounted) {\n        this.setState({ groups, loading: false, paging });\n      }\n    } catch {\n      this.stopLoading();\n    }\n  };\n\n  fetchMoreGroups = async () => {\n    const { paging: currentPaging } = this.state;\n    if (currentPaging && currentPaging.total > currentPaging.pageIndex * currentPaging.pageSize) {\n      try {\n        const { groups, paging } = await this.makeFetchGroupsRequest({\n          p: currentPaging.pageIndex + 1\n        });\n        if (this.mounted) {\n          this.setState(({ groups: existingGroups = [] }) => ({\n            groups: [...existingGroups, ...groups],\n            loading: false,\n            paging\n          }));\n        }\n      } catch {\n        this.stopLoading();\n      }\n    }\n  };\n\n  search = (query: string) => {\n    this.fetchGroups({ q: query });\n    this.setState({ query });\n  };\n\n  refresh = async () => {\n    const { paging, query } = this.state;\n\n    await this.fetchGroups({ q: query });\n\n    // reload all pages in order\n    if (paging && paging.pageIndex > 1) {\n      for (let p = 1; p < paging.pageIndex; p++) {\n        // eslint-disable-next-line no-await-in-loop\n        await this.fetchMoreGroups(); // This is a intentional promise chain\n      }\n    }\n  };\n\n  closeDeleteForm = () => {\n    this.setState({ groupToBeDeleted: undefined });\n  };\n\n  closeEditForm = () => {\n    this.setState({ editedGroup: undefined });\n  };\n\n  openDeleteForm = (group: T.Group) => {\n    this.setState({ groupToBeDeleted: group });\n  };\n\n  openEditForm = (group: T.Group) => {\n    this.setState({ editedGroup: group });\n  };\n\n  handleCreate = async (data: { description: string; name: string }) => {\n    await createGroup({ ...data });\n\n    await this.refresh();\n  };\n\n  handleDelete = async () => {\n    const { groupToBeDeleted } = this.state;\n\n    if (!groupToBeDeleted) {\n      return;\n    }\n\n    await deleteGroup({ name: groupToBeDeleted.name });\n\n    await this.refresh();\n\n    if (this.mounted) {\n      this.setState({ groupToBeDeleted: undefined });\n    }\n  };\n\n  handleEdit = async ({ name, description }: { name?: string; description: string }) => {\n    const { editedGroup } = this.state;\n\n    if (!editedGroup) {\n      return;\n    }\n\n    const data = {\n      description,\n      id: editedGroup.id,\n      // pass `name` only if it has changed, otherwise the WS fails\n      ...omitNil({ name: name !== editedGroup.name ? name : undefined })\n    };\n\n    await updateGroup(data);\n\n    if (this.mounted) {\n      this.setState(({ groups = [] }: State) => ({\n        editedGroup: undefined,\n        groups: groups.map(group =>\n          group.name === editedGroup.name ? { ...group, ...data } : group\n        )\n      }));\n    }\n  };\n\n  render() {\n    const { editedGroup, groupToBeDeleted, groups, loading, paging, query } = this.state;\n\n    const showAnyone = 'anyone'.includes(query.toLowerCase());\n\n    return (\n      <>\n        <Suggestions suggestions=\"user_groups\" />\n        <Helmet defer={false} title={translate('user_groups.page')} />\n        <div className=\"page page-limited\" id=\"groups-page\">\n          <Header onCreate={this.handleCreate} />\n\n          <SearchBox\n            className=\"big-spacer-bottom\"\n            id=\"groups-search\"\n            minLength={2}\n            onChange={this.search}\n            placeholder={translate('search.search_by_name')}\n            value={query}\n          />\n\n          {groups !== undefined && (\n            <List\n              groups={groups}\n              onDelete={this.openDeleteForm}\n              onEdit={this.openEditForm}\n              onEditMembers={this.refresh}\n              showAnyone={showAnyone}\n            />\n          )}\n\n          {groups !== undefined && paging !== undefined && (\n            <div id=\"groups-list-footer\">\n              <ListFooter\n                count={showAnyone ? groups.length + 1 : groups.length}\n                loading={loading}\n                loadMore={this.fetchMoreGroups}\n                ready={!loading}\n                total={showAnyone ? paging.total + 1 : paging.total}\n              />\n            </div>\n          )}\n\n          {groupToBeDeleted && (\n            <DeleteForm\n              group={groupToBeDeleted}\n              onClose={this.closeDeleteForm}\n              onSubmit={this.handleDelete}\n            />\n          )}\n\n          {editedGroup && (\n            <Form\n              confirmButtonText={translate('update_verb')}\n              group={editedGroup}\n              header={translate('groups.update_group')}\n              onClose={this.closeEditForm}\n              onSubmit={this.handleEdit}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: T.Group[]; paging: T.Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<T.Paging & { users: T.UserSelected[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: { id?: string; name?: string; login?: string }) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: { id?: string; name?: string; login?: string }) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: { description?: string; name: string }): Promise<T.Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}