{"version":3,"sources":["webpack:///./src/main/js/app/components/search/SearchShowMore.tsx","webpack:///./src/main/js/app/components/search/SearchResults.tsx"],"names":["handleMoreClick","event","preventDefault","stopPropagation","currentTarget","blur","qualifier","dataset","this","props","onMoreClick","handleMoreMouseEnter","onSelect","loadingMore","selected","className","active","key","loading","allowMore","href","onClick","onMouseEnter","defaultMessage","id","values","SearchResults","qualifiers","Object","keys","results","renderedComponents","forEach","components","length","push","component","renderResult","more","undefined","renderNoResults"],"mappings":"mMAkCe,MAAM,UAAuB,gBAA5C,c,oBACE,KAAAA,gBAAmBC,IACjBA,EAAMC,iBACND,EAAME,kBACNF,EAAMG,cAAcC,OACpB,MAAM,UAAEC,GAAcL,EAAMG,cAAcG,QACtCD,GACFE,KAAKC,MAAMC,YAAYJ,IAI3B,KAAAK,qBAAwBV,IACtB,MAAM,UAAEK,GAAcL,EAAMG,cAAcG,QACtCD,GACFE,KAAKC,MAAMG,SAAX,sBAAmCN,KAIvC,SACE,MAAM,YAAEO,EAAF,UAAeP,EAAf,SAA0BQ,GAAaN,KAAKC,MAElD,OACE,sBAAIM,UAAW,EAAW,cAAe,CAAEC,OAAQF,IAAaG,IAAG,eAAUX,IAC3E,gBAAC,IAAe,CAACS,UAAU,qBAAqBG,QAASL,IAAgBP,GACvE,qBACES,UAAW,EAAW,CAAE,sBAAuBP,KAAKC,MAAMU,YAAY,iBACtDb,EAChBc,KAAK,IACLC,QAASb,KAAKR,gBACdsB,aAAcd,KAAKG,sBACnB,uBAAKI,UAAU,4CACb,gBAAC,mBAAgB,CACfQ,eAAgB,oBAAU,yBAC1BC,GAAG,wBACHC,OAAQ,CACNR,IAAK,wBAAMF,UAAU,yCAAuC,aAIlE,4BAAO,oBAAU,kB,cCrCd,SAASW,EAAcjB,GACpC,MAAMkB,EAAaC,OAAOC,KAAKpB,EAAMqB,SAC/BC,EAAwC,GAmC9C,OAjCA,YAAeJ,GAAYK,QAAQ1B,IACjC,MAAM2B,EAAaxB,EAAMqB,QAAQxB,GAE7B2B,EAAWC,OAAS,GAAKH,EAAmBG,OAAS,GACvDH,EAAmBI,KAAK,sBAAIpB,UAAU,UAAUE,IAAG,kBAAaX,MAG9D2B,EAAWC,OAAS,GACtBH,EAAmBI,KACjB,sBAAIpB,UAAU,cAAcE,IAAG,iBAAYX,IACxC,oBAAU,aAAcA,KAK/B2B,EAAWD,QAAQI,GAAaL,EAAmBI,KAAK1B,EAAM4B,aAAaD,KAE3E,MAAME,EAAO7B,EAAM6B,KAAKhC,QACXiC,IAATD,GAAsBA,EAAO,GAC/BP,EAAmBI,KACjB,gBAAC,EAAc,CACbhB,UAAWV,EAAMU,UACjBF,IAAG,eAAUX,GACbO,YAAaJ,EAAMI,YACnBH,YAAaD,EAAMC,YACnBE,SAAUH,EAAMG,SAChBN,UAAWA,EACXQ,SAAUL,EAAMK,WAAN,sBAAkCR,QAM7CyB,EAAmBG,OAAS,EACjC,sBAAInB,UAAU,QAAQgB,GAEtBtB,EAAM+B","file":"js/363.m.b85826f1.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  allowMore: boolean;\n  loadingMore?: string;\n  onMoreClick: (qualifier: string) => void;\n  onSelect: (qualifier: string) => void;\n  qualifier: string;\n  selected: boolean;\n}\n\nexport default class SearchShowMore extends React.PureComponent<Props> {\n  handleMoreClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    event.currentTarget.blur();\n    const { qualifier } = event.currentTarget.dataset;\n    if (qualifier) {\n      this.props.onMoreClick(qualifier);\n    }\n  };\n\n  handleMoreMouseEnter = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const { qualifier } = event.currentTarget.dataset;\n    if (qualifier) {\n      this.props.onSelect(`qualifier###${qualifier}`);\n    }\n  };\n\n  render() {\n    const { loadingMore, qualifier, selected } = this.props;\n\n    return (\n      <li className={classNames('menu-footer', { active: selected })} key={`more-${qualifier}`}>\n        <DeferredSpinner className=\"navbar-search-icon\" loading={loadingMore === qualifier}>\n          <a\n            className={classNames({ 'cursor-not-allowed': !this.props.allowMore })}\n            data-qualifier={qualifier}\n            href=\"#\"\n            onClick={this.handleMoreClick}\n            onMouseEnter={this.handleMoreMouseEnter}>\n            <div className=\"pull-right text-muted-2 menu-footer-note\">\n              <FormattedMessage\n                defaultMessage={translate('search.show_more.hint')}\n                id=\"search.show_more.hint\"\n                values={{\n                  key: <span className=\"shortcut-button shortcut-button-small\">Enter</span>\n                }}\n              />\n            </div>\n            <span>{translate('show_more')}</span>\n          </a>\n        </DeferredSpinner>\n      </li>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport SearchShowMore from './SearchShowMore';\nimport { ComponentResult, More, Results, sortQualifiers } from './utils';\n\nexport interface Props {\n  allowMore: boolean;\n  loadingMore?: string;\n  more: More;\n  onMoreClick: (qualifier: string) => void;\n  onSelect: (componentKey: string) => void;\n  renderNoResults: () => React.ReactElement<any>;\n  renderResult: (component: ComponentResult) => React.ReactNode;\n  results: Results;\n  selected?: string;\n}\n\nexport default function SearchResults(props: Props): React.ReactElement<Props> {\n  const qualifiers = Object.keys(props.results);\n  const renderedComponents: React.ReactNode[] = [];\n\n  sortQualifiers(qualifiers).forEach(qualifier => {\n    const components = props.results[qualifier];\n\n    if (components.length > 0 && renderedComponents.length > 0) {\n      renderedComponents.push(<li className=\"divider\" key={`divider-${qualifier}`} />);\n    }\n\n    if (components.length > 0) {\n      renderedComponents.push(\n        <li className=\"menu-header\" key={`header-${qualifier}`}>\n          {translate('qualifiers', qualifier)}\n        </li>\n      );\n    }\n\n    components.forEach(component => renderedComponents.push(props.renderResult(component)));\n\n    const more = props.more[qualifier];\n    if (more !== undefined && more > 0) {\n      renderedComponents.push(\n        <SearchShowMore\n          allowMore={props.allowMore}\n          key={`more-${qualifier}`}\n          loadingMore={props.loadingMore}\n          onMoreClick={props.onMoreClick}\n          onSelect={props.onSelect}\n          qualifier={qualifier}\n          selected={props.selected === `qualifier###${qualifier}`}\n        />\n      );\n    }\n  });\n\n  return renderedComponents.length > 0 ? (\n    <ul className=\"menu\">{renderedComponents}</ul>\n  ) : (\n    props.renderNoResults()\n  );\n}\n"],"sourceRoot":""}