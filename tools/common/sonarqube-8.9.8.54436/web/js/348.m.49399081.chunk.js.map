{"version":3,"sources":["webpack:///./src/main/js/apps/sessions/components/Unauthorized.tsx","webpack:///./src/main/js/apps/change-admin-password/ChangeAdminPasswordAppRenderer.tsx","webpack:///./src/main/js/apps/change-admin-password/constants.ts","webpack:///./src/main/js/apps/change-admin-password/ChangeAdminPasswordApp.tsx","webpack:///./node_modules/sonar-ui-common/components/ui/MandatoryFieldMarker.js","webpack:///./node_modules/sonar-ui-common/components/ui/MandatoryFieldsExplanation.js"],"names":["Unauthorized","message","decodeURIComponent","className","id","Boolean","href","ChangeAdminPasswordAppRenderer","props","canAdmin","canSubmit","confirmPasswordValue","passwordValue","location","submitting","success","Alert","variant","GlobalMessagesContainer","onSubmit","e","preventDefault","htmlFor","name","onChange","onPasswordChange","currentTarget","value","required","type","onConfirmPasswordChange","disabled","super","mounted","handlePasswordChange","this","setState","checkCanSubmit","handleConfirmPasswordChange","handleSubmit","async","state","login","password","then","instanceUsesDefaultAdminCredentials","mapStateToProps","withRouter","Object","defineProperty","exports","classNames","React","l10n_1","default","_a","createElement","translate","react_intl_1","FormattedMessage","defaultMessage","values","star"],"mappings":"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","file":"js/348.m.49399081.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { getCookie } from 'sonar-ui-common/helpers/cookies';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\n\nexport default function Unauthorized() {\n  const message = decodeURIComponent(getCookie('AUTHENTICATION-ERROR') || '');\n  return (\n    <div className=\"page-wrapper-simple\" id=\"bd\">\n      <div className=\"page-simple\" id=\"nonav\">\n        <div className=\"text-center\">\n          <p id=\"unauthorized\">{translate('unauthorized.message')}</p>\n\n          {Boolean(message) && (\n            <p className=\"spacer-top\">\n              {translate('unauthorized.reason')} {message}\n            </p>\n          )}\n\n          <div className=\"big-spacer-top\">\n            <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getReturnUrl } from 'sonar-ui-common/helpers/urls';\nimport GlobalMessagesContainer from '../../app/components/GlobalMessagesContainer';\nimport { Location } from '../../components/hoc/withRouter';\nimport Unauthorized from '../sessions/components/Unauthorized';\nimport { DEFAULT_ADMIN_PASSWORD } from './constants';\n\nexport interface ChangeAdminPasswordAppRendererProps {\n  passwordValue: string;\n  confirmPasswordValue: string;\n  onConfirmPasswordChange: (password: string) => void;\n  onPasswordChange: (password: string) => void;\n  onSubmit: () => void;\n  canAdmin?: boolean;\n  canSubmit?: boolean;\n  submitting: boolean;\n  success: boolean;\n  location: Location;\n}\n\nexport default function ChangeAdminPasswordAppRenderer(props: ChangeAdminPasswordAppRendererProps) {\n  const {\n    canAdmin,\n    canSubmit,\n    confirmPasswordValue,\n    passwordValue,\n    location,\n    submitting,\n    success\n  } = props;\n\n  if (!canAdmin) {\n    return <Unauthorized />;\n  }\n\n  return (\n    <div className=\"page-wrapper-simple\">\n      <div className=\"page-simple\">\n        {success ? (\n          <Alert variant=\"success\">\n            <p className=\"spacer-bottom\">{translate('users.change_admin_password.form.success')}</p>\n            {/* We must not use Link here, because we need a refresh of the /api/navigation/global call. */}\n            <a href={getReturnUrl(location)}>\n              {translate('users.change_admin_password.form.continue_to_app')}\n            </a>\n          </Alert>\n        ) : (\n          <>\n            <GlobalMessagesContainer />\n\n            <h1 className=\"text-center bg-danger big padded\">\n              {translate('users.change_admin_password.instance_is_at_risk')}\n            </h1>\n            <p className=\"text-center huge huge-spacer-top\">\n              {translate('users.change_admin_password.header')}\n            </p>\n            <p className=\"text-center huge-spacer-top huge-spacer-bottom\">\n              {translate('users.change_admin_password.description')}\n            </p>\n\n            <form\n              className=\"text-center\"\n              onSubmit={(e: React.SyntheticEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                props.onSubmit();\n              }}>\n              <h2 className=\"big-spacer-bottom big\">\n                {translate('users.change_admin_password.form.header')}\n              </h2>\n\n              <MandatoryFieldsExplanation className=\"form-field\" />\n\n              <div className=\"form-field\">\n                <label htmlFor=\"user-password\">\n                  {translate('users.change_admin_password.form.password')}\n                  <MandatoryFieldMarker />\n                </label>\n                <input\n                  id=\"user-password\"\n                  name=\"password\"\n                  onChange={(e: React.SyntheticEvent<HTMLInputElement>) => {\n                    props.onPasswordChange(e.currentTarget.value);\n                  }}\n                  required={true}\n                  type=\"password\"\n                  value={passwordValue}\n                />\n              </div>\n\n              <div className=\"form-field\">\n                <label htmlFor=\"confirm-user-password\">\n                  {translate('users.change_admin_password.form.confirm')}\n                  <MandatoryFieldMarker />\n                </label>\n                <input\n                  id=\"confirm-user-password\"\n                  name=\"confirm-password\"\n                  onChange={(e: React.SyntheticEvent<HTMLInputElement>) => {\n                    props.onConfirmPasswordChange(e.currentTarget.value);\n                  }}\n                  required={true}\n                  type=\"password\"\n                  value={confirmPasswordValue}\n                />\n\n                {confirmPasswordValue === passwordValue &&\n                  passwordValue === DEFAULT_ADMIN_PASSWORD && (\n                    <Alert className=\"spacer-top\" variant=\"warning\">\n                      {translate('users.change_admin_password.form.cannot_use_default_password')}\n                    </Alert>\n                  )}\n              </div>\n\n              <div className=\"form-field\">\n                <SubmitButton disabled={!canSubmit || submitting}>\n                  {translate('update_verb')}\n                  {submitting && <i className=\"spinner spacer-left\" />}\n                </SubmitButton>\n              </div>\n            </form>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const DEFAULT_ADMIN_LOGIN = 'admin';\nexport const DEFAULT_ADMIN_PASSWORD = 'admin';\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { changePassword } from '../../api/users';\nimport { Location, withRouter } from '../../components/hoc/withRouter';\nimport { getAppState, Store } from '../../store/rootReducer';\nimport ChangeAdminPasswordAppRenderer from './ChangeAdminPasswordAppRenderer';\nimport { DEFAULT_ADMIN_LOGIN, DEFAULT_ADMIN_PASSWORD } from './constants';\n\ninterface Props {\n  canAdmin?: boolean;\n  instanceUsesDefaultAdminCredentials?: boolean;\n  location: Location;\n}\n\ninterface State {\n  passwordValue: string;\n  confirmPasswordValue: string;\n  canSubmit?: boolean;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport class ChangeAdminPasswordApp extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      passwordValue: '',\n      confirmPasswordValue: '',\n      submitting: false,\n      success: !props.instanceUsesDefaultAdminCredentials\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handlePasswordChange = (passwordValue: string) => {\n    this.setState({ passwordValue }, this.checkCanSubmit);\n  };\n\n  handleConfirmPasswordChange = (confirmPasswordValue: string) => {\n    this.setState({ confirmPasswordValue }, this.checkCanSubmit);\n  };\n\n  handleSubmit = async () => {\n    const { canSubmit, passwordValue } = this.state;\n    if (canSubmit) {\n      this.setState({ submitting: true });\n      const success = await changePassword({\n        login: DEFAULT_ADMIN_LOGIN,\n        password: passwordValue\n      }).then(\n        () => true,\n        () => false\n      );\n      if (this.mounted) {\n        this.setState({ submitting: false, success });\n      }\n    }\n  };\n\n  checkCanSubmit = () => {\n    this.setState(({ passwordValue, confirmPasswordValue }) => ({\n      canSubmit: passwordValue === confirmPasswordValue && passwordValue !== DEFAULT_ADMIN_PASSWORD\n    }));\n  };\n\n  render() {\n    const { canAdmin, location } = this.props;\n    const { canSubmit, confirmPasswordValue, passwordValue, submitting, success } = this.state;\n    return (\n      <ChangeAdminPasswordAppRenderer\n        canAdmin={canAdmin}\n        passwordValue={passwordValue}\n        confirmPasswordValue={confirmPasswordValue}\n        canSubmit={canSubmit}\n        onPasswordChange={this.handlePasswordChange}\n        onConfirmPasswordChange={this.handleConfirmPasswordChange}\n        onSubmit={this.handleSubmit}\n        submitting={submitting}\n        success={success}\n        location={location}\n      />\n    );\n  }\n}\n\nexport const mapStateToProps = (state: Store) => {\n  const { canAdmin, instanceUsesDefaultAdminCredentials } = getAppState(state);\n  return { canAdmin, instanceUsesDefaultAdminCredentials };\n};\n\nexport default connect(mapStateToProps)(withRouter(ChangeAdminPasswordApp));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar l10n_1 = require(\"../../helpers/l10n\");\nfunction MandatoryFieldMarker(_a) {\n    var className = _a.className;\n    return (React.createElement(\"em\", { \"aria-label\": l10n_1.translate('field_required'), className: classNames('mandatory little-spacer-left', className) }, \"*\"));\n}\nexports.default = MandatoryFieldMarker;\n//# sourceMappingURL=MandatoryFieldMarker.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar react_intl_1 = require(\"react-intl\");\nvar l10n_1 = require(\"../../helpers/l10n\");\nfunction MandatoryFieldsExplanation(_a) {\n    var className = _a.className;\n    return (React.createElement(\"div\", { \"aria-hidden\": true, className: classNames('text-muted', className) },\n        React.createElement(react_intl_1.FormattedMessage, { id: \"fields_marked_with_x_required\", defaultMessage: l10n_1.translate('fields_marked_with_x_required'), values: { star: React.createElement(\"em\", { className: \"mandatory\" }, \"*\") } })));\n}\nexports.default = MandatoryFieldsExplanation;\n//# sourceMappingURL=MandatoryFieldsExplanation.js.map"],"sourceRoot":""}