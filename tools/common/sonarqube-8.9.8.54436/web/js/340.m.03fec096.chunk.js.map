{"version":3,"sources":["webpack:///./src/main/js/app/components/ResetPassword.tsx","webpack:///./node_modules/sonar-ui-common/components/ui/MandatoryFieldMarker.js","webpack:///./node_modules/sonar-ui-common/components/ui/MandatoryFieldsExplanation.js","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/components/common/ResetPasswordForm.tsx"],"names":["ResetPassword","currentUser","className","user","onPasswordChange","window","location","href","Object","defineProperty","exports","value","classNames","React","l10n_1","default","_a","createElement","translate","react_intl_1","FormattedMessage","id","defaultMessage","values","star","whenLoggedIn","WrappedComponent","Wrapper","this","props","displayName","ResetPasswordForm","oldPassword","password","passwordConfirmation","state","success","handleSuccessfulChange","setState","errors","undefined","setErrors","handleChangePassword","event","preventDefault","previousPassword","focus","login","then","onSubmit","variant","map","e","i","key","htmlFor","autoComplete","name","ref","elem","required","type"],"mappings":"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","file":"js/340.m.03fec096.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport ResetPasswordForm from '../../components/common/ResetPasswordForm';\nimport { whenLoggedIn } from '../../components/hoc/whenLoggedIn';\nimport { getBaseUrl } from '../../helpers/system';\nimport GlobalMessagesContainer from './GlobalMessagesContainer';\n\nexport interface ResetPasswordProps {\n  currentUser: T.LoggedInUser;\n}\n\nexport function ResetPassword({ currentUser }: ResetPasswordProps) {\n  return (\n    <div className=\"page-wrapper-simple\">\n      <div className=\"page-simple\">\n        <GlobalMessagesContainer />\n\n        <h1 className=\"text-center huge\">{translate('my_account.reset_password')}</h1>\n        <p className=\"text-center huge-spacer-top huge-spacer-bottom\">\n          {translate('my_account.reset_password.explain')}\n        </p>\n\n        <div className=\"text-center\">\n          <h2 className=\"big-spacer-bottom big\">{translate('my_profile.password.title')}</h2>\n\n          <ResetPasswordForm\n            user={currentUser}\n            onPasswordChange={() => {\n              // Force a refresh for the backend to handle additional redirects.\n              window.location.href = getBaseUrl() + '/';\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default whenLoggedIn(ResetPassword);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar l10n_1 = require(\"../../helpers/l10n\");\nfunction MandatoryFieldMarker(_a) {\n    var className = _a.className;\n    return (React.createElement(\"em\", { \"aria-label\": l10n_1.translate('field_required'), className: classNames('mandatory little-spacer-left', className) }, \"*\"));\n}\nexports.default = MandatoryFieldMarker;\n//# sourceMappingURL=MandatoryFieldMarker.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar classNames = require(\"classnames\");\nvar React = require(\"react\");\nvar react_intl_1 = require(\"react-intl\");\nvar l10n_1 = require(\"../../helpers/l10n\");\nfunction MandatoryFieldsExplanation(_a) {\n    var className = _a.className;\n    return (React.createElement(\"div\", { \"aria-hidden\": true, className: classNames('text-muted', className) },\n        React.createElement(react_intl_1.FormattedMessage, { id: \"fields_marked_with_x_required\", defaultMessage: l10n_1.translate('fields_marked_with_x_required'), values: { star: React.createElement(\"em\", { className: \"mandatory\" }, \"*\") } })));\n}\nexports.default = MandatoryFieldsExplanation;\n//# sourceMappingURL=MandatoryFieldsExplanation.js.map","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { changePassword } from '../../api/users';\n\ninterface Props {\n  className?: string;\n  user: T.LoggedInUser;\n  onPasswordChange?: () => void;\n}\n\ninterface State {\n  errors?: string[];\n  success: boolean;\n}\n\nexport default class ResetPasswordForm extends React.Component<Props, State> {\n  oldPassword: HTMLInputElement | null = null;\n  password: HTMLInputElement | null = null;\n  passwordConfirmation: HTMLInputElement | null = null;\n  state: State = {\n    success: false\n  };\n\n  handleSuccessfulChange = () => {\n    if (!this.oldPassword || !this.password || !this.passwordConfirmation) {\n      return;\n    }\n    this.oldPassword.value = '';\n    this.password.value = '';\n    this.passwordConfirmation.value = '';\n    this.setState({ success: true, errors: undefined });\n    if (this.props.onPasswordChange) {\n      this.props.onPasswordChange();\n    }\n  };\n\n  setErrors = (errors: string[]) => {\n    this.setState({ success: false, errors });\n  };\n\n  handleChangePassword = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!this.oldPassword || !this.password || !this.passwordConfirmation) {\n      return;\n    }\n    const { user } = this.props;\n    const previousPassword = this.oldPassword.value;\n    const password = this.password.value;\n    const passwordConfirmation = this.passwordConfirmation.value;\n\n    if (password !== passwordConfirmation) {\n      this.password.focus();\n      this.setErrors([translate('user.password_doesnt_match_confirmation')]);\n    } else {\n      changePassword({ login: user.login, password, previousPassword }).then(\n        this.handleSuccessfulChange,\n        () => {\n          // error already reported.\n        }\n      );\n    }\n  };\n\n  render() {\n    const { className } = this.props;\n    const { success, errors } = this.state;\n\n    return (\n      <form className={className} onSubmit={this.handleChangePassword}>\n        {success && <Alert variant=\"success\">{translate('my_profile.password.changed')}</Alert>}\n\n        {errors &&\n          errors.map((e, i) => (\n            /* eslint-disable-next-line react/no-array-index-key */\n            <Alert key={i} variant=\"error\">\n              {e}\n            </Alert>\n          ))}\n\n        <MandatoryFieldsExplanation className=\"form-field\" />\n\n        <div className=\"form-field\">\n          <label htmlFor=\"old_password\">\n            {translate('my_profile.password.old')}\n            <MandatoryFieldMarker />\n          </label>\n          <input\n            autoComplete=\"off\"\n            id=\"old_password\"\n            name=\"old_password\"\n            ref={elem => (this.oldPassword = elem)}\n            required={true}\n            type=\"password\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"password\">\n            {translate('my_profile.password.new')}\n            <MandatoryFieldMarker />\n          </label>\n          <input\n            autoComplete=\"off\"\n            id=\"password\"\n            name=\"password\"\n            ref={elem => (this.password = elem)}\n            required={true}\n            type=\"password\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <label htmlFor=\"password_confirmation\">\n            {translate('my_profile.password.confirm')}\n            <MandatoryFieldMarker />\n          </label>\n          <input\n            autoComplete=\"off\"\n            id=\"password_confirmation\"\n            name=\"password_confirmation\"\n            ref={elem => (this.passwordConfirmation = elem)}\n            required={true}\n            type=\"password\"\n          />\n        </div>\n        <div className=\"form-field\">\n          <SubmitButton id=\"change-password\">{translate('update_verb')}</SubmitButton>\n        </div>\n      </form>\n    );\n  }\n}\n"],"sourceRoot":""}