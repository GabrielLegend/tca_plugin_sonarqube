{"version":3,"sources":["webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css?95f7","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.css","webpack:///./src/main/js/apps/create/project/style.css?00fe","webpack:///./src/main/js/apps/create/project/style.css","webpack:///./src/main/js/api/alm-integrations.ts","webpack:///./src/main/js/apps/create/project/AzurePersonalAccessTokenForm.tsx","webpack:///./src/main/js/apps/create/project/types.ts","webpack:///./src/main/js/apps/create/project/AzureProjectAccordion.tsx","webpack:///./src/main/js/apps/create/project/AzureProjectsList.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPageHeader.tsx","webpack:///./src/main/js/apps/create/project/WrongBindingCountAlert.tsx","webpack:///./src/main/js/apps/create/project/AzureProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/AzureProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectAccordion.tsx","webpack:///./src/main/js/apps/create/project/BitbucketRepositories.tsx","webpack:///./src/main/js/apps/create/project/BitbucketSearchResults.tsx","webpack:///./src/main/js/apps/create/project/BitbucketImportRepositoryForm.tsx","webpack:///./src/main/js/apps/create/project/PersonalAccessTokenForm.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/BitbucketProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/constants.ts","webpack:///./src/main/js/apps/create/project/CreateProjectModeSelection.tsx","webpack:///./src/main/js/apps/create/project/GitHubProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/GitHubProjectCreate.tsx","webpack:///./src/main/js/components/controls/ListFooter.tsx","webpack:///./src/main/js/apps/create/project/GitlabProjectSelectionForm.tsx","webpack:///./src/main/js/apps/create/project/GitlabProjectCreateRenderer.tsx","webpack:///./src/main/js/apps/create/project/GitlabProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/ManualProjectCreate.tsx","webpack:///./src/main/js/apps/create/project/CreateProjectPage.tsx","webpack:///./src/main/js/app/components/a11y/A11ySkipTarget.tsx","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/components/common/DocumentationTooltip.tsx","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts","webpack:///./src/main/js/components/hoc/whenLoggedIn.tsx","webpack:///./src/main/js/components/common/ProjectKeyInput.tsx","webpack:///./src/main/js/helpers/projects.ts"],"names":["api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","setAlmPersonalAccessToken","almSetting","pat","catch","throwGlobalError","checkPersonalAccessTokenIsValid","then","status","async","response","error","getAzurePatUrl","url","replace","AzurePersonalAccessTokenForm","props","alm","submitting","validationFailed","touched","setTouched","token","setToken","isInvalid","errorMessage","className","id","defaultMessage","values","link","href","rel","target","scope","onSubmit","e","preventDefault","onPersonalAccessTokenCreate","isValid","label","required","autoFocus","minLength","name","onChange","value","type","disabled","loading","CreateProjectModes","highlight","text","term","underline","toLowerCase","includes","pre","found","post","split","RegExp","AzureProjectAccordion","importing","startsOpen","project","repositories","searchQuery","selectedRepository","open","setOpen","page","setPage","limitedRepositories","slice","isSelected","repo","projectName","onClick","onOpen","title","description","length","map","key","sqProjectKey","fill","green","size","to","sqProjectName","checked","onCheck","onSelectRepository","count","total","loadMore","p","Alert","variant","pathname","query","mode","AzureDevOps","resetPat","AzureProjectsList","loadingRepositories","projects","searchResults","filteredProjects","filter","undefined","displayedProjects","keySuffix","Boolean","onOpenProject","CreateProjectPageHeader","additionalActions","WrongBindingCountAlert","canAdmin","category","AzureProjectCreateRenderer","searching","settings","showPersonalAccessTokenForm","submittingToken","tokenValidationFailed","onImportRepository","alt","height","src","Azure","onSearch","placeholder","super","mounted","fetchInitialData","this","setState","patIsValid","checkPersonalAccessToken","fetchAzureProjects","state","firstProjectName","repos","fetchAzureRepositories","Promise","resolve","getAzureRepositories","cleanUrl","location","router","handleOpenProject","projectKey","projectRepos","handleSearchRepositories","results","searchAzureRepositories","handleImportRepository","createdProject","repositoryName","onProjectCreate","handleSelectRepository","handlePersonalAccessTokenCreate","prevProps","loadingBindings","BitbucketProjectAccordion","disableRepositories","showingAllRepositories","repositoryCount","BitbucketServer","String","BitbucketRepositories","projectRepositories","openProjectKeys","setOpenProjectKeys","allAreExpanded","isOpen","allShown","handleClick","BitbucketSearchResults","some","r","filteredProjectKeys","filteredSearchResults","BitbucketImportRepositoryForm","getPatUrl","endsWith","PersonalAccessTokenForm","validationErrorMessage","FormData","currentTarget","get","display","perm","GitLab","BitbucketProjectCreateRenderer","bitbucketSetting","fetchBitbucketProjects","fetchBitbucketRepositories","all","isLastPage","filteredRepositories","reduce","acc","repositorySlug","slug","handleSearch","bitbucketSettings","renderAlmOption","almCounts","appState","tooltipLinks","onSelectMode","style","lineHeight","DocumentationTooltip","links","withAppState","Manual","GitHub","orgToOption","organizations","q","o","GitHubProjectCreateRenderer","loadingOrganizations","selectedOrganization","defaultOptions","minimumQueryLength","onSelect","onSelectOrganization","repositoryPaging","isDisabled","repository","onLoadMore","renderRepositoryList","triggerSearch","fetchRepositories","organizationKey","handleSelectOrganization","find","handleLoadMore","pageIndex","organization","repositoryKey","pageSize","initialize","code","fetchOrganizations","redirectToGithub","clientId","queryParams","param","join","instanceRootUrl","window","getGithubOrganizations","params","data","ps","getGithubRepositories","paging","_","needReload","ready","button","hasMore","reload","GitlabProjectSelectionForm","importingGitlabProjectId","loadingMore","projectsPaging","overlay","qualifier","Project","pathSlug","pathName","onImport","GitlabProjectCreateRenderer","tokenValidationErrorMessage","result","fetchProjects","tokenIsValid","handleError","getGitlabProjects","doImport","gitlabProjectId","importGitlabProject","handleImport","checkFreeKey","component","alreadyExist","projectKeyError","validating","handleFormSubmit","event","canSubmit","trim","handleProjectKeyChange","validateKey","prevState","projectNameChanged","projectNameError","validateName","handleProjectNameChange","Valid","projectNameIsInvalid","projectNameIsValid","ProjectKeyInput","help","onProjectKeyChange","maxLength","azureSettings","githubSettings","gitlabSettings","fetchAlmBindings","almSettings","s","handleModeSelect","handleProjectCreate","projectKeys","titleTemplate","A11ySkipTarget","anchor","renderForm","whenLoggedIn","Consumer","addA11ySkipLink","removeA11ySkipLink","A11ySkipTargetInner","getLink","weight","getAlmDefinitions","getAlmSettings","getAlmSettingsNoCatch","validateAlmSettings","BadRequest","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createBitbucketCloudConfiguration","updateBitbucketCloudConfiguration","createGitlabConfiguration","updateGitlabConfiguration","deleteConfiguration","countBindedProjects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectBitbucketCloudBinding","setProjectGithubBinding","setProjectGitlabBinding","inPlace","children","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY","WrappedComponent","Wrapper","currentUser","displayName","validateProjectKey","Empty","TooLong","test","OnlyDigits","InvalidChar"],"mappings":"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","file":"js/312.m.25371207.chunk.js","sourcesContent":["var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./ManualProjectCreate.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".manual-project-create{max-width:700px}.manual-project-create .button{margin-top:8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../../node_modules/postcss-loader/src/index.js??postcss!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#create-project{padding-top:0!important}#create-project header{padding-top:20px;background-color:#f3f3f3;position:-webkit-sticky;position:sticky;top:48px;z-index:50}.create-project-manual{display:flex!important;justify-content:space-between}.create-project-azdo-repo{width:410px;min-height:40px;box-sizing:border-box;margin-right:auto}.create-project-import-bbs .open .boxed-group-header{border-bottom:1px solid #e6e6e6}.create-project-import-bbs .boxed-group-inner{padding-top:24px}.create-project-import-bbs-repo{width:250px;min-height:40px}.create-project-github-repository{box-sizing:border-box;width:33.33%}.create-project-github-repository .notice{display:block;position:absolute}.create-project-github-repository .notice svg{color:#0a0}.create-project-import-gitlab table>tbody>tr>td{vertical-align:middle}.create-project-import-gitlab .project-name,.create-project-import-gitlab .project-path{max-width:400px}.create-project-import-gitlab .sq-project-link{max-width:300px}.create-project-import-gitlab .already-set-up svg{color:#0a0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { get, getJSON, parseError, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AzureProject,\n  AzureRepository,\n  BitbucketProject,\n  BitbucketRepository,\n  GithubOrganization,\n  GithubRepository,\n  GitlabProject\n} from '../types/alm-integration';\nimport { ProjectBase } from './components';\n\nexport function setAlmPersonalAccessToken(almSetting: string, pat: string): Promise<void> {\n  return post('/api/alm_integrations/set_pat', { almSetting, pat }).catch(throwGlobalError);\n}\n\nexport function checkPersonalAccessTokenIsValid(\n  almSetting: string\n): Promise<{ status: boolean; error?: string }> {\n  return get('/api/alm_integrations/check_pat', { almSetting })\n    .then(() => ({ status: true }))\n    .catch(async (response: Response) => {\n      if (response.status === 400) {\n        const error = await parseError(response);\n        return { status: false, error };\n      }\n      return throwGlobalError(response);\n    });\n}\n\nexport function getAzureProjects(almSetting: string): Promise<{ projects: AzureProject[] }> {\n  return getJSON('/api/alm_integrations/list_azure_projects', { almSetting }).catch(\n    throwGlobalError\n  );\n}\n\nexport function getAzureRepositories(\n  almSetting: string,\n  projectName: string\n): Promise<{ repositories: AzureRepository[] }> {\n  return getJSON('/api/alm_integrations/search_azure_repos', { almSetting, projectName }).catch(\n    throwGlobalError\n  );\n}\n\nexport function searchAzureRepositories(\n  almSetting: string,\n  searchQuery: string\n): Promise<{ repositories: AzureRepository[] }> {\n  return getJSON('/api/alm_integrations/search_azure_repos', { almSetting, searchQuery }).catch(\n    throwGlobalError\n  );\n}\n\nexport function importAzureRepository(\n  almSetting: string,\n  projectName: string,\n  repositoryName: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_azure_project', {\n    almSetting,\n    projectName,\n    repositoryName\n  }).catch(throwGlobalError);\n}\n\nexport function getBitbucketServerProjects(\n  almSetting: string\n): Promise<{ projects: BitbucketProject[] }> {\n  return getJSON('/api/alm_integrations/list_bitbucketserver_projects', { almSetting });\n}\n\nexport function getBitbucketServerRepositories(\n  almSetting: string,\n  projectName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    projectName\n  });\n}\n\nexport function importBitbucketServerProject(\n  almSetting: string,\n  projectKey: string,\n  repositorySlug: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_bitbucketserver_project', {\n    almSetting,\n    projectKey,\n    repositorySlug\n  }).catch(throwGlobalError);\n}\n\nexport function searchForBitbucketServerRepositories(\n  almSetting: string,\n  repositoryName: string\n): Promise<{\n  isLastPage: boolean;\n  repositories: BitbucketRepository[];\n}> {\n  return getJSON('/api/alm_integrations/search_bitbucketserver_repos', {\n    almSetting,\n    repositoryName\n  });\n}\n\nexport function getGithubClientId(almSetting: string): Promise<{ clientId?: string }> {\n  return getJSON('/api/alm_integrations/get_github_client_id', { almSetting });\n}\n\nexport function importGithubRepository(\n  almSetting: string,\n  organization: string,\n  repositoryKey: string\n): Promise<{ project: ProjectBase }> {\n  return postJSON('/api/alm_integrations/import_github_project', {\n    almSetting,\n    organization,\n    repositoryKey\n  }).catch(throwGlobalError);\n}\n\nexport function getGithubOrganizations(\n  almSetting: string,\n  token: string\n): Promise<{ organizations: GithubOrganization[] }> {\n  return getJSON('/api/alm_integrations/list_github_organizations', {\n    almSetting,\n    token\n  }).catch((response?: Response) => {\n    if (response && response.status !== 400) {\n      throwGlobalError(response);\n    }\n  });\n}\n\nexport function getGithubRepositories(data: {\n  almSetting: string;\n  organization: string;\n  pageSize: number;\n  page?: number;\n  query?: string;\n}): Promise<{ repositories: GithubRepository[]; paging: T.Paging }> {\n  const { almSetting, organization, pageSize, page = 1, query } = data;\n  return getJSON('/api/alm_integrations/list_github_repositories', {\n    almSetting,\n    organization,\n    p: page,\n    ps: pageSize,\n    q: query || undefined\n  }).catch(throwGlobalError);\n}\n\nexport function getGitlabProjects(data: {\n  almSetting: string;\n  page?: number;\n  pageSize?: number;\n  query?: string;\n}): Promise<{ projects: GitlabProject[]; projectsPaging: T.Paging }> {\n  const { almSetting, pageSize, page, query } = data;\n  return getJSON('/api/alm_integrations/search_gitlab_repos', {\n    almSetting,\n    projectName: query || undefined,\n    p: page,\n    ps: pageSize\n  })\n    .then(({ repositories, paging }) => ({ projects: repositories, projectsPaging: paging }))\n    .catch(throwGlobalError);\n}\n\nexport function importGitlabProject(data: {\n  almSetting: string;\n  gitlabProjectId: string;\n}): Promise<{ project: ProjectBase }> {\n  const { almSetting, gitlabProjectId } = data;\n  return postJSON('/api/alm_integrations/import_gitlab_project', {\n    almSetting,\n    gitlabProjectId\n  }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\n\nexport interface AzurePersonalAccessTokenFormProps {\n  almSetting: AlmSettingsInstance;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  submitting?: boolean;\n  validationFailed: boolean;\n}\n\nfunction getAzurePatUrl(url: string) {\n  return `${url.replace(/\\/$/, '')}/_usersSettings/tokens`;\n}\n\nexport default function AzurePersonalAccessTokenForm(props: AzurePersonalAccessTokenFormProps) {\n  const {\n    almSetting: { alm, url },\n    submitting = false,\n    validationFailed\n  } = props;\n\n  const [touched, setTouched] = React.useState(false);\n  React.useEffect(() => {\n    setTouched(false);\n  }, [submitting]);\n\n  const [token, setToken] = React.useState('');\n\n  const isInvalid = (validationFailed && !touched) || (touched && !token);\n\n  let errorMessage;\n  if (!token) {\n    errorMessage = translate('onboarding.create_project.pat_form.pat_required');\n  } else if (isInvalid) {\n    errorMessage = translate('onboarding.create_project.pat_incorrect', alm);\n  }\n\n  return (\n    <div className=\"boxed-group abs-width-600\">\n      <div className=\"boxed-group-inner\">\n        <h2>{translate('onboarding.create_project.pat_form.title', alm)}</h2>\n\n        <div className=\"big-spacer-top big-spacer-bottom\">\n          <FormattedMessage\n            id=\"onboarding.create_project.pat_help.instructions\"\n            defaultMessage={translate('onboarding.create_project.pat_help.instructions', alm)}\n            values={{\n              link: url ? (\n                <a\n                  className=\"link-with-icon\"\n                  href={getAzurePatUrl(url)}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  <DetachIcon className=\"little-spacer-right\" />\n                  <span>\n                    {translate('onboarding.create_project.pat_help.instructions.link', alm)}\n                  </span>\n                </a>\n              ) : (\n                translate('onboarding.create_project.pat_help.instructions.link', alm)\n              ),\n              scope: (\n                <strong>\n                  <em>Code (Read & Write)</em>\n                </strong>\n              )\n            }}\n          />\n        </div>\n\n        <form\n          onSubmit={(e: React.SyntheticEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            props.onPersonalAccessTokenCreate(token);\n          }}>\n          <ValidationInput\n            error={errorMessage}\n            id=\"personal_access_token\"\n            isInvalid={isInvalid}\n            isValid={false}\n            label={translate('onboarding.create_project.enter_pat')}\n            required={true}>\n            <input\n              autoFocus={true}\n              className={classNames('width-100 little-spacer-bottom', {\n                'is-invalid': isInvalid\n              })}\n              id=\"personal_access_token\"\n              minLength={1}\n              name=\"personal_access_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setToken(e.target.value);\n                setTouched(true);\n              }}\n              type=\"text\"\n              value={token}\n            />\n          </ValidationInput>\n\n          <SubmitButton disabled={isInvalid || submitting || !touched}>\n            {translate('onboarding.create_project.pat_form.list_repositories')}\n          </SubmitButton>\n          <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n        </form>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport enum CreateProjectModes {\n  Manual = 'manual',\n  AzureDevOps = 'azure',\n  BitbucketServer = 'bitbucket',\n  GitHub = 'github',\n  GitLab = 'gitlab'\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport BoxedGroupAccordion from 'sonar-ui-common/components/controls/BoxedGroupAccordion';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport { CreateProjectModes } from './types';\n\nexport interface AzureProjectAccordionProps {\n  importing: boolean;\n  loading: boolean;\n  onOpen: (key: string) => void;\n  onSelectRepository: (repository: AzureRepository) => void;\n  project: AzureProject;\n  repositories?: AzureRepository[];\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n  startsOpen: boolean;\n}\n\nconst PAGE_SIZE = 30;\n\nfunction highlight(text: string, term?: string, underline = false) {\n  if (!term || !text.toLowerCase().includes(term.toLowerCase())) {\n    return text;\n  }\n\n  // Capture only the first occurence by using a capturing group to get\n  // everything after the first occurence\n  const [pre, found, post] = text.split(new RegExp(`(${term})(.*)`, 'i'));\n  return (\n    <>\n      {pre}\n      <strong className={classNames({ underline })}>{found}</strong>\n      {post}\n    </>\n  );\n}\n\nexport default function AzureProjectAccordion(props: AzureProjectAccordionProps) {\n  const {\n    importing,\n    loading,\n    startsOpen,\n    project,\n    repositories = [],\n    searchQuery,\n    selectedRepository\n  } = props;\n\n  const [open, setOpen] = React.useState(startsOpen);\n  const handleClick = () => {\n    if (!open) {\n      props.onOpen(project.name);\n    }\n    setOpen(!open);\n  };\n\n  const [page, setPage] = React.useState(1);\n  const limitedRepositories = repositories.slice(0, page * PAGE_SIZE);\n\n  const isSelected = (repo: AzureRepository) =>\n    selectedRepository?.projectName === project.name && selectedRepository.name === repo.name;\n\n  return (\n    <BoxedGroupAccordion\n      className={classNames('big-spacer-bottom', {\n        open\n      })}\n      onClick={handleClick}\n      open={open}\n      title={<h3 title={project.description}>{highlight(project.name, searchQuery, true)}</h3>}>\n      {open && (\n        <DeferredSpinner loading={loading}>\n          {/* The extra loading guard is to prevent the flash of the Alert */}\n          {!loading && repositories.length === 0 ? (\n            <Alert variant=\"warning\">\n              <FormattedMessage\n                defaultMessage={translate('onboarding.create_project.azure.no_repositories')}\n                id=\"onboarding.create_project.azure.no_repositories\"\n                values={{\n                  link: (\n                    <Link\n                      to={{\n                        pathname: '/projects/create',\n                        query: { mode: CreateProjectModes.AzureDevOps, resetPat: 1 }\n                      }}>\n                      {translate('onboarding.create_project.update_your_token')}\n                    </Link>\n                  )\n                }}\n              />\n            </Alert>\n          ) : (\n            <>\n              <div className=\"display-flex-wrap\">\n                {limitedRepositories.map(repo => (\n                  <div\n                    className=\"create-project-azdo-repo display-flex-start spacer-bottom padded-right\"\n                    key={repo.name}>\n                    {repo.sqProjectKey ? (\n                      <>\n                        <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} />\n                        <div className=\"overflow-hidden\">\n                          <div className=\"little-spacer-bottom text-ellipsis\">\n                            <Link to={getProjectUrl(repo.sqProjectKey)} title={repo.sqProjectName}>\n                              {highlight(repo.sqProjectName || repo.name, searchQuery)}\n                            </Link>\n                          </div>\n                          <em>{translate('onboarding.create_project.repository_imported')}</em>\n                        </div>\n                      </>\n                    ) : (\n                      <Radio\n                        checked={isSelected(repo)}\n                        className=\"overflow-hidden\"\n                        disabled={importing}\n                        onCheck={() => props.onSelectRepository(repo)}\n                        value={repo.name}>\n                        <span className=\"text-ellipsis\" title={repo.name}>\n                          {highlight(repo.name, searchQuery)}\n                        </span>\n                      </Radio>\n                    )}\n                  </div>\n                ))}\n              </div>\n              <ListFooter\n                count={limitedRepositories.length}\n                total={repositories.length}\n                loadMore={() => setPage(p => p + 1)}\n              />\n            </>\n          )}\n        </DeferredSpinner>\n      )}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport AzureProjectAccordion from './AzureProjectAccordion';\nimport { CreateProjectModes } from './types';\n\nexport interface AzureProjectsListProps {\n  importing: boolean;\n  loadingRepositories: T.Dict<boolean>;\n  onOpenProject: (key: string) => void;\n  onSelectRepository: (repository: AzureRepository) => void;\n  projects?: AzureProject[];\n  repositories: T.Dict<AzureRepository[]>;\n  searchResults?: T.Dict<AzureRepository[]>;\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n}\n\nconst PAGE_SIZE = 10;\n\nexport default function AzureProjectsList(props: AzureProjectsListProps) {\n  const {\n    importing,\n    loadingRepositories,\n    projects = [],\n    repositories,\n    searchResults,\n    searchQuery,\n    selectedRepository\n  } = props;\n\n  const [page, setPage] = React.useState(1);\n\n  const filteredProjects = searchResults\n    ? projects.filter(p => searchResults[p.name] !== undefined)\n    : projects;\n\n  if (filteredProjects.length === 0) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        {searchResults ? (\n          translate('onboarding.create_project.azure.no_results')\n        ) : (\n          <FormattedMessage\n            defaultMessage={translate('onboarding.create_project.azure.no_projects')}\n            id=\"onboarding.create_project.azure.no_projects\"\n            values={{\n              link: (\n                <Link\n                  to={{\n                    pathname: '/projects/create',\n                    query: { mode: CreateProjectModes.AzureDevOps, resetPat: 1 }\n                  }}>\n                  {translate('onboarding.create_project.update_your_token')}\n                </Link>\n              )\n            }}\n          />\n        )}\n      </Alert>\n    );\n  }\n\n  const displayedProjects = filteredProjects.slice(0, page * PAGE_SIZE);\n\n  // Add a suffix to the key to force react to not reuse AzureProjectAccordions between\n  // search results and project exploration\n  const keySuffix = searchResults ? ' - result' : '';\n\n  return (\n    <div>\n      {displayedProjects.map((p, i) => (\n        <AzureProjectAccordion\n          key={`${p.name}${keySuffix}`}\n          importing={importing}\n          loading={Boolean(loadingRepositories[p.name])}\n          onOpen={props.onOpenProject}\n          onSelectRepository={props.onSelectRepository}\n          project={p}\n          repositories={searchResults ? searchResults[p.name] : repositories[p.name]}\n          selectedRepository={selectedRepository}\n          searchQuery={searchQuery}\n          startsOpen={searchResults !== undefined || i === 0}\n        />\n      ))}\n\n      <ListFooter\n        count={displayedProjects.length}\n        loadMore={() => setPage(p => p + 1)}\n        total={filteredProjects.length}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface CreateProjectPageHeaderProps {\n  additionalActions?: React.ReactNode;\n  title: React.ReactNode;\n}\n\nexport default function CreateProjectPageHeader(props: CreateProjectPageHeaderProps) {\n  const { additionalActions, title } = props;\n\n  return (\n    <header className=\"huge-spacer-bottom bordered-bottom overflow-hidden\">\n      <h1 className=\"pull-left huge big-spacer-bottom\">{title}</h1>\n\n      {additionalActions}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmKeys } from '../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../../settings/components/AdditionalCategoryKeys';\n\nexport interface WrongBindingCountAlertProps {\n  alm: AlmKeys;\n  canAdmin: boolean;\n}\n\nexport default function WrongBindingCountAlert(props: WrongBindingCountAlertProps) {\n  const { alm, canAdmin } = props;\n\n  return (\n    <Alert variant=\"error\">\n      {canAdmin ? (\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.wrong_binding_count.admin')}\n          id=\"onboarding.create_project.wrong_binding_count.admin\"\n          values={{\n            alm: translate('onboarding.alm', alm),\n            url: (\n              <Link\n                to={{\n                  pathname: '/admin/settings',\n                  query: { category: ALM_INTEGRATION }\n                }}>\n                {translate('settings.page')}\n              </Link>\n            )\n          }}\n        />\n      ) : (\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.wrong_binding_count')}\n          id=\"onboarding.create_project.wrong_binding_count\"\n          values={{\n            alm: translate('onboarding.alm', alm)\n          }}\n        />\n      )}\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport AzurePersonalAccessTokenForm from './AzurePersonalAccessTokenForm';\nimport AzureProjectsList from './AzureProjectsList';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport WrongBindingCountAlert from './WrongBindingCountAlert';\n\nexport interface AzureProjectCreateRendererProps {\n  canAdmin?: boolean;\n  importing: boolean;\n  loading: boolean;\n  loadingRepositories: T.Dict<boolean>;\n  onImportRepository: () => void;\n  onOpenProject: (key: string) => void;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repository: AzureRepository) => void;\n  projects?: AzureProject[];\n  repositories: T.Dict<AzureRepository[]>;\n  searching?: boolean;\n  searchResults?: T.Dict<AzureRepository[]>;\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n  settings?: AlmSettingsInstance;\n  showPersonalAccessTokenForm?: boolean;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default function AzureProjectCreateRenderer(props: AzureProjectCreateRendererProps) {\n  const {\n    canAdmin,\n    importing,\n    loading,\n    loadingRepositories,\n    projects,\n    repositories,\n    searching,\n    searchResults,\n    searchQuery,\n    selectedRepository,\n    settings,\n    showPersonalAccessTokenForm,\n    submittingToken,\n    tokenValidationFailed\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        additionalActions={\n          !showPersonalAccessTokenForm && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/azure.svg`}\n            />\n            {translate('onboarding.create_project.azure.title')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !(settings && settings.url) && (\n        <WrongBindingCountAlert alm={AlmKeys.Azure} canAdmin={!!canAdmin} />\n      )}\n\n      {!loading &&\n        settings &&\n        (showPersonalAccessTokenForm ? (\n          <div className=\"display-flex-justify-center\">\n            <AzurePersonalAccessTokenForm\n              almSetting={settings}\n              onPersonalAccessTokenCreate={props.onPersonalAccessTokenCreate}\n              submitting={submittingToken}\n              validationFailed={tokenValidationFailed}\n            />\n          </div>\n        ) : (\n          <>\n            <div className=\"huge-spacer-bottom\">\n              <SearchBox\n                onChange={props.onSearch}\n                placeholder={translate('onboarding.create_project.search_projects_repositories')}\n              />\n            </div>\n            <DeferredSpinner loading={Boolean(searching)}>\n              <AzureProjectsList\n                importing={importing}\n                loadingRepositories={loadingRepositories}\n                onOpenProject={props.onOpenProject}\n                onSelectRepository={props.onSelectRepository}\n                projects={projects}\n                repositories={repositories}\n                searchResults={searchResults}\n                searchQuery={searchQuery}\n                selectedRepository={selectedRepository}\n              />\n            </DeferredSpinner>\n          </>\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy } from 'lodash';\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  checkPersonalAccessTokenIsValid,\n  getAzureProjects,\n  getAzureRepositories,\n  importAzureRepository,\n  searchAzureRepositories,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport { AzureProject, AzureRepository } from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport AzureCreateProjectRenderer from './AzureProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location' | 'router'> {\n  canAdmin: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n  settings: AlmSettingsInstance[];\n}\n\ninterface State {\n  importing: boolean;\n  loading: boolean;\n  loadingRepositories: T.Dict<boolean>;\n  patIsValid?: boolean;\n  projects?: AzureProject[];\n  repositories: T.Dict<AzureRepository[]>;\n  searching?: boolean;\n  searchResults?: T.Dict<AzureRepository[]>;\n  searchQuery?: string;\n  selectedRepository?: AzureRepository;\n  settings?: AlmSettingsInstance;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default class AzureProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // For now, we only handle a single instance. So we always use the first\n      // one from the list.\n      settings: props.settings[0],\n      importing: false,\n      loading: false,\n      loadingRepositories: {},\n      repositories: {},\n      tokenValidationFailed: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchInitialData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.settings.length === 0 && this.props.settings.length > 0) {\n      this.setState(\n        { settings: this.props.settings.length === 1 ? this.props.settings[0] : undefined },\n        () => this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    this.setState({ loading: true });\n\n    const patIsValid = await this.checkPersonalAccessToken().catch(() => false);\n\n    let projects: AzureProject[] | undefined;\n    if (patIsValid) {\n      projects = await this.fetchAzureProjects();\n    }\n\n    const { repositories } = this.state;\n\n    let firstProjectName: string;\n\n    if (projects && projects.length > 0) {\n      firstProjectName = projects[0].name;\n\n      this.setState(({ loadingRepositories }) => ({\n        loadingRepositories: { ...loadingRepositories, [firstProjectName]: true }\n      }));\n\n      const repos = await this.fetchAzureRepositories(firstProjectName);\n      repositories[firstProjectName] = repos;\n    }\n\n    if (this.mounted) {\n      this.setState(({ loadingRepositories }) => {\n        if (firstProjectName) {\n          loadingRepositories[firstProjectName] = false;\n        }\n\n        return {\n          patIsValid,\n          loading: false,\n          loadingRepositories: { ...loadingRepositories },\n          projects,\n          repositories\n        };\n      });\n    }\n  };\n\n  fetchAzureProjects = (): Promise<AzureProject[] | undefined> => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(undefined);\n    }\n\n    return getAzureProjects(settings.key).then(({ projects }) => projects);\n  };\n\n  fetchAzureRepositories = (projectName: string): Promise<AzureRepository[]> => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve([]);\n    }\n\n    return getAzureRepositories(settings.key, projectName)\n      .then(({ repositories }) => repositories)\n      .catch(() => []);\n  };\n\n  cleanUrl = () => {\n    const { location, router } = this.props;\n    delete location.query.resetPat;\n    router.replace(location);\n  };\n\n  handleOpenProject = async (projectKey: string) => {\n    if (this.state.searchResults) {\n      return;\n    }\n\n    this.setState(({ loadingRepositories }) => ({\n      loadingRepositories: { ...loadingRepositories, [projectKey]: true }\n    }));\n\n    const projectRepos = await this.fetchAzureRepositories(projectKey);\n\n    this.setState(({ loadingRepositories, repositories }) => ({\n      loadingRepositories: { ...loadingRepositories, [projectKey]: false },\n      repositories: { ...repositories, [projectKey]: projectRepos }\n    }));\n  };\n\n  handleSearchRepositories = async (searchQuery: string) => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return;\n    }\n\n    if (searchQuery.length === 0) {\n      this.setState({ searchResults: undefined, searchQuery: undefined });\n      return;\n    }\n\n    this.setState({ searching: true });\n\n    const results: AzureRepository[] = await searchAzureRepositories(settings.key, searchQuery)\n      .then(({ repositories }) => repositories)\n      .catch(() => []);\n\n    if (this.mounted) {\n      this.setState({\n        searching: false,\n        searchResults: groupBy(results, 'projectName'),\n        searchQuery\n      });\n    }\n  };\n\n  handleImportRepository = async () => {\n    const { selectedRepository, settings } = this.state;\n\n    if (!settings || !selectedRepository) {\n      return;\n    }\n\n    this.setState({ importing: true });\n\n    const createdProject = await importAzureRepository(\n      settings.key,\n      selectedRepository.projectName,\n      selectedRepository.name\n    )\n      .then(({ project }) => project)\n      .catch(() => undefined);\n\n    if (this.mounted) {\n      this.setState({ importing: false });\n      if (createdProject) {\n        this.props.onProjectCreate([createdProject.key]);\n      }\n    }\n  };\n\n  handleSelectRepository = (selectedRepository: AzureRepository) => {\n    this.setState({ selectedRepository });\n  };\n\n  checkPersonalAccessToken = () => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(false);\n    }\n\n    return checkPersonalAccessTokenIsValid(settings.key).then(({ status }) => status);\n  };\n\n  handlePersonalAccessTokenCreate = async (token: string) => {\n    const { settings } = this.state;\n\n    if (!settings || token.length < 1) {\n      return;\n    }\n\n    this.setState({ submittingToken: true, tokenValidationFailed: false });\n\n    try {\n      await setAlmPersonalAccessToken(settings.key, token);\n      const patIsValid = await this.checkPersonalAccessToken();\n\n      if (this.mounted) {\n        this.setState({ submittingToken: false, patIsValid, tokenValidationFailed: !patIsValid });\n\n        if (patIsValid) {\n          this.cleanUrl();\n          this.fetchInitialData();\n        }\n      }\n    } catch (e) {\n      if (this.mounted) {\n        this.setState({ submittingToken: false });\n      }\n    }\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      importing,\n      loading,\n      loadingRepositories,\n      patIsValid,\n      projects,\n      repositories,\n      searching,\n      searchResults,\n      searchQuery,\n      selectedRepository,\n      settings,\n      submittingToken,\n      tokenValidationFailed\n    } = this.state;\n\n    return (\n      <AzureCreateProjectRenderer\n        canAdmin={canAdmin}\n        importing={importing}\n        loading={loading || loadingBindings}\n        loadingRepositories={loadingRepositories}\n        onImportRepository={this.handleImportRepository}\n        onOpenProject={this.handleOpenProject}\n        onPersonalAccessTokenCreate={this.handlePersonalAccessTokenCreate}\n        onSearch={this.handleSearchRepositories}\n        onSelectRepository={this.handleSelectRepository}\n        projects={projects}\n        repositories={repositories}\n        searching={searching}\n        searchResults={searchResults}\n        searchQuery={searchQuery}\n        selectedRepository={selectedRepository}\n        settings={settings}\n        showPersonalAccessTokenForm={!patIsValid || Boolean(location.query.resetPat)}\n        submittingToken={submittingToken}\n        tokenValidationFailed={tokenValidationFailed}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport BoxedGroupAccordion from 'sonar-ui-common/components/controls/BoxedGroupAccordion';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../app/theme';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketProjectAccordionProps {\n  disableRepositories: boolean;\n  onClick?: () => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  open: boolean;\n  project?: BitbucketProject;\n  repositories: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showingAllRepositories: boolean;\n}\n\nexport default function BitbucketProjectAccordion(props: BitbucketProjectAccordionProps) {\n  const {\n    disableRepositories,\n    open,\n    project,\n    repositories,\n    selectedRepository,\n    showingAllRepositories\n  } = props;\n\n  const repositoryCount = repositories.length;\n\n  const title = project?.name ?? translate('search_results');\n\n  return (\n    <BoxedGroupAccordion\n      className={classNames('big-spacer-bottom', {\n        open,\n        'not-clickable': !props.onClick,\n        'no-hover': !props.onClick\n      })}\n      onClick={\n        props.onClick\n          ? props.onClick\n          : () => {\n              /* noop */\n            }\n      }\n      open={open}\n      title={<h3>{title}</h3>}>\n      {open && (\n        <>\n          <div className=\"display-flex-wrap\">\n            {repositoryCount === 0 && (\n              <Alert variant=\"warning\">\n                <FormattedMessage\n                  defaultMessage={translate('onboarding.create_project.no_bbs_repos')}\n                  id=\"onboarding.create_project.no_bbs_repos\"\n                  values={{\n                    link: (\n                      <Link\n                        to={{\n                          pathname: '/projects/create',\n                          query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                        }}>\n                        {translate('onboarding.create_project.update_your_token')}\n                      </Link>\n                    )\n                  }}\n                />\n              </Alert>\n            )}\n\n            {repositories.map(repo =>\n              repo.sqProjectKey ? (\n                <div\n                  className=\"display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo\"\n                  key={repo.id}>\n                  <CheckIcon className=\"spacer-right\" fill={colors.green} size={14} />\n                  <div className=\"overflow-hidden\">\n                    <div className=\"little-spacer-bottom text-ellipsis\">\n                      <strong title={repo.name}>\n                        <Link to={getProjectUrl(repo.sqProjectKey)}>{repo.name}</Link>\n                      </strong>\n                    </div>\n                    <em>{translate('onboarding.create_project.repository_imported')}</em>\n                  </div>\n                </div>\n              ) : (\n                <Radio\n                  checked={selectedRepository?.id === repo.id}\n                  className={classNames(\n                    'display-flex-start spacer-right spacer-bottom create-project-import-bbs-repo overflow-hidden',\n                    {\n                      disabled: disableRepositories,\n                      'text-muted': disableRepositories,\n                      'link-no-underline': disableRepositories\n                    }\n                  )}\n                  key={repo.id}\n                  onCheck={() => props.onSelectRepository(repo)}\n                  value={String(repo.id)}>\n                  <strong className=\"text-ellipsis\" title={repo.name}>\n                    {repo.name}\n                  </strong>\n                </Radio>\n              )\n            )}\n          </div>\n\n          {!showingAllRepositories && repositoryCount > 0 && (\n            <Alert variant=\"warning\">\n              {translateWithParameters(\n                'onboarding.create_project.only_showing_X_first_repos',\n                repositoryCount\n              )}\n            </Alert>\n          )}\n        </>\n      )}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq, without } from 'lodash';\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketRepositoriesProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  projectRepositories: BitbucketProjectRepositories;\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketRepositories(props: BitbucketRepositoriesProps) {\n  const { disableRepositories, projects, projectRepositories, selectedRepository } = props;\n\n  const [openProjectKeys, setOpenProjectKeys] = React.useState(\n    projects.length > 0 ? [projects[0].key] : []\n  );\n\n  const allAreExpanded = projects.length <= openProjectKeys.length;\n\n  const handleClick = (isOpen: boolean, projectKey: string) => {\n    setOpenProjectKeys(\n      isOpen ? without(openProjectKeys, projectKey) : uniq([...openProjectKeys, projectKey])\n    );\n  };\n\n  return (\n    <>\n      <div className=\"overflow-hidden spacer-bottom\">\n        <ButtonLink\n          className=\"pull-right\"\n          onClick={() => setOpenProjectKeys(allAreExpanded ? [] : projects.map(p => p.key))}>\n          {allAreExpanded ? translate('collapse_all') : translate('expand_all')}\n        </ButtonLink>\n      </div>\n\n      {projects.map(project => {\n        const isOpen = openProjectKeys.includes(project.key);\n        const { allShown, repositories = [] } = projectRepositories[project.key] || {};\n\n        return (\n          <BitbucketProjectAccordion\n            disableRepositories={disableRepositories}\n            key={project.key}\n            onClick={() => handleClick(isOpen, project.key)}\n            onSelectRepository={props.onSelectRepository}\n            open={isOpen}\n            project={project}\n            repositories={repositories}\n            selectedRepository={selectedRepository}\n            showingAllRepositories={allShown}\n          />\n        );\n      })}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { BitbucketProject, BitbucketRepository } from '../../../types/alm-integration';\nimport BitbucketProjectAccordion from './BitbucketProjectAccordion';\n\nexport interface BitbucketSearchResultsProps {\n  disableRepositories: boolean;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects: BitbucketProject[];\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketSearchResults(props: BitbucketSearchResultsProps) {\n  const {\n    disableRepositories,\n    projects,\n    searching,\n    searchResults = [],\n    selectedRepository\n  } = props;\n\n  if (searchResults.length === 0 && !searching) {\n    return (\n      <Alert className=\"big-spacer-top\" variant=\"warning\">\n        {translate('onboarding.create_project.no_bbs_repos.filter')}\n      </Alert>\n    );\n  }\n\n  const filteredProjects = projects.filter(p => searchResults.some(r => r.projectKey === p.key));\n  const filteredProjectKeys = filteredProjects.map(p => p.key);\n  const filteredSearchResults = searchResults.filter(\n    r => !filteredProjectKeys.includes(r.projectKey)\n  );\n\n  return (\n    <div className=\"big-spacer-top\">\n      <DeferredSpinner loading={searching}>\n        {filteredSearchResults.length > 0 && (\n          <BitbucketProjectAccordion\n            disableRepositories={disableRepositories}\n            onSelectRepository={props.onSelectRepository}\n            open={true}\n            repositories={filteredSearchResults}\n            selectedRepository={selectedRepository}\n            showingAllRepositories={true}\n          />\n        )}\n\n        {filteredProjects.map(project => {\n          const repositories = searchResults.filter(r => r.projectKey === project.key);\n\n          return (\n            <BitbucketProjectAccordion\n              disableRepositories={disableRepositories}\n              key={project.key}\n              onSelectRepository={props.onSelectRepository}\n              open={true}\n              project={project}\n              repositories={repositories}\n              selectedRepository={selectedRepository}\n              showingAllRepositories={true}\n            />\n          );\n        })}\n      </DeferredSpinner>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport BitbucketRepositories from './BitbucketRepositories';\nimport BitbucketSearchResults from './BitbucketSearchResults';\nimport { CreateProjectModes } from './types';\n\nexport interface BitbucketImportRepositoryFormProps {\n  disableRepositories: boolean;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n}\n\nexport default function BitbucketImportRepositoryForm(props: BitbucketImportRepositoryFormProps) {\n  const {\n    disableRepositories,\n    projects = [],\n    projectRepositories = {},\n    searchResults,\n    searching,\n    selectedRepository\n  } = props;\n\n  if (projects.length === 0) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.no_bbs_projects')}\n          id=\"onboarding.create_project.no_bbs_projects\"\n          values={{\n            link: (\n              <Link\n                to={{\n                  pathname: '/projects/create',\n                  query: { mode: CreateProjectModes.BitbucketServer, resetPat: 1 }\n                }}>\n                {translate('onboarding.create_project.update_your_token')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"create-project-import-bbs\">\n      <SearchBox\n        onChange={props.onSearch}\n        placeholder={translate('onboarding.create_project.search_repositories_by_name')}\n      />\n\n      {searching || searchResults ? (\n        <BitbucketSearchResults\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projects={projects}\n          searchResults={searchResults}\n          searching={searching}\n          selectedRepository={selectedRepository}\n        />\n      ) : (\n        <BitbucketRepositories\n          disableRepositories={disableRepositories}\n          onSelectRepository={props.onSelectRepository}\n          projectRepositories={projectRepositories}\n          projects={projects}\n          selectedRepository={selectedRepository}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\n\nexport interface PersonalAccessTokenFormProps {\n  almSetting: AlmSettingsInstance;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  submitting?: boolean;\n  validationFailed: boolean;\n  validationErrorMessage?: string;\n}\n\nfunction getPatUrl(alm: AlmKeys, url: string) {\n  if (alm === AlmKeys.BitbucketServer) {\n    return `${url.replace(/\\/$/, '')}/plugins/servlet/access-tokens/add`;\n  } else {\n    // GitLab\n    return url.endsWith('/api/v4')\n      ? `${url.replace('/api/v4', '').replace(/\\/$/, '')}/profile/personal_access_tokens`\n      : 'https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#creating-a-personal-access-token';\n  }\n}\n\nexport default function PersonalAccessTokenForm(props: PersonalAccessTokenFormProps) {\n  const {\n    almSetting: { alm, url },\n    submitting = false,\n    validationFailed,\n    validationErrorMessage\n  } = props;\n  const [touched, setTouched] = React.useState(false);\n\n  React.useEffect(() => {\n    setTouched(false);\n  }, [submitting]);\n\n  const isInvalid = validationFailed && !touched;\n  const errorMessage =\n    validationErrorMessage ?? translate('onboarding.create_project.pat_incorrect', alm);\n\n  return (\n    <div className=\"display-flex-start\">\n      <form\n        className=\"width-50\"\n        onSubmit={(e: React.SyntheticEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          const value = new FormData(e.currentTarget).get('personal_access_token') as string;\n          props.onPersonalAccessTokenCreate(value);\n        }}>\n        <h2 className=\"big\">{translate('onboarding.create_project.pat_form.title', alm)}</h2>\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_form.help', alm)}\n        </p>\n\n        <ValidationInput\n          error={isInvalid ? errorMessage : undefined}\n          id=\"personal_access_token\"\n          isInvalid={isInvalid}\n          isValid={false}\n          label={translate('onboarding.create_project.enter_pat')}\n          required={true}>\n          <input\n            autoFocus={true}\n            className={classNames('input-super-large', {\n              'is-invalid': isInvalid\n            })}\n            id=\"personal_access_token\"\n            minLength={1}\n            name=\"personal_access_token\"\n            onChange={() => {\n              setTouched(true);\n            }}\n            type=\"text\"\n          />\n        </ValidationInput>\n\n        <SubmitButton disabled={isInvalid || submitting || !touched}>\n          {translate('save')}\n        </SubmitButton>\n        <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n      </form>\n\n      <Alert className=\"big-spacer-left width-50\" display=\"block\" variant=\"info\">\n        <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          <FormattedMessage\n            id=\"onboarding.create_project.pat_help.instructions\"\n            defaultMessage={translate('onboarding.create_project.pat_help.instructions')}\n            values={{ alm: translate('onboarding.alm', alm) }}\n          />\n        </p>\n\n        {url && (\n          <div className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"16\"\n              src={`${getBaseUrl()}/images/alm/${alm}.svg`}\n            />\n            <a href={getPatUrl(alm, url)} rel=\"noopener noreferrer\" target=\"_blank\">\n              {translate('onboarding.create_project.pat_help.link')}\n            </a>\n          </div>\n        )}\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          {translate('onboarding.create_project.pat_help.instructions2', alm)}\n        </p>\n\n        <ul>\n          {alm === AlmKeys.BitbucketServer && (\n            <>\n              <li>\n                <FormattedMessage\n                  defaultMessage={translate(\n                    'onboarding.create_project.pat_help.bbs_permission_projects'\n                  )}\n                  id=\"onboarding.create_project.pat_help.bbs_permission_projects\"\n                  values={{\n                    perm: (\n                      <strong>\n                        {translate('onboarding.create_project.pat_help.read_permission')}\n                      </strong>\n                    )\n                  }}\n                />\n              </li>\n              <li>\n                <FormattedMessage\n                  defaultMessage={translate(\n                    'onboarding.create_project.pat_help.bbs_permission_repos'\n                  )}\n                  id=\"onboarding.create_project.pat_help.bbs_permission_repos\"\n                  values={{\n                    perm: (\n                      <strong>\n                        {translate('onboarding.create_project.pat_help.read_permission')}\n                      </strong>\n                    )\n                  }}\n                />\n              </li>\n            </>\n          )}\n          {alm === AlmKeys.GitLab && (\n            <li className=\"spacer-bottom\">\n              <strong>\n                {translate('onboarding.create_project.pat_help.gitlab.read_api_permission')}\n              </strong>\n            </li>\n          )}\n        </ul>\n      </Alert>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketImportRepositoryForm from './BitbucketImportRepositoryForm';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport PersonalAccessTokenForm from './PersonalAccessTokenForm';\nimport WrongBindingCountAlert from './WrongBindingCountAlert';\n\nexport interface BitbucketProjectCreateRendererProps {\n  bitbucketSetting?: AlmSettingsInstance;\n  canAdmin?: boolean;\n  importing: boolean;\n  loading: boolean;\n  onImportRepository: () => void;\n  onSearch: (query: string) => void;\n  onSelectRepository: (repo: BitbucketRepository) => void;\n  onPersonalAccessTokenCreate: (token: string) => void;\n  onProjectCreate: (projectKeys: string[]) => void;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  showPersonalAccessTokenForm?: boolean;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default function BitbucketProjectCreateRenderer(props: BitbucketProjectCreateRendererProps) {\n  const {\n    bitbucketSetting,\n    canAdmin,\n    importing,\n    loading,\n    projects,\n    projectRepositories,\n    selectedRepository,\n    searching,\n    searchResults,\n    showPersonalAccessTokenForm,\n    submittingToken,\n    tokenValidationFailed\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        additionalActions={\n          !showPersonalAccessTokenForm && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n            />\n            {translate('onboarding.create_project.from_bbs')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !bitbucketSetting && (\n        <WrongBindingCountAlert alm={AlmKeys.BitbucketServer} canAdmin={!!canAdmin} />\n      )}\n\n      {!loading &&\n        bitbucketSetting &&\n        (showPersonalAccessTokenForm ? (\n          <PersonalAccessTokenForm\n            almSetting={bitbucketSetting}\n            onPersonalAccessTokenCreate={props.onPersonalAccessTokenCreate}\n            submitting={submittingToken}\n            validationFailed={tokenValidationFailed}\n          />\n        ) : (\n          <BitbucketImportRepositoryForm\n            disableRepositories={importing}\n            onSearch={props.onSearch}\n            onSelectRepository={props.onSelectRepository}\n            projectRepositories={projectRepositories}\n            projects={projects}\n            searchResults={searchResults}\n            searching={searching}\n            selectedRepository={selectedRepository}\n          />\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  checkPersonalAccessTokenIsValid,\n  getBitbucketServerProjects,\n  getBitbucketServerRepositories,\n  importBitbucketServerProject,\n  searchForBitbucketServerRepositories,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport {\n  BitbucketProject,\n  BitbucketProjectRepositories,\n  BitbucketRepository\n} from '../../../types/alm-integration';\nimport { AlmSettingsInstance } from '../../../types/alm-settings';\nimport BitbucketCreateProjectRenderer from './BitbucketProjectCreateRenderer';\nimport { DEFAULT_BBS_PAGE_SIZE } from './constants';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  canAdmin: boolean;\n  bitbucketSettings: AlmSettingsInstance[];\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n}\n\ninterface State {\n  bitbucketSetting?: AlmSettingsInstance;\n  importing: boolean;\n  loading: boolean;\n  patIsValid?: boolean;\n  projects?: BitbucketProject[];\n  projectRepositories?: BitbucketProjectRepositories;\n  searching: boolean;\n  searchResults?: BitbucketRepository[];\n  selectedRepository?: BitbucketRepository;\n  submittingToken?: boolean;\n  tokenValidationFailed: boolean;\n}\n\nexport default class BitbucketProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      // For now, we only handle a single instance. So we always use the first\n      // one from the list.\n      bitbucketSetting: props.bitbucketSettings[0],\n      importing: false,\n      loading: false,\n      searching: false,\n      tokenValidationFailed: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchInitialData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.bitbucketSettings.length === 0 && this.props.bitbucketSettings.length > 0) {\n      this.setState({ bitbucketSetting: this.props.bitbucketSettings[0] }, () =>\n        this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    this.setState({ loading: true });\n\n    const patIsValid = await this.checkPersonalAccessToken().catch(() => false);\n\n    let projects;\n    if (patIsValid) {\n      projects = await this.fetchBitbucketProjects().catch(() => undefined);\n    }\n\n    let projectRepositories;\n    if (projects && projects.length > 0) {\n      projectRepositories = await this.fetchBitbucketRepositories(projects).catch(() => undefined);\n    }\n\n    if (this.mounted) {\n      this.setState({\n        patIsValid,\n        projects,\n        projectRepositories,\n        loading: false\n      });\n    }\n  };\n\n  checkPersonalAccessToken = () => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(false);\n    }\n\n    return checkPersonalAccessTokenIsValid(bitbucketSetting.key).then(({ status }) => status);\n  };\n\n  fetchBitbucketProjects = (): Promise<BitbucketProject[] | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return getBitbucketServerProjects(bitbucketSetting.key).then(({ projects }) => projects);\n  };\n\n  fetchBitbucketRepositories = (\n    projects: BitbucketProject[]\n  ): Promise<BitbucketProjectRepositories | undefined> => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return Promise.resolve(undefined);\n    }\n\n    return Promise.all(\n      projects.map(p => {\n        return getBitbucketServerRepositories(bitbucketSetting.key, p.name).then(\n          ({ isLastPage, repositories }) => {\n            // Because the WS uses the project name rather than its key to find\n            // repositories, we can match more repositories than we expect. For\n            // example, p.name = \"A1\" would find repositories for projects \"A1\",\n            // \"A10\", \"A11\", etc. This is a limitation of BBS. To make sure we\n            // don't display incorrect information, filter on the project key.\n            const filteredRepositories = repositories.filter(r => r.projectKey === p.key);\n\n            // And because of the above, the \"isLastPage\" cannot be relied upon\n            // either. This one is impossible to get 100% for now. We can only\n            // make some assumptions: by default, the page size for BBS is 25\n            // (this is not part of the payload, so we don't know the actual\n            // number; but changing this implies changing some advanced config,\n            // so it's not likely). If the filtered repos is larger than this\n            // number AND isLastPage is false, we'll keep it at false.\n            // Otherwise, we assume it's true.\n            const realIsLastPage =\n              isLastPage || filteredRepositories.length < DEFAULT_BBS_PAGE_SIZE;\n\n            return {\n              repositories: filteredRepositories,\n              isLastPage: realIsLastPage,\n              projectKey: p.key\n            };\n          }\n        );\n      })\n    ).then(results => {\n      return results.reduce(\n        (acc: BitbucketProjectRepositories, { isLastPage, projectKey, repositories }) => {\n          return { ...acc, [projectKey]: { allShown: isLastPage, repositories } };\n        },\n        {}\n      );\n    });\n  };\n\n  handlePersonalAccessTokenCreate = (token: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting || token.length < 1) {\n      return;\n    }\n\n    this.setState({ submittingToken: true, tokenValidationFailed: false });\n    setAlmPersonalAccessToken(bitbucketSetting.key, token)\n      .then(this.checkPersonalAccessToken)\n      .then(patIsValid => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false, patIsValid, tokenValidationFailed: !patIsValid });\n          if (patIsValid) {\n            this.fetchInitialData();\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submittingToken: false });\n        }\n      });\n  };\n\n  handleImportRepository = () => {\n    const { bitbucketSetting, selectedRepository } = this.state;\n\n    if (!bitbucketSetting || !selectedRepository) {\n      return;\n    }\n\n    this.setState({ importing: true });\n    importBitbucketServerProject(\n      bitbucketSetting.key,\n      selectedRepository.projectKey,\n      selectedRepository.slug\n    )\n      .then(({ project: { key } }) => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n          this.props.onProjectCreate([key]);\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ importing: false });\n        }\n      });\n  };\n\n  handleSearch = (query: string) => {\n    const { bitbucketSetting } = this.state;\n\n    if (!bitbucketSetting) {\n      return;\n    }\n\n    if (!query) {\n      this.setState({ searching: false, searchResults: undefined, selectedRepository: undefined });\n      return;\n    }\n\n    this.setState({ searching: true, selectedRepository: undefined });\n    searchForBitbucketServerRepositories(bitbucketSetting.key, query)\n      .then(({ repositories }) => {\n        if (this.mounted) {\n          this.setState({ searching: false, searchResults: repositories });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ searching: false });\n        }\n      });\n  };\n\n  handleSelectRepository = (selectedRepository: BitbucketRepository) => {\n    this.setState({ selectedRepository });\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      bitbucketSetting,\n      importing,\n      loading,\n      patIsValid,\n      projectRepositories,\n      projects,\n      searching,\n      searchResults,\n      selectedRepository,\n      submittingToken,\n      tokenValidationFailed\n    } = this.state;\n\n    return (\n      <BitbucketCreateProjectRenderer\n        bitbucketSetting={bitbucketSetting}\n        canAdmin={canAdmin}\n        importing={importing}\n        loading={loading || loadingBindings}\n        onImportRepository={this.handleImportRepository}\n        onPersonalAccessTokenCreate={this.handlePersonalAccessTokenCreate}\n        onProjectCreate={this.props.onProjectCreate}\n        onSearch={this.handleSearch}\n        onSelectRepository={this.handleSelectRepository}\n        projectRepositories={projectRepositories}\n        projects={projects}\n        searchResults={searchResults}\n        searching={searching}\n        selectedRepository={selectedRepository}\n        showPersonalAccessTokenForm={!patIsValid || Boolean(location.query.resetPat)}\n        submittingToken={submittingToken}\n        tokenValidationFailed={tokenValidationFailed}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const PROJECT_NAME_MAX_LEN = 255;\n\nexport const DEFAULT_BBS_PAGE_SIZE = 25;\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport DocumentationTooltip from '../../../components/common/DocumentationTooltip';\nimport { withAppState } from '../../../components/hoc/withAppState';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../helpers/constants';\nimport { AlmKeys } from '../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../../settings/components/AdditionalCategoryKeys';\nimport { CreateProjectModes } from './types';\n\nexport interface CreateProjectModeSelectionProps {\n  almCounts: {\n    [AlmKeys.Azure]: number;\n    [AlmKeys.BitbucketServer]: number;\n    [AlmKeys.GitLab]: number;\n    [AlmKeys.GitHub]: number;\n  };\n  appState: Pick<T.AppState, 'canAdmin'>;\n  loadingBindings: boolean;\n  onSelectMode: (mode: CreateProjectModes) => void;\n}\n\nfunction renderAlmOption(\n  props: CreateProjectModeSelectionProps,\n  alm: AlmKeys.Azure | AlmKeys.BitbucketServer | AlmKeys.GitHub | AlmKeys.GitLab,\n  mode: CreateProjectModes\n) {\n  const {\n    almCounts,\n    appState: { canAdmin },\n    loadingBindings\n  } = props;\n\n  const count = almCounts[alm];\n  const disabled = count !== 1 || loadingBindings;\n\n  const tooltipLinks = [];\n  if (count === 0) {\n    if (canAdmin) {\n      tooltipLinks.push({\n        href: `/admin/settings?category=${ALM_INTEGRATION}&alm=${alm}`,\n        label: translateWithParameters(\n          'onboarding.create_project.set_up_x',\n          translate('alm', alm, 'short')\n        )\n      });\n    }\n\n    tooltipLinks.push({\n      href: ALM_DOCUMENTATION_PATHS[alm],\n      label: translateWithParameters(\n        'onboarding.create_project.help_set_up_x',\n        translate('alm', alm, 'short')\n      )\n    });\n  }\n\n  return (\n    <div className=\"big-spacer-left display-flex-column\">\n      <button\n        className={classNames(\n          'button button-huge display-flex-column create-project-mode-type-alm',\n          { disabled }\n        )}\n        disabled={disabled}\n        onClick={() => props.onSelectMode(mode)}\n        type=\"button\">\n        <img\n          alt=\"\" // Should be ignored by screen readers\n          height={80}\n          src={`${getBaseUrl()}/images/alm/${alm}.svg`}\n        />\n        <div className=\"medium big-spacer-top abs-height-50 display-flex-center\">\n          {translate('onboarding.create_project.select_method', alm)}\n        </div>\n\n        {loadingBindings && (\n          <span>\n            {translate('onboarding.create_project.check_alm_supported')}\n            <i className=\"little-spacer-left spinner\" />\n          </span>\n        )}\n\n        {!loadingBindings && disabled && (\n          <div className=\"text-muted small spacer-top\" style={{ lineHeight: 1.5 }}>\n            {translate('onboarding.create_project.alm_not_configured')}\n            <DocumentationTooltip\n              className=\"little-spacer-left\"\n              content={\n                count === 0\n                  ? translate('onboarding.create_project.zero_alm_instances', alm)\n                  : `${translate('onboarding.create_project.too_many_alm_instances', alm)} \n                ${translateWithParameters(\n                  'onboarding.create_project.alm_instances_count_X',\n                  count\n                )}`\n              }\n              links={count === 0 ? tooltipLinks : undefined}\n            />\n          </div>\n        )}\n      </button>\n    </div>\n  );\n}\n\nexport function CreateProjectModeSelection(props: CreateProjectModeSelectionProps) {\n  return (\n    <>\n      <header className=\"huge-spacer-top big-spacer-bottom padded\">\n        <h1 className=\"text-center huge big-spacer-bottom\">\n          {translate('my_account.create_new.TRK')}\n        </h1>\n        <p className=\"text-center big\">{translate('onboarding.create_project.select_method')}</p>\n      </header>\n\n      <div className=\"create-project-modes huge-spacer-top display-flex-justify-center\">\n        <button\n          className=\"button button-huge display-flex-column create-project-mode-type-manual\"\n          onClick={() => props.onSelectMode(CreateProjectModes.Manual)}\n          type=\"button\">\n          <img\n            alt=\"\" // Should be ignored by screen readers\n            height={80}\n            src={`${getBaseUrl()}/images/sonarcloud/analysis/manual.svg`}\n          />\n          <div className=\"medium big-spacer-top\">\n            {translate('onboarding.create_project.select_method.manual')}\n          </div>\n        </button>\n\n        {renderAlmOption(props, AlmKeys.Azure, CreateProjectModes.AzureDevOps)}\n        {renderAlmOption(props, AlmKeys.BitbucketServer, CreateProjectModes.BitbucketServer)}\n        {renderAlmOption(props, AlmKeys.GitHub, CreateProjectModes.GitHub)}\n        {renderAlmOption(props, AlmKeys.GitLab, CreateProjectModes.GitLab)}\n      </div>\n    </>\n  );\n}\n\nexport default withAppState(CreateProjectModeSelection);\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport Radio from 'sonar-ui-common/components/controls/Radio';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport SearchSelect from 'sonar-ui-common/components/controls/SearchSelect';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/system';\nimport { GithubOrganization, GithubRepository } from '../../../types/alm-integration';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\n\nexport interface GitHubProjectCreateRendererProps {\n  canAdmin: boolean;\n  error: boolean;\n  importing: boolean;\n  loadingBindings: boolean;\n  loadingOrganizations: boolean;\n  loadingRepositories: boolean;\n  onImportRepository: () => void;\n  onLoadMore: () => void;\n  onSearch: (q: string) => void;\n  onSelectOrganization: (key: string) => void;\n  onSelectRepository: (key: string) => void;\n  organizations: GithubOrganization[];\n  repositories?: GithubRepository[];\n  repositoryPaging: T.Paging;\n  searchQuery: string;\n  selectedOrganization?: GithubOrganization;\n  selectedRepository?: GithubRepository;\n}\n\nfunction orgToOption({ key, name }: GithubOrganization) {\n  return { value: key, label: name };\n}\n\nconst handleSearch = (organizations: GithubOrganization[]) => (q: string) =>\n  Promise.resolve(organizations.filter(o => !q || o.name.includes(q)).map(orgToOption));\n\nfunction renderRepositoryList(props: GitHubProjectCreateRendererProps) {\n  const {\n    importing,\n    loadingRepositories,\n    repositories,\n    repositoryPaging,\n    searchQuery,\n    selectedOrganization,\n    selectedRepository\n  } = props;\n\n  const isChecked = (repository: GithubRepository) =>\n    !!repository.sqProjectKey ||\n    (!!selectedRepository && selectedRepository.key === repository.key);\n\n  const isDisabled = (repository: GithubRepository) =>\n    !!repository.sqProjectKey || loadingRepositories || importing;\n\n  return (\n    selectedOrganization &&\n    repositories && (\n      <div className=\"boxed-group padded display-flex-wrap\">\n        <div className=\"width-100\">\n          <SearchBox\n            className=\"big-spacer-bottom\"\n            onChange={props.onSearch}\n            placeholder={translate('onboarding.create_project.search_repositories')}\n            value={searchQuery}\n          />\n        </div>\n\n        {repositories.length === 0 ? (\n          <div className=\"padded\">\n            <DeferredSpinner loading={loadingRepositories}>\n              {translate('no_results')}\n            </DeferredSpinner>\n          </div>\n        ) : (\n          repositories.map(r => (\n            <Radio\n              className=\"spacer-top spacer-bottom padded create-project-github-repository\"\n              key={r.key}\n              checked={isChecked(r)}\n              disabled={isDisabled(r)}\n              value={r.key}\n              onCheck={props.onSelectRepository}>\n              <div className=\"big overflow-hidden\" title={r.name}>\n                <div className=\"text-ellipsis\">{r.name}</div>\n                {r.sqProjectKey && (\n                  <em className=\"notice text-muted-2 small display-flex-center\">\n                    {translate('onboarding.create_project.repository_imported')}\n                    <CheckIcon className=\"little-spacer-left\" size={12} />\n                  </em>\n                )}\n              </div>\n            </Radio>\n          ))\n        )}\n\n        <div className=\"display-flex-justify-center width-100\">\n          <ListFooter\n            count={repositories.length}\n            total={repositoryPaging.total}\n            loadMore={props.onLoadMore}\n            loading={loadingRepositories}\n          />\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default function GitHubProjectCreateRenderer(props: GitHubProjectCreateRendererProps) {\n  const {\n    canAdmin,\n    error,\n    importing,\n    loadingBindings,\n    loadingOrganizations,\n    organizations,\n    selectedOrganization,\n    selectedRepository\n  } = props;\n\n  if (loadingBindings) {\n    return <DeferredSpinner />;\n  }\n\n  return (\n    <div>\n      <CreateProjectPageHeader\n        additionalActions={\n          selectedOrganization && (\n            <div className=\"display-flex-center pull-right\">\n              <DeferredSpinner className=\"spacer-right\" loading={importing} />\n              <Button\n                className=\"button-large button-primary\"\n                disabled={!selectedRepository || importing}\n                onClick={props.onImportRepository}>\n                {translate('onboarding.create_project.import_selected_repo')}\n              </Button>\n            </div>\n          )\n        }\n        title={\n          <span className=\"text-middle display-flex-center\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height={24}\n              src={`${getBaseUrl()}/images/alm/github.svg`}\n            />\n            {translate('onboarding.create_project.github.title')}\n          </span>\n        }\n      />\n\n      {error ? (\n        <div className=\"display-flex-justify-center\">\n          <div className=\"boxed-group padded width-50 huge-spacer-top\">\n            <h2 className=\"big-spacer-bottom\">\n              {translate('onboarding.create_project.github.warning.title')}\n            </h2>\n            <Alert variant=\"warning\">\n              {canAdmin ? (\n                <FormattedMessage\n                  id=\"onboarding.create_project.github.warning.message_admin\"\n                  defaultMessage={translate(\n                    'onboarding.create_project.github.warning.message_admin'\n                  )}\n                  values={{\n                    link: (\n                      <Link to=\"/admin/settings?category=almintegration\">\n                        {translate('onboarding.create_project.github.warning.message_admin.link')}\n                      </Link>\n                    )\n                  }}\n                />\n              ) : (\n                translate('onboarding.create_project.github.warning.message')\n              )}\n            </Alert>\n          </div>\n        </div>\n      ) : (\n        <DeferredSpinner loading={loadingOrganizations}>\n          <div className=\"form-field\">\n            <label>{translate('onboarding.create_project.github.choose_organization')}</label>\n            {organizations.length > 0 ? (\n              <SearchSelect\n                defaultOptions={organizations.map(orgToOption)}\n                onSearch={handleSearch(organizations)}\n                minimumQueryLength={0}\n                onSelect={({ value }) => props.onSelectOrganization(value)}\n                value={selectedOrganization && orgToOption(selectedOrganization)}\n              />\n            ) : (\n              !loadingOrganizations && (\n                <Alert className=\"spacer-top\" variant=\"error\">\n                  {canAdmin ? (\n                    <FormattedMessage\n                      id=\"onboarding.create_project.github.no_orgs_admin\"\n                      defaultMessage={translate('onboarding.create_project.github.no_orgs_admin')}\n                      values={{\n                        link: (\n                          <Link to=\"/admin/settings?category=almintegration\">\n                            {translate(\n                              'onboarding.create_project.github.warning.message_admin.link'\n                            )}\n                          </Link>\n                        )\n                      }}\n                    />\n                  ) : (\n                    translate('onboarding.create_project.github.no_orgs')\n                  )}\n                </Alert>\n              )\n            )}\n          </div>\n        </DeferredSpinner>\n      )}\n\n      {renderRepositoryList(props)}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport { getHostUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  getGithubClientId,\n  getGithubOrganizations,\n  getGithubRepositories,\n  importGithubRepository\n} from '../../../api/alm-integrations';\nimport { GithubOrganization, GithubRepository } from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport GitHubProjectCreateRenderer from './GitHubProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location' | 'router'> {\n  canAdmin: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n  settings: AlmSettingsInstance[];\n}\n\ninterface State {\n  error: boolean;\n  importing: boolean;\n  loadingOrganizations: boolean;\n  loadingRepositories: boolean;\n  organizations: GithubOrganization[];\n  repositoryPaging: T.Paging;\n  repositories: GithubRepository[];\n  searchQuery: string;\n  selectedOrganization?: GithubOrganization;\n  selectedRepository?: GithubRepository;\n  settings?: AlmSettingsInstance;\n}\n\nconst REPOSITORY_PAGE_SIZE = 30;\n\nexport default class GitHubProjectCreate extends React.Component<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      error: false,\n      importing: false,\n      loadingOrganizations: true,\n      loadingRepositories: false,\n      organizations: [],\n      repositories: [],\n      repositoryPaging: { pageSize: REPOSITORY_PAGE_SIZE, total: 0, pageIndex: 1 },\n      searchQuery: '',\n      settings: props.settings[0]\n    };\n\n    this.triggerSearch = debounce(this.triggerSearch, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    this.initialize();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.settings.length === 0 && this.props.settings.length > 0) {\n      this.setState({ settings: this.props.settings[0] }, () => this.initialize());\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  async initialize() {\n    const { location, router } = this.props;\n    const { settings } = this.state;\n\n    if (!settings || !settings.url) {\n      this.setState({ error: true });\n      return;\n    } else {\n      this.setState({ error: false });\n    }\n\n    const code = location.query?.code;\n\n    try {\n      if (!code) {\n        await this.redirectToGithub(settings);\n      } else {\n        delete location.query.code;\n        router.replace(location);\n        await this.fetchOrganizations(settings, code);\n      }\n    } catch (e) {\n      if (this.mounted) {\n        this.setState({ error: true });\n      }\n    }\n  }\n\n  async redirectToGithub(settings: AlmSettingsInstance) {\n    if (!settings.url) {\n      return;\n    }\n\n    const { clientId } = await getGithubClientId(settings.key);\n\n    if (!clientId) {\n      this.setState({ error: true });\n      return;\n    }\n\n    const queryParams = [\n      { param: 'client_id', value: clientId },\n      { param: 'redirect_uri', value: `${getHostUrl()}/projects/create?mode=${AlmKeys.GitHub}` }\n    ]\n      .map(({ param, value }) => `${param}=${value}`)\n      .join('&');\n\n    let instanceRootUrl;\n    // Strip the api section from the url, since we're not hitting the api here.\n    if (settings.url.includes('/api/v3')) {\n      // GitHub Enterprise\n      instanceRootUrl = settings.url.replace('/api/v3', '');\n    } else {\n      // github.com\n      instanceRootUrl = settings.url.replace('api.', '');\n    }\n\n    // strip the trailing /\n    instanceRootUrl = instanceRootUrl.replace(/\\/$/, '');\n    window.location.replace(`${instanceRootUrl}/login/oauth/authorize?${queryParams}`);\n  }\n\n  async fetchOrganizations(settings: AlmSettingsInstance, token: string) {\n    const { organizations } = await getGithubOrganizations(settings.key, token);\n\n    if (this.mounted) {\n      this.setState({ loadingOrganizations: false, organizations });\n    }\n  }\n\n  async fetchRepositories(params: { organizationKey: string; page?: number; query?: string }) {\n    const { organizationKey, page = 1, query } = params;\n    const { settings } = this.state;\n\n    if (!settings) {\n      this.setState({ error: true });\n      return;\n    }\n\n    this.setState({ loadingRepositories: true });\n\n    try {\n      const data = await getGithubRepositories({\n        almSetting: settings.key,\n        organization: organizationKey,\n        pageSize: REPOSITORY_PAGE_SIZE,\n        page,\n        query\n      });\n\n      if (this.mounted) {\n        this.setState(({ repositories }) => ({\n          loadingRepositories: false,\n          repositoryPaging: data.paging,\n          repositories: page === 1 ? data.repositories : [...repositories, ...data.repositories]\n        }));\n      }\n    } catch (_) {\n      if (this.mounted) {\n        this.setState({\n          loadingRepositories: false,\n          repositoryPaging: { pageIndex: 1, pageSize: REPOSITORY_PAGE_SIZE, total: 0 },\n          repositories: []\n        });\n      }\n    }\n  }\n\n  triggerSearch = (query: string) => {\n    const { selectedOrganization } = this.state;\n    if (selectedOrganization) {\n      this.setState({ selectedRepository: undefined });\n      this.fetchRepositories({ organizationKey: selectedOrganization.key, query });\n    }\n  };\n\n  handleSelectOrganization = (key: string) => {\n    this.setState(({ organizations }) => ({\n      searchQuery: '',\n      selectedRepository: undefined,\n      selectedOrganization: organizations.find(o => o.key === key)\n    }));\n    this.fetchRepositories({ organizationKey: key });\n  };\n\n  handleSelectRepository = (key: string) => {\n    this.setState(({ repositories }) => ({\n      selectedRepository: repositories?.find(r => r.key === key)\n    }));\n  };\n\n  handleSearch = (searchQuery: string) => {\n    this.setState({ searchQuery });\n    this.triggerSearch(searchQuery);\n  };\n\n  handleLoadMore = () => {\n    const { repositoryPaging, searchQuery, selectedOrganization } = this.state;\n\n    if (selectedOrganization) {\n      this.fetchRepositories({\n        organizationKey: selectedOrganization.key,\n        page: repositoryPaging.pageIndex + 1,\n        query: searchQuery\n      });\n    }\n  };\n\n  handleImportRepository = async () => {\n    const { selectedOrganization, selectedRepository, settings } = this.state;\n\n    if (settings && selectedOrganization && selectedRepository) {\n      this.setState({ importing: true });\n\n      try {\n        const { project } = await importGithubRepository(\n          settings.key,\n          selectedOrganization.key,\n          selectedRepository.key\n        );\n\n        this.props.onProjectCreate([project.key]);\n      } finally {\n        if (this.mounted) {\n          this.setState({ importing: false });\n        }\n      }\n    }\n  };\n\n  render() {\n    const { canAdmin, loadingBindings } = this.props;\n    const {\n      error,\n      importing,\n      loadingOrganizations,\n      loadingRepositories,\n      organizations,\n      repositoryPaging,\n      repositories,\n      searchQuery,\n      selectedOrganization,\n      selectedRepository\n    } = this.state;\n\n    return (\n      <GitHubProjectCreateRenderer\n        canAdmin={canAdmin}\n        error={error}\n        importing={importing}\n        loadingBindings={loadingBindings}\n        loadingOrganizations={loadingOrganizations}\n        loadingRepositories={loadingRepositories}\n        onImportRepository={this.handleImportRepository}\n        onLoadMore={this.handleLoadMore}\n        onSearch={this.handleSearch}\n        onSelectOrganization={this.handleSelectOrganization}\n        onSelectRepository={this.handleSelectRepository}\n        organizations={organizations}\n        repositoryPaging={repositoryPaging}\n        searchQuery={searchQuery}\n        repositories={repositories}\n        selectedOrganization={selectedOrganization}\n        selectedRepository={selectedRepository}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { formatMeasure } from 'sonar-ui-common/helpers/measures';\n\nexport interface ListFooterProps {\n  count: number;\n  className?: string;\n  loading?: boolean;\n  loadMore?: () => void;\n  needReload?: boolean;\n  pageSize?: number;\n  reload?: () => void;\n  ready?: boolean;\n  total?: number;\n}\n\nexport default function ListFooter(props: ListFooterProps) {\n  const { className, count, loading, needReload, total, pageSize, ready = true } = props;\n\n  let hasMore = false;\n  if (total !== undefined) {\n    hasMore = total > count;\n  } else if (pageSize !== undefined) {\n    hasMore = count % pageSize === 0;\n  }\n\n  let button;\n  if (needReload && props.reload) {\n    button = (\n      <Button className=\"spacer-left\" data-test=\"reload\" disabled={loading} onClick={props.reload}>\n        {translate('reload')}\n      </Button>\n    );\n  } else if (hasMore && props.loadMore) {\n    button = (\n      <Button\n        className=\"spacer-left\"\n        disabled={loading}\n        data-test=\"show-more\"\n        onClick={props.loadMore}>\n        {translate('show_more')}\n      </Button>\n    );\n  }\n\n  return (\n    <footer\n      className={classNames('spacer-top note text-center', { 'new-loading': !ready }, className)}>\n      {total !== undefined\n        ? translateWithParameters(\n            'x_of_y_shown',\n            formatMeasure(count, 'INT', null),\n            formatMeasure(total, 'INT', null)\n          )\n        : translateWithParameters('x_show', formatMeasure(count, 'INT', null))}\n      {button}\n      {loading && <DeferredSpinner className=\"text-bottom spacer-left position-absolute\" />}\n    </footer>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport CheckIcon from 'sonar-ui-common/components/icons/CheckIcon';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport QualifierIcon from 'sonar-ui-common/components/icons/QualifierIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport ListFooter from '../../../components/controls/ListFooter';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { GitlabProject } from '../../../types/alm-integration';\nimport { ComponentQualifier } from '../../../types/component';\nimport { CreateProjectModes } from './types';\n\nexport interface GitlabProjectSelectionFormProps {\n  importingGitlabProjectId?: string;\n  loadingMore: boolean;\n  onImport: (gitlabProjectId: string) => void;\n  onLoadMore: () => void;\n  onSearch: (searchQuery: string) => void;\n  projects?: GitlabProject[];\n  projectsPaging: T.Paging;\n  searching: boolean;\n  searchQuery: string;\n}\n\nexport default function GitlabProjectSelectionForm(props: GitlabProjectSelectionFormProps) {\n  const {\n    importingGitlabProjectId,\n    loadingMore,\n    projects = [],\n    projectsPaging,\n    searching,\n    searchQuery\n  } = props;\n\n  if (projects.length === 0 && searchQuery.length === 0 && !searching) {\n    return (\n      <Alert className=\"spacer-top\" variant=\"warning\">\n        <FormattedMessage\n          defaultMessage={translate('onboarding.create_project.gitlab.no_projects')}\n          id=\"onboarding.create_project.gitlab.no_projects\"\n          values={{\n            link: (\n              <Link\n                to={{\n                  pathname: '/projects/create',\n                  query: { mode: CreateProjectModes.GitLab, resetPat: 1 }\n                }}>\n                {translate('onboarding.create_project.update_your_token')}\n              </Link>\n            )\n          }}\n        />\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"boxed-group big-padded create-project-import-gitlab\">\n      <SearchBox\n        className=\"spacer\"\n        loading={searching}\n        minLength={3}\n        onChange={props.onSearch}\n        placeholder={translate('onboarding.create_project.gitlab.search_prompt')}\n      />\n\n      <hr />\n\n      {projects.length === 0 ? (\n        <div className=\"padded\">{translate('no_results')}</div>\n      ) : (\n        <table className=\"data zebra zebra-hover\">\n          <tbody>\n            {projects.map(project => (\n              <tr key={project.id}>\n                <td>\n                  <Tooltip overlay={project.slug}>\n                    <strong className=\"project-name display-inline-block text-ellipsis\">\n                      {project.sqProjectKey ? (\n                        <Link to={getProjectUrl(project.sqProjectKey)}>\n                          <QualifierIcon\n                            className=\"spacer-right\"\n                            qualifier={ComponentQualifier.Project}\n                          />\n                          {project.sqProjectName}\n                        </Link>\n                      ) : (\n                        project.name\n                      )}\n                    </strong>\n                  </Tooltip>\n                  <br />\n                  <Tooltip overlay={project.pathSlug}>\n                    <span className=\"text-muted project-path display-inline-block text-ellipsis\">\n                      {project.pathName}\n                    </span>\n                  </Tooltip>\n                </td>\n                <td>\n                  <a\n                    className=\"display-inline-flex-center big-spacer-right\"\n                    href={project.url}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\">\n                    <DetachIcon className=\"little-spacer-right\" />\n                    {translate('onboarding.create_project.gitlab.link')}\n                  </a>\n                </td>\n                {project.sqProjectKey ? (\n                  <td>\n                    <span className=\"display-flex-center display-flex-justify-end already-set-up\">\n                      <CheckIcon className=\"little-spacer-right\" size={12} />\n                      {translate('onboarding.create_project.repository_imported')}\n                    </span>\n                  </td>\n                ) : (\n                  <td className=\"text-right\">\n                    <Button\n                      disabled={!!importingGitlabProjectId}\n                      onClick={() => props.onImport(project.id)}>\n                      {translate('onboarding.create_project.gitlab.set_up')}\n                      {importingGitlabProjectId === project.id && (\n                        <DeferredSpinner className=\"spacer-left\" />\n                      )}\n                    </Button>\n                  </td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      <ListFooter\n        count={projects.length}\n        loadMore={props.onLoadMore}\n        loading={loadingMore}\n        pageSize={projectsPaging.pageSize}\n        total={projectsPaging.total}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { GitlabProject } from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport GitlabProjectSelectionForm from './GitlabProjectSelectionForm';\nimport PersonalAccessTokenForm from './PersonalAccessTokenForm';\nimport WrongBindingCountAlert from './WrongBindingCountAlert';\n\nexport interface GitlabProjectCreateRendererProps {\n  canAdmin?: boolean;\n  importingGitlabProjectId?: string;\n  loading: boolean;\n  loadingMore: boolean;\n  onImport: (gitlabProjectId: string) => void;\n  onLoadMore: () => void;\n  onPersonalAccessTokenCreate: (pat: string) => void;\n  onSearch: (searchQuery: string) => void;\n  projects?: GitlabProject[];\n  projectsPaging: T.Paging;\n  searching: boolean;\n  searchQuery: string;\n  settings?: AlmSettingsInstance;\n  showPersonalAccessTokenForm?: boolean;\n  submittingToken?: boolean;\n  tokenValidationErrorMessage?: string;\n}\n\nexport default function GitlabProjectCreateRenderer(props: GitlabProjectCreateRendererProps) {\n  const {\n    canAdmin,\n    importingGitlabProjectId,\n    loading,\n    loadingMore,\n    projects,\n    projectsPaging,\n    searching,\n    searchQuery,\n    settings,\n    showPersonalAccessTokenForm,\n    submittingToken,\n    tokenValidationErrorMessage\n  } = props;\n\n  return (\n    <>\n      <CreateProjectPageHeader\n        title={\n          <span className=\"text-middle\">\n            <img\n              alt=\"\" // Should be ignored by screen readers\n              className=\"spacer-right\"\n              height=\"24\"\n              src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n            />\n            {translate('onboarding.create_project.gitlab.title')}\n          </span>\n        }\n      />\n\n      {loading && <i className=\"spinner\" />}\n\n      {!loading && !settings && (\n        <WrongBindingCountAlert alm={AlmKeys.GitLab} canAdmin={!!canAdmin} />\n      )}\n\n      {!loading &&\n        settings &&\n        (showPersonalAccessTokenForm ? (\n          <PersonalAccessTokenForm\n            almSetting={settings}\n            onPersonalAccessTokenCreate={props.onPersonalAccessTokenCreate}\n            submitting={submittingToken}\n            validationFailed={Boolean(tokenValidationErrorMessage)}\n            validationErrorMessage={tokenValidationErrorMessage}\n          />\n        ) : (\n          <GitlabProjectSelectionForm\n            importingGitlabProjectId={importingGitlabProjectId}\n            loadingMore={loadingMore}\n            onImport={props.onImport}\n            onLoadMore={props.onLoadMore}\n            onSearch={props.onSearch}\n            projects={projects}\n            projectsPaging={projectsPaging}\n            searching={searching}\n            searchQuery={searchQuery}\n          />\n        ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  checkPersonalAccessTokenIsValid,\n  getGitlabProjects,\n  importGitlabProject,\n  setAlmPersonalAccessToken\n} from '../../../api/alm-integrations';\nimport { GitlabProject } from '../../../types/alm-integration';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport GitlabProjectCreateRenderer from './GitlabProjectCreateRenderer';\n\ninterface Props extends Pick<WithRouterProps, 'location' | 'router'> {\n  canAdmin: boolean;\n  loadingBindings: boolean;\n  onProjectCreate: (projectKeys: string[]) => void;\n  settings: AlmSettingsInstance[];\n}\n\ninterface State {\n  importingGitlabProjectId?: string;\n  loading: boolean;\n  loadingMore: boolean;\n  projects?: GitlabProject[];\n  projectsPaging: T.Paging;\n  submittingToken: boolean;\n  tokenIsValid: boolean;\n  tokenValidationErrorMessage?: string;\n  searching: boolean;\n  searchQuery: string;\n  settings?: AlmSettingsInstance;\n}\n\nconst GITLAB_PROJECTS_PAGESIZE = 30;\n\nexport default class GitlabProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingMore: false,\n      projectsPaging: { pageIndex: 1, total: 0, pageSize: GITLAB_PROJECTS_PAGESIZE },\n      tokenIsValid: false,\n      searching: false,\n      searchQuery: '',\n      settings: props.settings.length === 1 ? props.settings[0] : undefined,\n      submittingToken: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchInitialData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.settings.length === 0 && this.props.settings.length > 0) {\n      this.setState(\n        { settings: this.props.settings.length === 1 ? this.props.settings[0] : undefined },\n        () => this.fetchInitialData()\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchInitialData = async () => {\n    this.setState({ loading: true });\n\n    const { status, error } = await this.checkPersonalAccessToken();\n\n    let result;\n    if (status) {\n      result = await this.fetchProjects();\n    }\n\n    if (this.mounted) {\n      if (result) {\n        const { projects, projectsPaging } = result;\n\n        this.setState({\n          tokenIsValid: status,\n          loading: false,\n          projects,\n          projectsPaging\n        });\n      } else {\n        this.setState({\n          loading: false,\n          tokenValidationErrorMessage: !status ? error : undefined\n        });\n      }\n    }\n  };\n\n  checkPersonalAccessToken = () => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve({\n        status: false,\n        error: translate('onboarding.create_project.pat_incorrect', AlmKeys.GitLab)\n      });\n    }\n\n    return checkPersonalAccessTokenIsValid(settings.key);\n  };\n\n  handleError = () => {\n    if (this.mounted) {\n      this.setState({ tokenIsValid: false });\n    }\n\n    return undefined;\n  };\n\n  fetchProjects = async (pageIndex = 1, query?: string) => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(undefined);\n    }\n\n    try {\n      return await getGitlabProjects({\n        almSetting: settings.key,\n        page: pageIndex,\n        pageSize: GITLAB_PROJECTS_PAGESIZE,\n        query\n      });\n    } catch (_) {\n      return this.handleError();\n    }\n  };\n\n  doImport = async (gitlabProjectId: string) => {\n    const { settings } = this.state;\n\n    if (!settings) {\n      return Promise.resolve(undefined);\n    }\n\n    try {\n      return await importGitlabProject({\n        almSetting: settings.key,\n        gitlabProjectId\n      });\n    } catch (_) {\n      return this.handleError();\n    }\n  };\n\n  handleImport = async (gitlabProjectId: string) => {\n    this.setState({ importingGitlabProjectId: gitlabProjectId });\n\n    const result = await this.doImport(gitlabProjectId);\n\n    if (this.mounted) {\n      this.setState({ importingGitlabProjectId: undefined });\n\n      if (result) {\n        this.props.onProjectCreate([result.project.key]);\n      }\n    }\n  };\n\n  handleLoadMore = async () => {\n    this.setState({ loadingMore: true });\n\n    const {\n      projectsPaging: { pageIndex },\n      searchQuery\n    } = this.state;\n\n    const result = await this.fetchProjects(pageIndex + 1, searchQuery);\n\n    if (this.mounted) {\n      this.setState(({ projects = [], projectsPaging }) => ({\n        loadingMore: false,\n        projects: result ? [...projects, ...result.projects] : projects,\n        projectsPaging: result ? result.projectsPaging : projectsPaging\n      }));\n    }\n  };\n\n  handleSearch = async (searchQuery: string) => {\n    this.setState({ searching: true, searchQuery });\n\n    const result = await this.fetchProjects(1, searchQuery);\n\n    if (this.mounted) {\n      this.setState(({ projects, projectsPaging }) => ({\n        searching: false,\n        projects: result ? result.projects : projects,\n        projectsPaging: result ? result.projectsPaging : projectsPaging\n      }));\n    }\n  };\n\n  cleanUrl = () => {\n    const { location, router } = this.props;\n    delete location.query.resetPat;\n    router.replace(location);\n  };\n\n  handlePersonalAccessTokenCreate = async (token: string) => {\n    const { settings } = this.state;\n\n    if (!settings || token.length < 1) {\n      return;\n    }\n\n    this.setState({ submittingToken: true, tokenValidationErrorMessage: undefined });\n\n    try {\n      await setAlmPersonalAccessToken(settings.key, token);\n\n      const { status, error } = await this.checkPersonalAccessToken();\n\n      if (this.mounted) {\n        this.setState({\n          submittingToken: false,\n          tokenIsValid: status,\n          tokenValidationErrorMessage: error\n        });\n\n        if (status) {\n          this.cleanUrl();\n          await this.fetchInitialData();\n        }\n      }\n    } catch (e) {\n      if (this.mounted) {\n        this.setState({ submittingToken: false });\n      }\n    }\n  };\n\n  render() {\n    const { canAdmin, loadingBindings, location } = this.props;\n    const {\n      importingGitlabProjectId,\n      loading,\n      loadingMore,\n      projects,\n      projectsPaging,\n      tokenIsValid,\n      searching,\n      searchQuery,\n      settings,\n      submittingToken,\n      tokenValidationErrorMessage\n    } = this.state;\n\n    return (\n      <GitlabProjectCreateRenderer\n        settings={settings}\n        canAdmin={canAdmin}\n        importingGitlabProjectId={importingGitlabProjectId}\n        loading={loading || loadingBindings}\n        loadingMore={loadingMore}\n        onImport={this.handleImport}\n        onLoadMore={this.handleLoadMore}\n        onPersonalAccessTokenCreate={this.handlePersonalAccessTokenCreate}\n        onSearch={this.handleSearch}\n        projects={projects}\n        projectsPaging={projectsPaging}\n        searching={searching}\n        searchQuery={searchQuery}\n        showPersonalAccessTokenForm={!tokenIsValid || Boolean(location.query.resetPat)}\n        submittingToken={submittingToken}\n        tokenValidationErrorMessage={tokenValidationErrorMessage}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createProject, doesComponentExists } from '../../../api/components';\nimport ProjectKeyInput from '../../../components/common/ProjectKeyInput';\nimport { validateProjectKey } from '../../../helpers/projects';\nimport { ProjectKeyValidationResult } from '../../../types/component';\nimport { PROJECT_NAME_MAX_LEN } from './constants';\nimport CreateProjectPageHeader from './CreateProjectPageHeader';\nimport './ManualProjectCreate.css';\n\ninterface Props {\n  onProjectCreate: (projectKeys: string[]) => void;\n}\n\ninterface State {\n  projectName: string;\n  projectNameChanged: boolean;\n  projectNameError?: string;\n  projectKey: string;\n  projectKeyError?: string;\n  submitting: boolean;\n  touched: boolean;\n  validating: boolean;\n}\n\ntype ValidState = State & Required<Pick<State, 'projectKey' | 'projectName'>>;\n\nexport default class ManualProjectCreate extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      projectKey: '',\n      projectName: '',\n      projectNameChanged: false,\n      submitting: false,\n      touched: false,\n      validating: false\n    };\n    this.checkFreeKey = debounce(this.checkFreeKey, 250);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkFreeKey = (key: string) => {\n    return doesComponentExists({ component: key })\n      .then(alreadyExist => {\n        if (this.mounted && key === this.state.projectKey) {\n          if (!alreadyExist) {\n            this.setState({ projectKeyError: undefined, validating: false });\n          } else {\n            this.setState({\n              projectKeyError: translate('onboarding.create_project.project_key.taken'),\n              touched: true,\n              validating: false\n            });\n          }\n        }\n      })\n      .catch(() => {\n        if (this.mounted && key === this.state.projectKey) {\n          this.setState({ projectKeyError: undefined, validating: false });\n        }\n      });\n  };\n\n  canSubmit(state: State): state is ValidState {\n    const { projectKey, projectKeyError, projectName, projectNameError } = state;\n    return Boolean(\n      projectKeyError === undefined &&\n        projectNameError === undefined &&\n        projectKey.length > 0 &&\n        projectName.length > 0\n    );\n  }\n\n  handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { state } = this;\n    if (this.canSubmit(state)) {\n      this.setState({ submitting: true });\n      createProject({\n        project: state.projectKey,\n        name: (state.projectName || state.projectKey).trim()\n      }).then(\n        ({ project }) => this.props.onProjectCreate([project.key]),\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleProjectKeyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectKey = event.currentTarget.value || '';\n    const projectKeyError = this.validateKey(projectKey);\n\n    this.setState(prevState => {\n      const projectName = prevState.projectNameChanged ? prevState.projectName : projectKey;\n      return {\n        projectKey,\n        projectKeyError,\n        projectName,\n        projectNameError: this.validateName(projectName),\n        touched: true,\n        validating: projectKeyError === undefined\n      };\n    });\n\n    if (projectKeyError === undefined) {\n      this.checkFreeKey(projectKey);\n    }\n  };\n\n  handleProjectNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const projectName = event.currentTarget.value;\n    this.setState({\n      projectName,\n      projectNameChanged: true,\n      projectNameError: this.validateName(projectName)\n    });\n  };\n\n  validateKey = (projectKey: string) => {\n    const result = validateProjectKey(projectKey);\n    return result === ProjectKeyValidationResult.Valid\n      ? undefined\n      : translate('onboarding.create_project.project_key.error', result);\n  };\n\n  validateName = (projectName: string) => {\n    if (projectName.length === 0) {\n      return translate('onboarding.create_project.display_name.error.empty');\n    } else if (projectName.length > PROJECT_NAME_MAX_LEN) {\n      return translate('onboarding.create_project.display_name.error.too_long');\n    }\n    return undefined;\n  };\n\n  render() {\n    const {\n      projectKey,\n      projectKeyError,\n      projectName,\n      projectNameError,\n      submitting,\n      touched,\n      validating\n    } = this.state;\n    const projectNameIsInvalid = touched && projectNameError !== undefined;\n    const projectNameIsValid = touched && projectNameError === undefined;\n\n    return (\n      <>\n        <CreateProjectPageHeader title={translate('onboarding.create_project.setup_manually')} />\n\n        <div className=\"create-project-manual\">\n          <div className=\"flex-1 huge-spacer-right\">\n            <form className=\"manual-project-create\" onSubmit={this.handleFormSubmit}>\n              <MandatoryFieldsExplanation className=\"big-spacer-bottom\" />\n\n              <ProjectKeyInput\n                error={projectKeyError}\n                help={translate('onboarding.create_project.project_key.help')}\n                label={translate('onboarding.create_project.project_key')}\n                onProjectKeyChange={this.handleProjectKeyChange}\n                projectKey={projectKey}\n                touched={touched}\n                validating={validating}\n              />\n\n              <ValidationInput\n                className=\"form-field\"\n                description={translate('onboarding.create_project.display_name.description')}\n                error={projectNameError}\n                help={translate('onboarding.create_project.display_name.help')}\n                id=\"project-name\"\n                isInvalid={projectNameIsInvalid}\n                isValid={projectNameIsValid}\n                label={translate('onboarding.create_project.display_name')}\n                required={true}>\n                <input\n                  className={classNames('input-super-large', {\n                    'is-invalid': projectNameIsInvalid,\n                    'is-valid': projectNameIsValid\n                  })}\n                  id=\"project-name\"\n                  maxLength={PROJECT_NAME_MAX_LEN}\n                  minLength={1}\n                  onChange={this.handleProjectNameChange}\n                  type=\"text\"\n                  value={projectName}\n                />\n              </ValidationInput>\n\n              <SubmitButton disabled={!this.canSubmit(this.state) || submitting}>\n                {translate('set_up')}\n              </SubmitButton>\n              <DeferredSpinner className=\"spacer-left\" loading={submitting} />\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getAlmSettings } from '../../../api/alm-settings';\nimport A11ySkipTarget from '../../../app/components/a11y/A11ySkipTarget';\nimport { whenLoggedIn } from '../../../components/hoc/whenLoggedIn';\nimport { withAppState } from '../../../components/hoc/withAppState';\nimport { getProjectUrl } from '../../../helpers/urls';\nimport { AlmKeys, AlmSettingsInstance } from '../../../types/alm-settings';\nimport AzureProjectCreate from './AzureProjectCreate';\nimport BitbucketProjectCreate from './BitbucketProjectCreate';\nimport CreateProjectModeSelection from './CreateProjectModeSelection';\nimport GitHubProjectCreate from './GitHubProjectCreate';\nimport GitlabProjectCreate from './GitlabProjectCreate';\nimport ManualProjectCreate from './ManualProjectCreate';\nimport './style.css';\nimport { CreateProjectModes } from './types';\n\ninterface Props extends Pick<WithRouterProps, 'router' | 'location'> {\n  appState: Pick<T.AppState, 'canAdmin'>;\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  azureSettings: AlmSettingsInstance[];\n  bitbucketSettings: AlmSettingsInstance[];\n  githubSettings: AlmSettingsInstance[];\n  gitlabSettings: AlmSettingsInstance[];\n  loading: boolean;\n}\n\nexport class CreateProjectPage extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    azureSettings: [],\n    bitbucketSettings: [],\n    githubSettings: [],\n    gitlabSettings: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchAlmBindings();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchAlmBindings = () => {\n    this.setState({ loading: true });\n    getAlmSettings()\n      .then(almSettings => {\n        if (this.mounted) {\n          this.setState({\n            azureSettings: almSettings.filter(s => s.alm === AlmKeys.Azure),\n            bitbucketSettings: almSettings.filter(s => s.alm === AlmKeys.BitbucketServer),\n            githubSettings: almSettings.filter(s => s.alm === AlmKeys.GitHub),\n            gitlabSettings: almSettings.filter(s => s.alm === AlmKeys.GitLab),\n            loading: false\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  handleModeSelect = (mode: CreateProjectModes) => {\n    const { router, location } = this.props;\n    router.push({\n      pathname: location.pathname,\n      query: { mode }\n    });\n  };\n\n  handleProjectCreate = (projectKeys: string[]) => {\n    if (projectKeys.length === 1) {\n      this.props.router.push(getProjectUrl(projectKeys[0]));\n    }\n  };\n\n  renderForm(mode?: CreateProjectModes) {\n    const {\n      appState: { canAdmin },\n      location,\n      router\n    } = this.props;\n    const {\n      azureSettings,\n      bitbucketSettings,\n      githubSettings,\n      gitlabSettings,\n      loading\n    } = this.state;\n\n    switch (mode) {\n      case CreateProjectModes.AzureDevOps: {\n        return (\n          <AzureProjectCreate\n            canAdmin={!!canAdmin}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n            router={router}\n            settings={azureSettings}\n          />\n        );\n      }\n      case CreateProjectModes.BitbucketServer: {\n        return (\n          <BitbucketProjectCreate\n            canAdmin={!!canAdmin}\n            bitbucketSettings={bitbucketSettings}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n          />\n        );\n      }\n      case CreateProjectModes.GitHub: {\n        return (\n          <GitHubProjectCreate\n            canAdmin={!!canAdmin}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n            router={router}\n            settings={githubSettings}\n          />\n        );\n      }\n      case CreateProjectModes.GitLab: {\n        return (\n          <GitlabProjectCreate\n            canAdmin={!!canAdmin}\n            loadingBindings={loading}\n            location={location}\n            onProjectCreate={this.handleProjectCreate}\n            router={router}\n            settings={gitlabSettings}\n          />\n        );\n      }\n      case CreateProjectModes.Manual: {\n        return <ManualProjectCreate onProjectCreate={this.handleProjectCreate} />;\n      }\n      default: {\n        const almCounts = {\n          [AlmKeys.Azure]: azureSettings.length,\n          [AlmKeys.BitbucketServer]: bitbucketSettings.length,\n          [AlmKeys.GitHub]: githubSettings.length,\n          [AlmKeys.GitLab]: gitlabSettings.length\n        };\n        return (\n          <CreateProjectModeSelection\n            almCounts={almCounts}\n            loadingBindings={loading}\n            onSelectMode={this.handleModeSelect}\n          />\n        );\n      }\n    }\n  }\n\n  render() {\n    const { location } = this.props;\n    const mode: CreateProjectModes | undefined = location.query?.mode;\n\n    return (\n      <>\n        <Helmet title={translate('my_account.create_new.TRK')} titleTemplate=\"%s\" />\n        <A11ySkipTarget anchor=\"create_project_main\" />\n        <div className=\"page page-limited huge-spacer-bottom position-relative\" id=\"create-project\">\n          {this.renderForm(mode)}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default whenLoggedIn(withAppState(CreateProjectPage));\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { A11yContext } from './A11yContext';\n\ninterface Props {\n  anchor: string;\n  label?: string;\n  weight?: number;\n}\n\nexport default function A11ySkipTarget(props: Props) {\n  return (\n    <A11yContext.Consumer>\n      {({ addA11ySkipLink, removeA11ySkipLink }) => (\n        <A11ySkipTargetInner\n          addA11ySkipLink={addA11ySkipLink}\n          removeA11ySkipLink={removeA11ySkipLink}\n          {...props}\n        />\n      )}\n    </A11yContext.Consumer>\n  );\n}\n\ninterface InnerProps {\n  addA11ySkipLink: (link: T.A11ySkipLink) => void;\n  removeA11ySkipLink: (link: T.A11ySkipLink) => void;\n}\n\nexport class A11ySkipTargetInner extends React.PureComponent<Props & InnerProps> {\n  componentDidMount() {\n    this.props.addA11ySkipLink(this.getLink());\n  }\n\n  componentWillUnmount() {\n    this.props.removeA11ySkipLink(this.getLink());\n  }\n\n  getLink = (): T.A11ySkipLink => {\n    const { anchor: key, label = translate('skip_to_content'), weight } = this.props;\n    return { key, label, weight };\n  };\n\n  render() {\n    const { anchor } = this.props;\n    return <span id={`a11y_target__${anchor}`} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { get, getJSON, HttpStatus, parseError, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBindingParams,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition,\n  BitbucketCloudProjectAlmBindingParams,\n  BitbucketProjectAlmBindingParams,\n  GithubBindingDefinition,\n  GithubProjectAlmBindingParams,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBindingParams,\n  ProjectAlmBindingResponse\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions');\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getAlmSettingsNoCatch(project).catch(throwGlobalError);\n}\n\nexport function getAlmSettingsNoCatch(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project }).then(({ almSettings }) => almSettings);\n}\n\nexport function validateAlmSettings(key: string): Promise<string> {\n  return get('/api/alm_settings/validate', { key })\n    .then(() => {\n      return '';\n    })\n    .catch((response: Response) => {\n      if (response.status === HttpStatus.BadRequest) {\n        return parseError(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    });\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketCloudConfiguration(data: BitbucketCloudBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketCloudConfiguration(\n  data: BitbucketCloudBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBindingResponse> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketCloudBinding(data: BitbucketCloudProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucketcloud_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport DetachIcon from 'sonar-ui-common/components/icons/DetachIcon';\nimport { isWebUri } from 'valid-url';\n\nexport interface DocumentationTooltipProps {\n  children?: React.ReactNode;\n  className?: string;\n  content?: React.ReactNode;\n  links?: Array<{ href: string; label: string; inPlace?: boolean }>;\n  title?: string;\n}\n\nexport default function DocumentationTooltip(props: DocumentationTooltipProps) {\n  const { className, content, links, title } = props;\n\n  return (\n    <HelpTooltip\n      className={className}\n      overlay={\n        <div className=\"big-padded-top big-padded-bottom\">\n          {title && (\n            <div className=\"spacer-bottom\">\n              <strong>{title}</strong>\n            </div>\n          )}\n\n          {content && <p>{content}</p>}\n\n          {links && (\n            <>\n              <hr className=\"big-spacer-top big-spacer-bottom\" />\n\n              {links.map(({ href, label, inPlace }) => (\n                <div className=\"little-spacer-bottom\" key={label}>\n                  {inPlace ? (\n                    <Link to={href}>\n                      <span>{label}</span>\n                    </Link>\n                  ) : (\n                    <a\n                      className=\"display-inline-flex-center link-with-icon\"\n                      href={href}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\">\n                      {isWebUri(href) && <DetachIcon size={14} className=\"spacer-right\" />}\n                      <span>{label}</span>\n                    </a>\n                  )}\n                </div>\n              ))}\n            </>\n          )}\n        </div>\n      }>\n      {props.children}\n    </HelpTooltip>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport handleRequiredAuthentication from 'sonar-ui-common/helpers/handleRequiredAuthentication';\nimport { isLoggedIn } from '../../helpers/users';\nimport { getWrappedDisplayName } from './utils';\nimport { withCurrentUser } from './withCurrentUser';\n\nexport function whenLoggedIn<P>(WrappedComponent: React.ComponentType<P>) {\n  class Wrapper extends React.Component<P & { currentUser: T.CurrentUser }> {\n    static displayName = getWrappedDisplayName(WrappedComponent, 'whenLoggedIn');\n\n    componentDidMount() {\n      if (!isLoggedIn(this.props.currentUser)) {\n        handleRequiredAuthentication();\n      }\n    }\n\n    render() {\n      if (isLoggedIn(this.props.currentUser)) {\n        return <WrappedComponent {...this.props} />;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  return withCurrentUser(Wrapper);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { PROJECT_KEY_MAX_LEN } from '../../helpers/constants';\n\nexport interface ProjectKeyInputProps {\n  error?: string;\n  help?: string;\n  label?: string;\n  onProjectKeyChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  projectKey?: string;\n  touched: boolean;\n  validating?: boolean;\n}\n\nexport default function ProjectKeyInput(props: ProjectKeyInputProps) {\n  const { error, help, label, placeholder, projectKey, touched, validating } = props;\n\n  const isInvalid = touched && error !== undefined;\n  const isValid = touched && !validating && error === undefined;\n\n  return (\n    <ValidationInput\n      className=\"form-field\"\n      description={translate('onboarding.create_project.project_key.description')}\n      error={error}\n      help={help}\n      id=\"project-key\"\n      isInvalid={isInvalid}\n      isValid={isValid}\n      label={label}\n      required={label !== undefined}>\n      <input\n        autoFocus={true}\n        className={classNames('input-super-large', {\n          'is-invalid': isInvalid,\n          'is-valid': isValid\n        })}\n        id=\"project-key\"\n        maxLength={PROJECT_KEY_MAX_LEN}\n        minLength={1}\n        onChange={props.onProjectKeyChange}\n        placeholder={placeholder}\n        type=\"text\"\n        value={projectKey}\n      />\n    </ValidationInput>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2021 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { ProjectKeyValidationResult } from '../types/component';\nimport { PROJECT_KEY_MAX_LEN } from './constants';\n\nexport function validateProjectKey(projectKey: string): ProjectKeyValidationResult {\n  // This is the regex used on the backend:\n  //   [\\p{Alnum}\\-_.:]*[\\p{Alpha}\\-_.:]+[\\p{Alnum}\\-_.:]*\n  // See sonar-core/src/main/java/org/sonar/core/component/ComponentKeys.java\n  const regex = /^[\\w\\-.:]*[a-z\\-_.:]+[\\w\\-.:]*$/i;\n  if (projectKey.length === 0) {\n    return ProjectKeyValidationResult.Empty;\n  } else if (projectKey.length > PROJECT_KEY_MAX_LEN) {\n    return ProjectKeyValidationResult.TooLong;\n  } else if (regex.test(projectKey)) {\n    return ProjectKeyValidationResult.Valid;\n  } else {\n    return /^[0-9]+$/.test(projectKey)\n      ? ProjectKeyValidationResult.OnlyDigits\n      : ProjectKeyValidationResult.InvalidChar;\n  }\n}\n"],"sourceRoot":""}